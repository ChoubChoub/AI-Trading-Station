#define __S_IFBLK 0060000
#define SOL_LLC 268
#define _BITS_SCHED_H 1
#define _SC_CHAR_MIN _SC_CHAR_MIN
#define __SSP_STRONG__ 3
#define __attr_access(x) __attribute__ ((__access__ x))
#define __DBL_MIN_EXP__ (-1021)
#define CI_CFG_UDP_RCVBUF_MAX 212992
#define EMULTIHOP 72
#define __CI_NET_IPVX_SH_H__ 
#define CI_TCP_URG_COMING 0x0100
#define ETH_P_ATALK 0x809B
#define ETH_P_NSH 0x894F
#define SOCK_TXREHASH_ENABLED 1
#define AF_MAX PF_MAX
#define SI_ASYNCNL SI_ASYNCNL
#define ci_dllist_put_back ci_dllist_push
#define CI_TCP_EXT_STATS_INC_TCP_FORWARD_RETRANS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_forward_retrans )
#define __CFLOAT32 _Complex _Float32
#define CI_EPLOCK_NETIF_SOCKET_LIST 0x001fffffULL
#define IFF_SLAVE IFF_SLAVE
#define __UINT_LEAST16_MAX__ 0xffff
#define IP_ROUTER_ALERT 5
#define NLMSG_LENGTH(len) ((len) + NLMSG_HDRLEN)
#define ci_netif_ep_get(ni,s) ((ni)->ep_tbl[OO_SP_TO_INT(s)])
#define CMSG_NXTHDR(mhdr,cmsg) __cmsg_nxthdr (mhdr, cmsg)
#define ETH_P_IBOE 0x8915
#define __FLT128_MAX_10_EXP__ 4932
#define ef_eventq_has_event(vi) (vi)->ops.eventq_has_event((vi))
#define _SC_PII_OSI_COTS _SC_PII_OSI_COTS
#define _SC_NGROUPS_MAX _SC_NGROUPS_MAX
#define CI_PIPE_ZC_WRITE_FLAG_FORCE (1<<16)
#define ci_ss_assert_impl(ni,x,y) ci_ss_assert2((ni), !(x) || (y), x, y)
#define sa_sigaction __sigaction_handler.sa_sigaction
#define ifr_name ifr_ifrn.ifrn_name
#define __NFDBITS (8 * (int) sizeof (__fd_mask))
#define EF_EVENT_FLAG_PS_NEXT_BUFFER 0x10
#define _SC_SPIN_LOCKS _SC_SPIN_LOCKS
#define EUSERS 87
#define _PC_MAX_INPUT _PC_MAX_INPUT
#define si_fd _sifields._sigpoll.si_fd
#define _T_WCHAR_ 
#define _SC_IPV6 _SC_IPV6
#define tcp_rcv_wnd_right_edge_sent(ts) ((ts)->rcv_wnd_right_edge_sent)
#define SIOCDELDLCI 0x8981
#define ETH_P_802_3_MIN 0x0600
#define __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI 0
#define NI_MAXSERV 32
#define tcp_rcv_wnd_advertised(ts) ((ts)->rcv_wnd_advertised)
#define _ASM_GENERIC_IOCTL_H 
#define _SC_XOPEN_REALTIME _SC_XOPEN_REALTIME
#define OO_CMSG_FLAGS_FMT "%s%s%s%s%s%s%s%s"
#define __CFLOAT64 _Complex _Float64
#define OO_ACCESS_ONCE(p) (*(volatile __typeof__(p) *)&(p))
#define CI_TCP_TCONST_RTO_MAX (120*1000)
#define PF_IRDA 23
#define CI_MAC_PRINTF_FORMAT "%02X:%02X:%02X:%02X:%02X:%02X"
#define OO_IOC_VETH_ACCELERATION_ENABLED OO_IOC_NONE(VETH_ACCELERATION_ENABLED)
#define CI_SA(sa) ((struct sockaddr *)(sa))
#define si_arch _sifields._sigsys._arch
#define ID_TO_SOCK_CMN(ni,id) ID_TO_foo((ni), (id), SOCK_CMN)
#define ef_eventq_poll(evq,evs,evs_len) (evq)->ops.eventq_poll((evq), (evs), (evs_len))
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_ON_SYN(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_on_syn )
#define ACCESSPERMS (S_IRWXU|S_IRWXG|S_IRWXO)
#define __S64_TYPE long int
#define LNTFS_FMT LPF "%d:%d/"FD_FMT" %s "
#define PKT_TCP_TSO_TSVAL(pkt) CI_BSWAP_BE32(*(ci_uint32*) (CI_TCP_HDR_OPTS(PKT_TCP_HDR(pkt)) + 4))
#define CI_SOCK_FLAG_KALIVE 0x00000002
#define CI_SB_FLAG_TCP_POST_POLL 0x4
#define CI_TCP_FLAG_CWR 0x80
#define __SQUAD_TYPE long int
#define __SIZEOF_PTHREAD_CONDATTR_T 4
#define TS_FMT "%d(%u)"
#define CI_IP_STATS_INC_IN6_DELIVERS(netif) __CI_IP_STATS_INC( (netif), in6_delivers)
#define _SC_EXPR_NEST_MAX _SC_EXPR_NEST_MAX
#define _BITS_SIGINFO_CONSTS_H 1
#define SIGBUS 7
#define SIOCSIFHWADDR 0x8924
#define CI_TCP_TCONST_IDLE 50
#define __GNU_LIBRARY__ 6
#define CI_TCPT_FLAG_NO_QUICKACK 0x1000
#define __CI_BUILD_ASSERT_ILOATHECPP(_x) __CI_BUILD_ASSERT__ ##_x
#define OOFA_IP_PROTO(proto) ((proto) == IPPROTO_TCP ? "TCP" : (proto) == IPPROTO_UDP ? "UDP" : "???")
#define __CHAR_BIT__ 8
#define OO_VI_FLAGS_HW_MULTICAST_REPLICATION 0x100
#define SO_DOMAIN 39
#define LOG_IP(x) LOG_FL(CI_TP_LOG_IP, x)
#define FD_FMT "%d"
#define ci_ethertype2af(ether_type) AF_INET
#define ci_netif_pkt_release_1ref(ni,pkt) ci_netif_pkt_release(ni, pkt)
#define CI_CFG_TCP_SHARED_LOCAL_PORTS 1
#define _SYS_STAT_H 1
#define EREMCHG 78
#define CI_CFG_UDP_RCVBUF_MIN CI_SOCK_MIN_RCVBUF
#define __CI_NETIF_STATS_MINMAX_SET(netif,Grp,Fld) do { int v = ((netif)->state)->stats_snapshot.Grp.range.Fld; if(((netif)->state)->stats_snapshot.Grp.min.Fld > v) ((netif)->state)->stats_snapshot.Grp.min.Fld = v; if(((netif)->state)->stats_snapshot.Grp.max.Fld < v) ((netif)->state)->stats_snapshot.Grp.max.Fld = v; } while(0)
#define ci_ss_assert_equiv(ni,x,y) ci_ss_assert2((ni), !(x)== !(y), x, y)
#define CI_UL_LOG_CALL 0x4000
#define CI_CFG_POSIX_CONNECT_AFTER_LISTEN 0
#define OO_IOC_DSHM_LIST OO_IOC_RW(DSHM_LIST, oo_dshm_list_t)
#define SIGTTIN 21
#define CI_IP6_IS_LINKLOCAL(a) ((((const ci_uint32 *) (a))[0] & CI_BSWAP_BE32(0xffc00000)) == CI_BSWAP_BE32(0xfe800000))
#define EACCES 13
#define NUD_REACHABLE 0x02
#define _SC_COLL_WEIGHTS_MAX _SC_COLL_WEIGHTS_MAX
#define IFF_ALLMULTI IFF_ALLMULTI
#define SOCK_RAW SOCK_RAW
#define NS_PRI_ARGS(n,s) NI_ID(n), SC_FMT(s)
#define ID_TO_UDP(ni,id) ID_TO_foo((ni), (id), UDP)
#define OO_IOC_PRINTK OO_IOC_W(PRINTK, char[CI_LOG_MAX_LINE])
#define EDESTADDRREQ 89
#define CICP_FWD_DATA_FLAG_ARP_MASK 0x3
#define TIOCSSOFTCAR 0x541A
#define si_pid _sifields._kill.si_pid
#define _CI_CFG_BITFIELD8 :8
#define CI_BUILD_ASSERT(e) typedef char __CI_BUILD_ASSERT_NAME(__COUNTER__)[(e)?1:-1] __attribute__((unused))
#define IP_TTL 2
#define CI_SOCK_FLAGS_SCALABLE (CI_SOCK_FLAG_TPROXY | CI_SOCK_FLAG_SCALACTIVE | CI_SOCK_FLAG_SCALPASSIVE)
#define OO_IOC_OS_SOCK_FD_GET OO_IOC_RW(OS_SOCK_FD_GET, oo_os_sock_fd_get_t)
#define PDP_ENDIAN __PDP_ENDIAN
#define stderr stderr
#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))
#define CI_IPID_MAX 0xffff
#define CI_CFG_NETIF_MAX_ENDPOINTS (1<<13)
#define _CS_POSIX_V7_LP64_OFF64_LINTFLAGS _CS_POSIX_V7_LP64_OFF64_LINTFLAGS
#define ci_fifo_dtor(f) do{ ci_assert(ci_fifo_valid(f)); ci_free((f)->fifo); }while(0)
#define __BFLT16_NORM_MAX__ 3.38953138925153547590470800371487867e+38BF16
#define OO_INTF_I_DUMP_NONE 0
#define va_start(v,l) __builtin_va_start(v,l)
#define SOCK_RDM SOCK_RDM
#define OO_IOC_OS_SOCK_RECVMSG OO_IOC_RW(OS_SOCK_RECVMSG, oo_os_sock_recvmsg_t)
#define _SC_V7_ILP32_OFF32 _SC_V7_ILP32_OFF32
#define ci_prefetch_ppc(addr) do{}while(0)
#define PF_DECnet 12
#define OO_FDFLAG_ARG(flags) (flags), OO_FDFLAG_TYPE_STR(flags), (flags & OO_FDFLAG_SERVICE) ? "service" : "app"
#define __CI_APP_H__ 
#define CP_MAX_INSTANCES 4096u
#define IPV6_CHECKSUM 7
#define EMLINK 31
#define __CI_EFRM_NIC_SET_H__ 
#define __ORDER_LITTLE_ENDIAN__ 1234
#define IP_MAX_MEMBERSHIPS 20
#define CI_IP_SOCK_STATS_INC_RXWAIT(ts) __CI_SOCK_STATS_INC( (ts), rx_wait )
#define sigev_notify_attributes _sigev_un._sigev_thread._attribute
#define ci_buffer_assert_valid(b) 
#define TIOCSERGETMULTI 0x545A
#define SIOCGIFADDR 0x8915
#define ipcache_lport_be16(ipcache) (((ci_uint16*) (&(ipcache)->ipx.ip4 + 1))[0])
#define ci_x86_mb() __asm__ __volatile__ ("lock; addl $0,0(%%rsp)":::"memory")
#define CI_TCP_EXT_STATS_INC_TIME_WAIT_RECYCLED(netif) __CI_TCP_EXT_STATS_INC( (netif), time_wait_recycled )
#define CI_CFG_ENDPOINT_MOVE 1
#define __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
#define ci_fifo_wr_adv(f,n) do{ (f)->fifo_wr_i = CI_FIFO_M((f), (f)->fifo_wr_i + (n)); }while(0)
#define CI_MY_BYTE_ORDER CI_LITTLE_ENDIAN
#define CI_LOG_E(x) x
#define CI_LOG_I(x) x
#define OO_IOC_EP_FILTER_MCAST_ADD OO_IOC_W(EP_FILTER_MCAST_ADD, oo_tcp_filter_mcast_t)
#define __CI_DRIVER_EFAB_OPEN_H__ 
#define IPPROTO_ROUTING IPPROTO_ROUTING
#define CI_LOG_W(x) x
#define EFRM_NOTICE_LIMITED(fmt,...) EFRM_LIMITED(EFRM_NOTICE(fmt, __VA_ARGS__))
#define CI_CFG_UL_INTERRUPT_HELPER 0
#define CI_TCP_LISTEN_SYNACK_RETRIES 5
#define MCAST_LEAVE_SOURCE_GROUP 47
#define __FLT32X_DECIMAL_DIG__ 17
#define F_RDLCK 0
#define TIOCSBRK 0x5427
#define __CI_EFRM_DEBUG_LINUX_H__ 
#define ef_eventq_check_event(vi,look_ahead) ef_eventq_has_many_events((vi), (look_ahead))
#define CI_TCPT_NEG_FLAGS (CI_TCPT_FLAG_TSO | CI_TCPT_FLAG_WSCL | CI_TCPT_FLAG_SACK | CI_TCPT_FLAG_ECN)
#define ETH_P_TRAILER 0x001C
#define TIOCGPTPEER _IO('T', 0x41)
#define CI_SB_AFLAG_O_ASYNC 0x20
#define CI_TCP_FLAGS_PRI_ARG(flg) CI_TCP_FLAG_STR((flg), URG, "Urg"), CI_TCP_FLAG_STR((flg), SYN, "Syn"), CI_TCP_FLAG_STR((flg), FIN, "Fin"), CI_TCP_FLAG_STR((flg), RST, "Rst"), CI_TCP_FLAG_STR((flg), ACK, "Ack"), CI_TCP_FLAG_STR((flg), PSH, "Psh"), CI_TCP_FLAG_STR((flg), CWR, "Cwr"), CI_TCP_FLAG_STR((flg), ECE, "Ece")
#define _SC_SPORADIC_SERVER _SC_SPORADIC_SERVER
#define _IO_USER_LOCK 0x8000
#define CI_TCP_FIN_WAIT1 (0x6000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_SYNCHRONISED | CI_TCP_STATE_ACCEPT_DATA | CI_TCP_STATE_TXQ_ACTIVE | CI_TCP_STATE_TIMEOUT_ORPHAN )
#define CI_TCP_FIN_WAIT2 (0x7000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_SYNCHRONISED | CI_TCP_STATE_ACCEPT_DATA | CI_TCP_STATE_TIMEOUT_ORPHAN )
#define CI_CFG_USAGE 5
#define IPV6_2292HOPOPTS 3
#define ci_atomic_alloc malloc
#define PRIx32 "x"
#define CI_TP_LOG_STATS 0x4000000
#define CI_SB_AFLAG_AVOID_INTERRUPTS 0x8
#define CI_TP_LOG_U 0x2
#define oo_usec_to_cycles64(ni,usec) __oo_usec_to_cycles64(IPTIMER_STATE(ni)->khz, usec)
#define ci_ss_assert_ge(ni,x,y) ci_ss_assert2((ni), (x)>=(y), x, y)
#define PTHREAD_CANCELED ((void *) -1)
#define IPV6_PMTUDISC_PROBE 3
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_ON_MEMORY(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_on_memory )
#define IP_FREEBIND 15
#define SCHED_RR 2
#define OO_SCP_BOUND_ADDR 0x4
#define __CI_UDP_STATS_INC(netif,Fld) __CI_NETIF_STATS_INC((netif), udp, Fld)
#define PKT_CHK(ni,id) __ci_pkt_chk((ni), (id), CI_TRUE, __FILE__, __LINE__)
#define CI_TCPT_FLAG_FIN_RECEIVED 0x4000
#define MAP_32BIT 0x40
#define IPTIMER_BUCKETNO(wheelno,abs) (((abs) >> ((wheelno)*CI_IPTIME_BUCKETBITS)) & CI_IPTIME_BUCKETMASK)
#define __FLOAT_WORD_ORDER __BYTE_ORDER
#define ETHERTYPE_AARP 0x80F3
#define ci_ffs64 __builtin_ffsll
#define _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
#define __x86_64 1
#define CI_CFG_TCP_DUPACK_THRESH_MAX 127
#define PKT_TCP_HDR(pkt) ((ci_tcp_hdr*) oo_ip_data(pkt))
#define IN6_ARE_ADDR_EQUAL(a,b) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); const struct in6_addr *__b = (const struct in6_addr *) (b); __a->__in6_u.__u6_addr32[0] == __b->__in6_u.__u6_addr32[0] && __a->__in6_u.__u6_addr32[1] == __b->__in6_u.__u6_addr32[1] && __a->__in6_u.__u6_addr32[2] == __b->__in6_u.__u6_addr32[2] && __a->__in6_u.__u6_addr32[3] == __b->__in6_u.__u6_addr32[3]; }))
#define __ASSERT_VOID_CAST (void)
#define __DEFINED_wchar_t 
#define OO_IOC_RW(XXX,t) _IOWR(OO_LINUX_IOC_BASE, OO_OP_ ##XXX, t)
#define PRIdFAST64 __PRI64_PREFIX "d"
#define IPV6_UNICAST_IF 76
#define __O_NOFOLLOW 0400000
#define CI_MAGIC_CHECK_TYPE(p,type) do { ci_assert_equal((((p)->magic & 0xf0000000u) >> 28), (unsigned int)(type)); } while (0)
#define _CS_LFS_CFLAGS _CS_LFS_CFLAGS
#define __CPU_COUNT_S(setsize,cpusetp) __sched_cpucount (setsize, cpusetp)
#define IPV6_TCLASS 67
#define PTHREAD_PROCESS_SHARED PTHREAD_PROCESS_SHARED
#define CI_DLLIST_DECLARE(name) ci_dllist name = CI_DLLIST_INITIALISER(name)
#define OO_IOC_OOF_CP_LLAP_UPDATE_FILTERS OO_IOC_W(OOF_CP_LLAP_UPDATE_FILTERS, struct oo_op_cplane_llapmod)
#define __STATE_STRUCT__ struct ci_tcp_state_s
#define ETH_P_PROFINET 0x8892
#define __sigval_t_defined 
#define __UINT_FAST32_TYPE__ long unsigned int
#define MCAST_LEAVE_GROUP 45
#define SOL_BLUETOOTH 274
#define IFF_MULTICAST IFF_MULTICAST
#define __DEFINED_size_t 
#define CI_IP_MAX_TTL 255
#define CI_IPX_DFLT_TTL_HOPLIMIT(af) (IS_AF_INET6(af) ? CI_IPV6_DFLT_HOPLIMIT : CI_IP_DFLT_TTL)
#define __CFLOAT128 _Complex _Float128
#define ETH_P_DIAG 0x6005
#define _SC_CPUTIME _SC_CPUTIME
#define __UINT_FAST64_MAX__ 0xffffffffffffffffUL
#define __SIG_ATOMIC_TYPE__ int
#define _ASM_GENERIC_ERRNO_BASE_H 
#define si_ptr _sifields._rt.si_sigval.sival_ptr
#define ci_vmalloc_fn malloc
#define __CI_TOOLS_SYSDEP_H__ 
#define CI_CFG_TCP_DUPACK_THRESH_BASE 3
#define ETH_P_REALTEK 0x8899
#define __DBL_MIN_10_EXP__ (-307)
#define PKT_IPX_TCP_HDR(af,pkt) ci_pkt_ipx_tcp_hdr(af, pkt)
#define ENOTTY 25
#define SO_ATTACH_REUSEPORT_CBPF 51
#define ci_ss_assert_lt(ni,x,y) ci_ss_assert2((ni), (x)< (y), x, y)
#define __ONLOAD_EPLOCK_H__ 
#define IPV6_MULTICAST_ALL 29
#define __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
#define S_IRGRP (S_IRUSR >> 3)
#define NETIF_INFO_AWATING_NETIF 1
#define _CS_V6_ENV _CS_V6_ENV
#define __LP64__ 1
#define CI_CFG_INT 2
#define SIOCGIFTXQLEN 0x8942
#define __CI_TOOLS_H__ 
#define CI_CFG_RX_DESC_BATCH 16
#define __u_char_defined 
#define __FLT32_HAS_DENORM__ 1
#define CQUIT 034
#define SC_FMT(s) OO_SP_FMT(SC_SP(s))
#define IPV6_HOPOPTS 54
#define CI_GET_ERROR(rc) (errno)
#define S_ISGID __S_ISGID
#define S_IFBLK __S_IFBLK
#define __NET_ETHERNET_H 1
#define _POSIX_TRACE_EVENT_FILTER -1
#define _PATH_NSSWITCH_CONF "/etc/nsswitch.conf"
#define SO_SECURITY_AUTHENTICATION 22
#define ci_ss_assert_or(ni,x,y) ci_ss_assert2((ni), (x)||(y), x, y)
#define __UINT_FAST8_MAX__ 0xff
#define MSG_NOSIGNAL MSG_NOSIGNAL
#define __LEAF , __leaf__
#define ipcache_af(ipcache) ci_ethertype2af((ipcache)->ether_type)
#define _BITS_TYPES_LOCALE_T_H 1
#define MSG_WAITALL MSG_WAITALL
#define ci_fifo2_peekp(f) ((f)->fifo + ci_fifo2_rd_i(f))
#define __CI_INTERNAL_TRANSPORT_CONFIG_OPT_H__ 
#define TS_MEMBER_OFF(ni,ts,member) ((ci_uint32)((char *)&(member) - (char*)(ts) + TS_OFF((ni),(ts))))
#define CITP_STATS_NETIF_INC(ni,x) do{ ++(ni)->state->stats.x; }while(0)
#define __KERNEL_DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))
#define __LONG_LONG_PAIR(HI,LO) LO, HI
#define SCNdLEAST8 "hhd"
#define EF_EVENT_TX_WITH_TIMESTAMP_SEC(e) ((e).tx_timestamp.ts_sec)
#define OO_PIPE_BUF_DEFAULT_BASE CI_MEMBER_OFFSET(ci_ip_pkt_fmt, dma_start)
#define __ASM_GENERIC_SOCKET_H 
#define _WCHAR_T_DEFINED 
#define _POSIX_V7_LP64_OFF64 1
#define __O_NOATIME 01000000
#define __SI_SIGFAULT_ADDL 
#define ENOMEM 12
#define SO_TIMESTAMPING_OOEXT ((SO_OOEXT_BASE) + 0)
#define _SC_FILE_ATTRIBUTES _SC_FILE_ATTRIBUTES
#define __CI_APP_CTIMER_H__ 
#define _SYS_TIME_H 1
#define CI_SB_AFLAG_MOVED_AWAY_IN_EPOLL 0x4000
#define SOL_TIPC 271
#define _BITS_SOCKADDR_H 1
#define TIOCSISO7816 _IOWR('T', 0x43, struct serial_iso7816)
#define ci_lock_check_locked(l) ci_lock_check_locked_dbg(l, __FILE__, __LINE__)
#define EF_ADDR_FMT "%" CI_PRIx64
#define UINTMAX_C(c) c ## UL
#define __CI_TOOLS_BUDDY_H__ 
#define __INT_LEAST8_WIDTH__ 8
#define _CS_PATH _CS_PATH
#define _ASM_X86_POSIX_TYPES_64_H 
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
#define ci_assert_nequal(exp1,exp2) _ci_assert_nequal(exp1, exp2, __FILE__, __LINE__)
#define _ERRNO_H 1
#define CI_TCP_EXT_STATS_INC_TCP_RENO_REORDER(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_reno_reorder )
#define CI_TCP_CONG_FAST_RECOV 0x4
#define h_addr h_addr_list[0]
#define CITP_STATS_NETIF_ADD(ni,x,v) do{ (ni)->state->stats.x += v; }while(0)
#define SIOCSIFNETMASK 0x891c
#define IFF_PORTSEL IFF_PORTSEL
#define CI_ADDR_AF(addr) AF_INET
#define IP_MSFILTER_SIZE(numsrc) (sizeof (struct ip_msfilter) - sizeof (struct in_addr) + (numsrc) * sizeof (struct in_addr))
#define __ONLOAD_DRIVERACCESS_H__ 
#define __FLT_EVAL_METHOD_TS_18661_3__ 0
#define ci_fifo2_contig_space(f) ci_fifo_min(ci_fifo2_space(f), (f)->fifo_mask + 1u - ci_fifo2_wr_i(f))
#define IN_CLASSB_NSHIFT 16
#define __always_inline __inline __attribute__ ((__always_inline__))
#define _SC_PII_OSI_M _SC_PII_OSI_M
#define ci_fifo_pokep(f) ((f)->fifo + (f)->fifo_wr_i)
#define NFDBITS __NFDBITS
#define N_SMSBLOCK 12
#define CI_TCP_FLAG_RST 0x04
#define TIOCSERGSTRUCT 0x5458
#define CP_LLAP_IMPORTED 0x00000100u
#define SCNd8 "hhd"
#define OO_IOC_OOF_CP_DNAT_RESET OO_IOC_NONE(OOF_CP_DNAT_RESET)
#define SP_TO_foo(ni,sp,foo) ((foo*) oo_sockp_to_ptr_safe((ni), (sp)))
#define _ci_assert_ge(exp1,exp2,file,line) do{}while(0)
#define _SC_CHARCLASS_NAME_MAX _SC_CHARCLASS_NAME_MAX
#define CI_CFG_EPOLL_MAX_POSTPONED 10
#define ef_vi_transmit_alt_stop(vi,alt_id) (vi)->ops.transmit_alt_stop((vi), (alt_id))
#define CI_TCP_TCONST_RTO_INITIAL (1000)
#define EFRM_ERR(fmt,...) EFRM_PRINTK(KERN_ERR, fmt, __VA_ARGS__)
#define S_IXOTH (S_IXGRP >> 3)
#define __ILP32_OFFBIG_CFLAGS "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
#define __CMSG_PADDING(len) ((sizeof (size_t) - ((len) & (sizeof (size_t) - 1))) & (sizeof (size_t) - 1))
#define _ci_assert_equal(exp1,exp2,file,line) do{}while(0)
#define __BFLT16_MAX_EXP__ 128
#define _BITS_STDIO2_DEC_H 1
#define SOL_IPV6 41
#define __O_CLOEXEC 02000000
#define CI_BSWAPM_BE32(v) CI_BSWAP_32(v)
#define ci_istack_push(s,v) ((s)->istack_base[(s)->istack_ptr++] = (v))
#define IP_MTU 14
#define CI_IP4_FRAG_DONT CI_BSWAPC_BE16(0x4000)
#define uint8_t ci_uint8
#define ci_compiler_barrier() __asm__ __volatile__ ("": : :"memory")
#define OO_IOC_DSHM_REGISTER OO_IOC_RW(DSHM_REGISTER, oo_dshm_register_t)
#define AF_ROSE PF_ROSE
#define __FLT64X_IS_IEC_60559__ 1
#define __CI_IPV4_STATS_INC(netif,Fld) __CI_NETIF_STATS_INC((netif), ip, Fld)
#define SIGSTKFLT 16
#define OO_SP_NOT_NULL(p) ((p) >= 0)
#define __fortify_function __extern_always_inline __attribute_artificial__
#define ci_fifo_rd_next(f) do{ (f)->fifo_rd_i = CI_FIFO_M((f), (f)->fifo_rd_i + 1u); }while(0)
#define TTYDEF_IFLAG (BRKINT | ISTRIP | ICRNL | IMAXBEL | IXON | IXANY)
#define NETLINK_PKTINFO 3
#define tcp_snd_una(ts) ((ts)->snd_una)
#define SIGSEGV 11
#define _RPC_NETDB_H 1
#define CI_TCPT_FLAG_NONBLOCK_CONNECT 0x80
#define SCNd16 "hd"
#define CI_SOCK_AFLAG_NEED_SHUT_RD_BIT 1u
#define ifr_netmask ifr_ifru.ifru_netmask
#define SOCK_DCCP SOCK_DCCP
#define CI_IPTIME_BUCKETMASK 255
#define OOF_IP4 "%d.%d.%d.%d"
#define OO_LINUX_IOC_BASE 90
#define CI_IFID_BAD 0
#define __UINT_LEAST8_MAX__ 0xff
#define EF_EVENT_RX_CONT(e) ((e).rx.flags & EF_EVENT_FLAG_CONT)
#define TFS_PRI_ARGS(t,fd) S_FMT(t), FD_PRI_ARGS(fd), state_str((t))
#define PF_SECURITY 14
#define ci_fifo2_wr_next(f) do{ ++(f)->fifo_wr_i; }while(0)
#define ci_ss_assertfl2(netif,e,x,y,file,line) _ci_assert2(e, x, y, (file), (line))
#define CI_TCPT_FLAG_TAIL_DROP_MARKED 0x100000
#define IPV6_2292DSTOPTS 4
#define _SC_SYMLOOP_MAX _SC_SYMLOOP_MAX
#define CI_TCPT_FLAG_PASSIVE_OPENED 0x100
#define __UINTMAX_TYPE__ long unsigned int
#define _ci_assert_gt(exp1,exp2,file,line) do{}while(0)
#define _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
#define CI_TCPT_FLAG_NO_TX_ADVANCE 0x400
#define IN6_IS_ADDR_MC_SITELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x5))
#define CI_DEBUG_TRY(exp) do { (void)(exp); } while (0)
#define __CI_TOOLS_UNIX_H__ 
#define SCNd32 "d"
#define CI_TCP_RST_COOLDOWN_BUFFER_SIZE (CI_TCP_RST_COOLDOWN_MAP_SIZE)
#define _POSIX_THREAD_CPUTIME 0
#define CI_TCP_EXT_STATS_INC_ARP_FILTER(netif) __CI_TCP_EXT_STATS_INC( (netif), arp_filter )
#define __linux 1
#define CI_CFG_STRIPE_DEFAULT_TCP_OPT 251
#define LTF_PRI_ARGS TF_PRI_ARGS
#define _SC_THREAD_PRIO_PROTECT _SC_THREAD_PRIO_PROTECT
#define SIOCSIFBRDADDR 0x891a
#define _XBS5_LPBIG_OFFBIG -1
#define EF_LOG_RESOURCE_WARNINGS 1
#define CI_TP_LOG_TR 0x20
#define si_int _sifields._rt.si_sigval.sival_int
#define CICP_MAC_ROWID_BAD ((cicp_mac_rowid_t)(-1))
#define CI_WORD_SIZE 8
#define PF_BLUETOOTH 31
#define __unix 1
#define CI_UDP_STATS_INC_OUT_DGRAMS(netif) __CI_UDP_STATS_INC( (netif), udp_out_dgrams )
#define CP_ADDR_PREFIX_FMT CI_IP_PRINTF_FORMAT"/%d"
#define _IOC_TYPESHIFT (_IOC_NRSHIFT+_IOC_NRBITS)
#define ci_iarray_assert_valid(s,e) 
#define TCP_CONG_FMT "%s ss=%d cwnd=%d+%d recover=%08x rt_seq=%08x dups=%d"
#define CI_LOG_DELTA 0x08
#define __UINT32_MAX__ 0xffffffffU
#define _BITS_SS_FLAGS_H 1
#define CI_TCP_URG_DATA_MASK 0x00ff
#define MSG_CMSG_CLOEXEC MSG_CMSG_CLOEXEC
#define PTHREAD_BARRIER_SERIAL_THREAD -1
#define PF_SMC 43
#define __SIZE_T 
#define SCNd64 __PRI64_PREFIX "d"
#define OO_IOC_SOCK_ATTACH_TO_EXISTING OO_IOC_RW(SOCK_ATTACH_TO_EXISTING, oo_sock_attach_t)
#define IP_PROTOCOL 52
#define CI_ALLOC_TABLE_BULK_SZ (1 << CI_ALLOC_TABLE_BULK_2)
#define __S_ISVTX 01000
#define _BITS_POSIX_OPT_H 1
#define CI_TP_LOG_TE 0x10000000
#define LINUX_VERSION_CODE 395276
#define EF_EVENT_TX_WITH_TIMESTAMP_Q_ID(e) ((e).tx_timestamp.q_id)
#define _SC_USHRT_MAX _SC_USHRT_MAX
#define _SC_DEVICE_SPECIFIC_R _SC_DEVICE_SPECIFIC_R
#define PF_SNA 22
#define _ATFILE_SOURCE 1
#define ifc_buf ifc_ifcu.ifcu_buf
#define SCNuLEAST16 "hu"
#define EFAB_NIC_DP_DEFAULT_rx_superbuf_bytes 1048576
#define OOFA_IPX_L3(addr) IPX_ARG(AF_IP_L3(addr))
#define NI_LOG_ONCE(ni,lg,...) do { static int printed = 0; if( ! printed ) { printed = 1; NI_LOG(ni, lg, __VA_ARGS__); } } while( 0 );
#define __FLT128_MIN_EXP__ (-16381)
#define _STATBUF_ST_BLKSIZE 
#define CI_TP_LOG_S 0x4
#define MSG_FIN MSG_FIN
#define ci_istack_init(s,capacity) do{ (s)->istack_ptr = 0; (s)->istack_size = (capacity); }while(0)
#define SO_NO_CHECK 11
#define _ci_assert_equiv(exp1,exp2,file,line) do{}while(0)
#define CITP_SCALABLE_FILTERS_DISABLE 0
#define ifr_addr ifr_ifru.ifru_addr
#define WUNTRACED 2
#define ERESTART 85
#define SCNxFAST16 __PRIPTR_PREFIX "x"
#define CI_TP_LOG_AT 0x20000
#define EISNAM 120
#define ef_vi_receive_get_precise_timestamp(vi,pkt,ts_out) (vi)->ops.receive_get_timestamp((vi), (pkt), (ts_out))
#define _STATBUF_ST_RDEV 
#define UINT16_C(c) c
#define CI_USE_GCC_VISIBILITY 
#define SCNuLEAST32 "u"
#define CI_SELECT_WRITABLE 0x2
#define CI_IP_SOCK_STATS_INC_RXSLOW(ts) __CI_SOCK_STATS_INC( (ts), rx_slowpath )
#define NUD_FAILED 0x20
#define ENOKEY 126
#define LOG_DC(c,x) do{}while(0)
#define CI_NETIF_FLAGS_PREFAULTED 0x80
#define ENOMSG 42
#define _PC_PRIO_IO _PC_PRIO_IO
#define EXIT_FAILURE 1
#define _IOC_NONE 0U
#define IN6ADDR_ANY_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }
#define __INT_LEAST16_WIDTH__ 16
#define _SIZE_T_DEFINED_ 
#define CI_SET_SO_ERROR(s,e) do { ci_assert_ge(e,0); if((e)) (s)->so_error=(e); } while(0)
#define OO_WAITABLE_LK_NEED_WAKE 0x20000000
#define CI_BSWAPM_BE16(v) CI_BSWAP_16(v)
#define ETH_P_802_EX1 0x88B5
#define OO_SIGHANGLER_SEQ_MASK 0xffffff0
#define OO_PIPE_BUF_MAX_SIZE (CI_CFG_PKT_BUF_SIZE - OO_PIPE_BUF_DEFAULT_BASE)
#define CI_TCP_AUX_TYPE_SYNRECV 0
#define CI_UDP_STATS_INC_IN_ERRS(netif) __CI_UDP_STATS_INC( (netif), udp_in_errs )
#define __LDBL_REDIR_NTH(name,proto) name proto __THROW
#define AF_FILE PF_FILE
#define __SCHAR_MAX__ 0x7f
#define __USE_KERNEL_IPV6_DEFS 0
#define CI_IPID_BLOCK_MASK (CI_IPID_BLOCK_LENGTH-1)
#define PKT_DBG_ARGS(p) OO_PKT_FMT(p), (p)->flags
#define CI_CFG_UDP_SNDBUF_DEFAULT 212992
#define __KERNEL_STRICT_NAMES 
#define ci_istack_peek(s) ((s)->istack_base[(s)->istack_ptr - 1])
#define __INT64_C(c) c ## L
#define _ci_assert2(e,x,y,file,line) do{}while(0)
#define SCNuLEAST64 __PRI64_PREFIX "u"
#define ci_trs_get_valid_ep(trs,sock_id) ci_netif_get_valid_ep(&(trs)->netif, (sock_id))
#define SA_SIGINFO 4
#define LOG_SV(x) LOG_FL(CI_TP_LOG_SV, x)
#define CI_SOCK_ERRNO() errno
#define __CI_TOOLS_FIFO_H__ 
#define OO_PIPE_SIZE_TO_BUFS(size) (((size) + OO_PIPE_BUF_MAX_SIZE - 1) / OO_PIPE_BUF_MAX_SIZE)
#define NL_MMAP_MSG_ALIGNMENT NLMSG_ALIGNTO
#define tcp_rx_urg_fast_path(ts) (~tcp_urg_data(ts) & CI_TCP_URG_COMING)
#define _CS_LFS_LINTFLAGS _CS_LFS_LINTFLAGS
#define CI_IOVEC_BASE(i) ((i)->iov_base)
#define SO_SECURITY_ENCRYPTION_TRANSPORT 23
#define ci_fifo2_grow_lock_a(f,s,l,al,fr,prc) do{ ci_fifo_grow_lock_helper(&(f)->fifo, sizeof((f)->fifo[0]), &(f)->fifo_mask, 1, &(f)->fifo_rd_i, &(f)->fifo_wr_i, (s), (l), (al), (fr), (prc)); ci_assert(ci_fifo2_valid(f)); }while(0)
#define IPPROTO_L2TP IPPROTO_L2TP
#define LOG_DT(x) LOG_FL(CI_TP_LOG_DT, x)
#define NSS_FMT "%d:%d %s "
#define DEFFILEMODE (S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)
#define CI_ADDR_FROM_IP4(ip) (({ struct { ci_addr_t a[1]; } a = {}; a.a[0].ip4 = (ip); a; }).a[0])
#define CI_ADDR_FROM_IP6(ip6_addr) addr_any
#define OO_FDFLAG_REATTACH 0x80
#define efct_ef_eventq_check_event(vi) ef_eventq_has_event((vi))
#define S_ID(ss) OO_SP_TO_INT(S_SP(ss))
#define _SC_THREAD_THREADS_MAX _SC_THREAD_THREADS_MAX
#define NO_ADDRESS NO_DATA
#define EF_PRI_ARGS(epi,fd) NI_ID((epi)->sock.netif), SC_FMT((epi)->sock.s), FD_PRI_ARGS(fd)
#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
#define CI_TCP_EXT_STATS_INC_TCP_PREQUEUED(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_prequeued )
#define SO_TIMESTAMP_OLD 29
#define PKT_TCP_RX_ROB(pkt) (&(pkt)->pf.tcp_rx.misc.rob)
#define _SC_2_UPE _SC_2_UPE
#define ETH_P_HDLC 0x0019
#define __SIZEOF_INT__ 4
#define ef_vi_cold __attribute__ ((cold))
#define CITP_TCP_LOOPBACK_TO_LISTSTACK 3
#define SCNu8 "hhu"
#define __PRAGMA_REDEFINE_EXTNAME 1
#define _BITS_SIGINFO_ARCH_H 1
#define si_addr _sifields._sigfault.si_addr
#define SOL_TLS 282
#define CI_NETIF_NIC_ERRORS_PRI_ARG(errors) ((errors) & CI_NETIF_NIC_ERROR_REMAP ? "REMAP ":"")
#define CI_TCP_STATE_IS_SOCKET(s) ((s) == CI_TCP_STATE_UDP || (s) & CI_TCP_STATE_TCP)
#define ci_fifo_peek_i(f,i) ((f)->fifo[CI_FIFO_M((f), (f)->fifo_rd_i+(i))])
#define CI_ALLOC_INFO_SIZEOF_CTRL (sizeof(struct ci_alloc_info) - sizeof(((struct ci_alloc_info *)0)->entries))
#define __attribute_used__ __attribute__ ((__used__))
#define NDEBUG 1
#define fwrite_unlocked(ptr,size,n,stream) (__extension__ ((__builtin_constant_p (size) && __builtin_constant_p (n) && (size_t) (size) * (size_t) (n) <= 8 && (size_t) (size) != 0) ? ({ const char *__ptr = (const char *) (ptr); FILE *__stream = (stream); size_t __cnt; for (__cnt = (size_t) (size) * (size_t) (n); __cnt > 0; --__cnt) if (putc_unlocked (*__ptr++, __stream) == EOF) break; ((size_t) (size) * (size_t) (n) - __cnt) / (size_t) (size); }) : (((__builtin_constant_p (size) && (size_t) (size) == 0) || (__builtin_constant_p (n) && (size_t) (n) == 0)) ? ((void) (ptr), (void) (stream), (void) (size), (void) (n), (size_t) 0) : fwrite_unlocked (ptr, size, n, stream))))
#define SCNxFAST64 __PRI64_PREFIX "x"
#define S_IFMT __S_IFMT
#define FIOSETOWN 0x8901
#define ETH_MAX_MTU 0xFFFFU
#define CLOCK_REALTIME 0
#define CI_IP_TIME_APP_GRANULARITY 1000u
#define CI_IP_SOCK_STATS_MIN_LEN (sizeof(ci_ip_sock_stats_min)/sizeof( CI_IP_STATS_TYPE))
#define __CI_INTERNAL_IPTIMER_H__ 
#define PRIuFAST16 __PRIPTR_PREFIX "u"
#define _SC_VERSION _SC_VERSION
#define CICP_FWD_FLAG_MTU 0x4
#define _SC_RE_DUP_MAX _SC_RE_DUP_MAX
#define _ARPA_INET_H 1
#define _ci_assert_addrs_equal(exp1,exp2,file,line) do{}while(0)
#define IPPROTO_EGP IPPROTO_EGP
#define __USER_LABEL_PREFIX__ 
#define CMSG_LEN(len) (CMSG_ALIGN (sizeof (struct cmsghdr)) + (len))
#define CI_TCP_EXT_STATS_INC_TCP_DIRECT_COPY_FROM_BACKLOG(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_direct_copy_from_backlog )
#define EFRM_WARN(fmt,...) EFRM_PRINTK(KERN_WARNING, fmt, __VA_ARGS__)
#define CI_SOCK_FLAG_OOBINLINE 0x00000008
#define TIOCGWINSZ 0x5413
#define N_FMT "%d "
#define __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
#define CI_NETIF_FLAG_NO_INIT_NET_CPLANE 0x80
#define CI_ADDR_SH_FROM_ADDR(addr) ({ ci_addr_sh_t a = {}; a = CI_ADDR_SH_FROM_IP4((addr).ip4); a; })
#define _BITS_ENDIANNESS_H 1
#define CI_SB_AFLAG_OS_BACKED_BIT 16u
#define CI_TCP_EXT_STATS_INC_TCP_FULL_UNDO(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_full_undo )
#define CI_FIFO_FMT "[rd=%x wr=%x num=%d(%d) spc=%d(%d)]"
#define MEMORY_PRESSURE_DESCRIPTION "Memory pressure means Onload is out of packet buffers; and will " "drop packets until it recovers.  However, it only counts as memory " "pressure if we are unable to fill the RX ring.  Running out of " "memory for other purposes (e.g. transmit) will not necessarily " "trigger these counters; if receive is still functioning normally.  "
#define CI_SB_AFLAG_MOVED_AWAY 0x2000
#define CI_UL_LOG_U 0x2
#define NETLINK_ADD_MEMBERSHIP 1
#define EF_VI_CONFIG_PIO 1
#define CICP_ALL_HWPORTS ((cicp_hwport_mask_t) -1)
#define __GLIBC__ 2
#define _SC_POLL _SC_POLL
#define NETIF_INFO_HOLDER_IS_SELF 4
#define PTHREAD_CANCEL_DEFERRED PTHREAD_CANCEL_DEFERRED
#define IN_BADCLASS(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xf0000000)
#define HOST_NOT_FOUND 1
#define NLA_HDRLEN ((int) NLA_ALIGN(sizeof(struct nlattr)))
#define PRIuFAST32 __PRIPTR_PREFIX "u"
#define SO_BROADCAST 6
#define _SC_RTSIG_MAX _SC_RTSIG_MAX
#define CREPRINT CTRL('r')
#define WCONTINUED 8
#define CI_TCP_STATS_INC_ESTAB_RESETS(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_estab_resets)
#define CI_PKT_FLAG_TX_PENDING 0x0001
#define _IOC_TYPECHECK(t) (sizeof(t))
#define CI_BSWAP_BE32(v) CI_BSWAP_32(v)
#define tcp_rport_be16(ts) sock_rport_be16(&(ts)->s)
#define _IOT_ifconf _IOT(_IOTS(struct ifconf),1,0,0,0,0)
#define ci_fifo_is_empty(f) ((f)->fifo_rd_i == (f)->fifo_wr_i)
#define CI_TCP_MAX_OPTS_LEN 40
#define __LDBL_HAS_INFINITY__ 1
#define _BITS_UINTN_IDENTITY_H 1
#define CI_IP_TIMER_NETIF_TIMEOUT 0x6
#define CICP_FWD_DATA_FLAG_ARP_VALID 0x1
#define __fsfilcnt_t_defined 
#define PKTS_PER_SET_M (PKTS_PER_SET - 1u)
#define __LINUX_NEIGHBOUR_H 
#define CI_UNIX_FORK_NETIF_NONE 0
#define AF_PHONET PF_PHONET
#define __CI_TOOLS_GCC_X86_H__ 
#define INADDR_ALLSNOOPERS_GROUP ((in_addr_t) 0xe000006a)
#define NETLINK_NO_ENOBUFS 5
#define __FLT32_IS_IEC_60559__ 1
#define NCC 8
#define ci_fallthrough __attribute__((__fallthrough__))
#define TX_PKT_LEN(pkt) (pkt)->pay_len
#define CI_IP6_TCLASS_MASK CI_BSWAP_BE32(0x0FF00000)
#define CI_IP_ALL_BROADCAST 0xffffffff
#define PROT_EXEC 0x4
#define CI_UL_LOG_SEL 0x10
#define CI_NETIF_PTR(ni,oop) __CI_NETIF_PTR((ni), (oop))
#define ILL_ILLOPN ILL_ILLOPN
#define _BSD_SIZE_T_DEFINED_ 
#define CI_BSWAP_BE64(v) CI_BSWAP_64(v)
#define CI_ZERO_ARRAY(p,howmany) memset((void*) (p), 0, (howmany) * sizeof(*(p)))
#define _POSIX2_SW_DEV __POSIX2_THIS_VERSION
#define MS_ASYNC 1
#define EF_VI_SYNC_FLAG_CLOCK_IN_SYNC 2
#define CI_IPV4_STATS_INC_IN_DELIVERS(netif) __CI_IPV4_STATS_INC( (netif), in_delivers)
#define _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
#define __RLIM_T_MATCHES_RLIM64_T 1
#define _SC_TRACE_EVENT_FILTER _SC_TRACE_EVENT_FILTER
#define MAP_FAILED ((void *) -1)
#define ci_bit_find_first(a,sz) ci_bit_find_next(a, sz, 0)
#define ci_fifo2_ctor(f,cap,prc) do{ *(void**) &(f)->fifo = ci_alloc((cap) * sizeof((f)->fifo[0])); ci_fifo2_init((f), (cap)); ci_assert(!(f)->fifo || ci_fifo2_valid(f)); *(prc) = (f)->fifo ? 0 : -ENOMEM; }while(0)
#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
#define CI_SB_FLAG_WAKE_TX (1u << CI_SB_FLAG_WAKE_TX_B)
#define __CPUELT(cpu) ((cpu) / __NCPUBITS)
#define CI_SOCK_AFLAG_SELECT_ERR_QUEUE 0x800
#define SS_DISABLE SS_DISABLE
#define SO_TIMESTAMPING_OLD 37
#define ENOLINK 67
#define CI_IP6_IS_ADDR_ANY(ip6_p) (((ci_uint32 *)(ip6_p))[0] == 0 && ((ci_uint32 *)(ip6_p))[1] == 0 && ((ci_uint32 *)(ip6_p))[2] == 0 && ((ci_uint32 *)(ip6_p))[3] == 0)
#define ETH_HLEN 14
#define ci_ss_assert(ni,x) ci_ss_assertfl(ni, x, __FILE__, __LINE__)
#define CI_CFG_SPIN_STATS 0
#define AF_WANPIPE PF_WANPIPE
#define _IOC_SIZESHIFT (_IOC_TYPESHIFT+_IOC_TYPEBITS)
#define CI_IPX_ADDR_SIZE(af) sizeof(ci_ip_addr_t)
#define S_SP(ss) ((ss)->s.b.bufid)
#define PF_LLC 26
#define CI_IP4_IS_LAST_FRAG(ip) ( !((ip)->ip_frag_off_be16 & CI_IP4_FRAG_MORE) )
#define s6_addr16 __in6_u.__u6_addr16
#define __DEC64_MIN__ 1E-383DD
#define __ONLOAD_VERSION_H__ 
#define IPTIMER_BUCKET(netif,wheelno,abs) oo_p_dllink_ptr(netif, &(IPTIMER_STATE((netif))->warray[ (wheelno)*CI_IPTIME_BUCKETS + IPTIMER_BUCKETNO((wheelno), (abs))]))
#define CI_CONTAINER(c_type,mbr_name,p_mbr) __builtin_choose_expr( __builtin_types_compatible_p(__typeof__(&((c_type*)0)->mbr_name), __typeof__(p_mbr)), __CI_CONTAINER(c_type, mbr_name, p_mbr), (void)0)
#define CI_LOG_TID 0x02
#define __CI_DEBUG_OP_KILL_STACK__ (6)
#define udp_raddr_be32(us) (sock_raddr_be32(&us->s))
#define __SSIZE_T_TYPE __SWORD_TYPE
#define __DEV_T_TYPE __UQUAD_TYPE
#define CI_PRId32 PRId32
#define LTFS_FMT LPF "%d/"FD_FMT" %s "
#define CI_PMTU_TCONST_DISCOVER_SLOW (19*30*1000)
#define OO_TCP_DEFER_ACCEPT_OFF 0xff
#define SIOCGIFPFLAGS 0x8935
#define ci_lock_trylock_i(l) (pthread_mutex_trylock(l) == 0)
#define CI_SOCKET_HANDOVER -2
#define ipx_hdr_set_flowlabel(af,hdr,flowlabel) 
#define SIGIO SIGPOLL
#define NUD_PROBE 0x10
#define IPPROTO_ENCAP IPPROTO_ENCAP
#define __STDC_UTF_16__ 1
#define __DBL_IS_IEC_60559__ 1
#define CI_MAGIC_CLEAR(p,type) do { (p)->magic = !CI_MAGIC((p), !(type)); } while (0)
#define __CI_IP_STATS_INC(netif,Fld) __CI_NETIF_STATS_INC((netif), ip, Fld)
#define s6_addr32 __in6_u.__u6_addr32
#define EFAB_NIC_DP_DEFAULT_rx_stride 4096
#define le32toh(x) __uint32_identity (x)
#define CI_TCP_EXT_STATS_INC_PAWS_ACTIVE_REJECTED(netif) __CI_TCP_EXT_STATS_INC( (netif), paws_active_rejected )
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define SIOCGIFCOUNT 0x8938
#define __CI_BUILD_ASSERT_NAME(_x) __CI_BUILD_ASSERT_ILOATHECPP(_x)
#define __DEC32_MAX__ 9.999999E96DF
#define __GLIBC_USE_IEC_60559_BFP_EXT 0
#define OO_OS_STATUS_RX 1
#define EF_EVENT_RX_DISCARD_TYPE(e) ((e).rx_discard.subtype)
#define EF_EVENT_FMT "[ev:%x]"
#define __WIFSIGNALED(status) (((signed char) (((status) & 0x7f) + 1) >> 1) > 0)
#define __O_LARGEFILE 0
#define CI_ALIGN(x) __attribute__ ((aligned (x)))
#define CI_UDPF_MCAST_B2D 0x00000080
#define SCM_TXTIME SO_TXTIME
#define N_CFG_OPTS (sizeof(cfg_opts) / sizeof(cfg_opts[0]))
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_ON_CLOSE(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_on_close )
#define TIOCNXCL 0x540D
#define AT_SYMLINK_FOLLOW 0x400
#define st_ctime st_ctim.tv_sec
#define ifr_newname ifr_ifru.ifru_newname
#define SP_TO_TCP_LISTEN(ni,sp) SP_TO_foo((ni), (sp), ci_tcp_socket_listen)
#define CI_PRId64 PRId64
#define TIOCGSERIAL 0x541E
#define CI_CFG_LIMIT_SMSS 1
#define _IO(type,nr) _IOC(_IOC_NONE,(type),(nr),0)
#define __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
#define IPPROTO_ESP IPPROTO_ESP
#define ETH_P_DSA_8021Q 0xDADB
#define IPV6_ADD_MEMBERSHIP IPV6_JOIN_GROUP
#define __CI_DEBUG_OP_NETIF_CONFIG_OPTS_DUMP__ (17)
#define _BITS_STRUCT_STAT_H 1
#define _SC_MEMLOCK _SC_MEMLOCK
#define CI_UDP_ENCAP_ESPINUDP 2
#define CLOCK_BOOTTIME_ALARM 9
#define __ONLOAD_HASH_H__ 
#define __FLT32X_HAS_INFINITY__ 1
#define ci_tcp_state_str(state) ci_tcp_state_num_str(CI_TCP_STATE_NUM(state))
#define SO_ACCEPTCONN 30
#define __INT32_MAX__ 0x7fffffff
#define CI_CFG_TCP_RCVBUF_MAX 6291456
#define __ILP32_OFFBIG_LDFLAGS "-m32"
#define __GLIBC_USE_DEPRECATED_GETS 0
#define LOG_EP(x) LOG_FL(CI_TP_LOG_EP, x)
#define _POSIX_V7_LPBIG_OFFBIG -1
#define __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32
#define __INT_WIDTH__ 32
#define O_NDELAY O_NONBLOCK
#define EF_LOG_BANNER 0
#define __S_IFCHR 0020000
#define SO_RESERVE_MEM 73
#define CI_IP_SOCK_STATS_INC_TXSLEEP(ts) __CI_SOCK_STATS_INC( (ts), tx_sleep )
#define __SIZE_WIDTH__ 64
#define __STDC_IEC_559__ 1
#define SO_TYPE 3
#define CI_TCP_STATE_NOT_CONNECTED 0x004
#define NTF_OFFLOADED (1 << 5)
#define __STDC_ISO_10646__ 201706L
#define CI_PKT_FLAG_TX_MASK_ALLOWED (CI_PKT_FLAG_TX_MORE | CI_PKT_FLAG_TX_PSH | CI_PKT_FLAG_NONB_POOL | CI_PKT_FLAG_TX_PSH_ON_ACK | CI_PKT_FLAG_IS_IP6)
#define CITP_STATS_NETIF(x) x
#define CI_PKT_FLAG_RTQ_SACKED 0x0008
#define _SC_NL_NMAX _SC_NL_NMAX
#define tcp_enq_nxt(ts) (TS_IPX_TCP(ts)->tcp_seq_be32)
#define __PTRDIFF_WIDTH__ 64
#define SCNu16 "hu"
#define CI_MIN(x,y) (((x) < (y)) ? (x) : (y))
#define TS_OFF(ni,ts) oo_sockp_to_statep((ni),S_SP(ts))
#define _SC_C_LANG_SUPPORT_R _SC_C_LANG_SUPPORT_R
#define CI_TCP_EXT_STATS_INC_TCP_TIMEOUTS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_timeouts )
#define CI_TCP_CONG_NOTIFIED 0x12
#define CI_SB_AFLAG_IN_CACHE_BIT 10u
#define CI_TCP_EXT_STATS_INC_TCP_LOST_RETRANSMIT(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_lost_retransmit )
#define CI_CFG_LOG_SOCKET_USERS 0
#define __DECIMAL_DIG__ 21
#define __NTHNL(fct) __attribute__ ((__nothrow__)) fct
#define __USE_FORTIFY_LEVEL 3
#define UDP_IS_SHUT_RDWR(us) (((us)->s.rx_errno & (CI_SHUT_RD | CI_SHUT_WR)) == (CI_SHUT_RD | CI_SHUT_WR))
#define LOCK_EX 2
#define __SIZEOF_PTHREAD_BARRIER_T 32
#define CI_TP_LOG_ARP 0x80000
#define F_DUPFD 0
#define __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
#define _CS_XBS5_ILP32_OFF32_LDFLAGS _CS_XBS5_ILP32_OFF32_LDFLAGS
#define CI_TCPT_FLAG_SACK 0x04
#define __ONLOAD_PKTQ_H__ 
#define ci_fifo_poke(f) ((f)->fifo[(f)->fifo_wr_i])
#define _SC_GETGR_R_SIZE_MAX _SC_GETGR_R_SIZE_MAX
#define __FLT128_IS_IEC_60559__ 1
#define OO_CLOSED_EPS_RING_SIZE 512
#define ESTALE 116
#define __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
#define __SI_MAX_SIZE 128
#define _SC_2_SW_DEV _SC_2_SW_DEV
#define SP_TO_WAITABLE(ni,sp) SP_TO_foo((ni), (sp), citp_waitable)
#define _PC_FILESIZEBITS _PC_FILESIZEBITS
#define __SOCKADDR_COMMON_SIZE (sizeof (unsigned short int))
#define __HAVE_FLOAT64X_LONG_DOUBLE 1
#define IN_CLASSA_HOST (0xffffffff & ~IN_CLASSA_NET)
#define TIOCGDEV _IOR('T', 0x32, unsigned int)
#define PTRDIFF_MAX (9223372036854775807L)
#define CI_IP_SOCK_STATS_INC_BADSYNSEQ(ts) __CI_SOCK_STATS_INC( (ts), rx_badsynseq )
#define _CS_POSIX_V7_ILP32_OFFBIG_LIBS _CS_POSIX_V7_ILP32_OFFBIG_LIBS
#define __THROWNL __attribute__ ((__nothrow__))
#define ____sigset_t_defined 
#define PRIdPTR __PRIPTR_PREFIX "d"
#define CI_PKT_RX_FLAG_KEEP 0x02
#define IP_ORIGDSTADDR 20
#define __FLT64X_MIN_10_EXP__ (-4931)
#define _SC_UINT_MAX _SC_UINT_MAX
#define __LDBL_HAS_QUIET_NAN__ 1
#define INT64_C(c) c ## L
#define CI_SLLIST_TAIL ((ci_sllink*)(ci_uintptr_t)0xdeaddead)
#define OO_IOC_SOCK_DETACH OO_IOC_RW(SOCK_DETACH, oo_sock_attach_t)
#define IPV6_DSTOPTS 59
#define CI_EPLOCK_LOCK_FLAGS 0x70000000ULL
#define CICP_MAC_ROWID_UNUSED ((cicp_mac_rowid_t)(-3))
#define CICP_FWD_FLAG_HAS_GATEWAY 0x10
#define CI_EPLOCK_NETIF_PRIME_IF_IDLE 0x0000800000000000ULL
#define PKT_CHK_NML(ni,id,ni_locked) __ci_pkt_chk((ni), (id), (ni_locked), __FILE__, __LINE__)
#define CI_TCP_TSO_WORD (CI_BSWAPC_BE32((CI_TCP_OPT_NOP << 24u) | (CI_TCP_OPT_NOP << 16u) | (CI_TCP_OPT_TIMESTAMP << 8u) | (0xa )))
#define SOL_ICMPV6 58
#define __attribute_const__ __attribute__ ((__const__))
#define CI_SO_L5_GET_NETIF_STATS (__SO_L5_BASE+0x02)
#define __CI_TOOLS_DLLIST_H__ 
#define CI_TCP_EXT_STATS_INC_PREQUEUE_DROPPED(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_prequeue_dropped )
#define NETLINK_EXT_ACK 11
#define CI_CFG_TCP_RCVBUF_MIN CI_SOCK_MIN_RCVBUF
#define _SC_XOPEN_VERSION _SC_XOPEN_VERSION
#define SOL_PNPIPE 275
#define __CI_INTERNAL_IP_LOG_H__ 
#define _POSIX_NO_TRUNC 1
#define EFRM_BUILD_ASSERT(e) { typedef char __EFRM_BUILD_ASSERT_NAME(__LINE__)[(e) ? 1 : -1] __attribute__((unused)); }
#define htobe32(x) __bswap_32 (x)
#define CI_TCP_EXT_STATS_INC_TCP_SACK_RECOVERY_FAIL(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_sack_recovery_fail )
#define CI_IPX_IS_LOOPBACK(addr) CI_IP_IS_LOOPBACK((addr).ip4)
#define AF_BLUETOOTH PF_BLUETOOTH
#define ef_eventq_prime(vi) (vi)->ops.eventq_prime((vi))
#define CITP_EPOLL_KERNEL_ACCEL 2
#define L_tmpnam 20
#define ___int_wchar_t_h 
#define OO_PIPE_MIN_SIZE CI_PAGE_SIZE
#define WIFCONTINUED(status) __WIFCONTINUED (status)
#define __GNUC__ 13
#define MADV_WIPEONFORK 18
#define _IOC_NR(nr) (((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)
#define PRIoLEAST16 "o"
#define CI_IS_VALID_SOCKET(fd) ((fd) >= 0)
#define __MMX__ 1
#define IPPROTO_TCP IPPROTO_TCP
#define CI_TP_LOG_UR 0x400000
#define CI_CFG_TCP_RFC1323_STRICT_TSO 0
#define OO_STRINGIFY1(x) #x
#define __OFF64_T_TYPE __SQUAD_TYPE
#define CI_CFG_INT64 8
#define __CFLOAT32X _Complex _Float32x
#define CI_IP_SOCK_STATS_INC_RTTO(ts) __CI_SOCK_STATS_INC( (ts), rtto )
#define __LDBL_MIN_EXP__ (-16381)
#define CI_NETIF_PKT_POOL_MIN_LEVEL 512
#define CI_IP_PKT_SEGMENTS_MAX 6
#define OO_IOC_KILL_SELF_SIGPIPE OO_IOC_NONE(KILL_SELF_SIGPIPE)
#define CI_TCP_RST_COOLDOWN_DEFAULT (0)
#define EF_EVENT_TX_ERROR_Q_ID(e) ((e).tx_error.q_id)
#define POSIX_FADV_WILLNEED 3
#define AF_NFC PF_NFC
#define PRIoLEAST32 "o"
#define IN_CLASSA_NSHIFT 24
#define CI_CFG_TCP_FIN_TIMEOUT 60
#define ci_tcp_time_now(ni) ci_ip_time_now(ni)
#define _SC_PII _SC_PII
#define CI_LOGLEVEL_TRY_RET(logfn,exp) do{ int _trc; _trc=(exp); if( CI_UNLIKELY(_trc < 0) ) { logfn (ci_log("%s returned %d at %s:%d", #exp, _trc, __FILE__, __LINE__)); return _trc; } }while(0)
#define ASSERT_VALID_NETIF_ADDR(ni,addr,size) do{ ci_assert(ci_to_int(addr) >= 0); ci_assert((addr) < (ni)->state->netif_mmap_bytes); ci_assert((addr) + (size) <= (ni)->state->netif_mmap_bytes); }while(0)
#define MSG_CTRUNC MSG_CTRUNC
#define _SC_TRACE_NAME_MAX _SC_TRACE_NAME_MAX
#define EAI_MEMORY -10
#define PRIdLEAST16 "d"
#define MSG_PROXY MSG_PROXY
#define ci_ctimer_cast (ci_uint64 *)
#define tcp_urg_data_invalidate(ts) ((ts)->urg_data &=~ (CI_TCP_URG_IS_HERE|CI_TCP_URG_PTR_VALID|CI_TCP_URG_DATA_MASK));
#define SO_DETACH_REUSEPORT_BPF 68
#define EF_VI_MAX_EFCT_RXQS 8
#define _SC_USER_GROUPS_R _SC_USER_GROUPS_R
#define CI_IPV4_STATS_INC_IN_DISCARDS(netif) __CI_IPV4_STATS_INC( (netif), in_discards)
#define CI_TCP_STATE_TCP 0x200
#define __BIGGEST_ALIGNMENT__ 16
#define OO_INTF_I_LOOPBACK (CI_CFG_MAX_INTERFACES+1)
#define ETH_P_IP 0x0800
#define PTRDIFF_MIN (-9223372036854775807L-1)
#define sa_handler __sigaction_handler.sa_handler
#define CI_TCPI_OPT_SACK 2
#define IPV6_RECVHOPOPTS 53
#define _POSIX_THREAD_PRIORITY_SCHEDULING 200809L
#define TIOCGISO7816 _IOR('T', 0x42, struct serial_iso7816)
#define tcp_outgoing_opts_len(ts) ((ts)->outgoing_hdrs_len - sizeof(ci_ip4_hdr) - sizeof(ci_tcp_hdr))
#define STDERR_FILENO 2
#define CI_TCP_EXT_STATS_INC_TCP_SLOW_START_RETRANS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_slow_start_retrans )
#define ci_lock_dtor_dbg(l,fl,ln) ci_lock_dtor_i(l)
#define __returns_nonnull __attribute__ ((__returns_nonnull__))
#define _FEATURES_H 1
#define OO_INTF_I_DUMP_ALL 1
#define CI_CFG_IP_TIMER_DEBUG 0
#define pthread_cleanup_pop(execute) do { } while (0); } while (0); __pthread_unregister_cancel (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)
#define __FLT64_MAX_10_EXP__ 308
#define ASSERT_VALID_PKT_ID(ni,id) ci_ss_assert((ni), IS_VALID_PKT_ID((ni), (id)))
#define __BIG_ENDIAN 4321
#define PRIdLEAST32 "d"
#define PRIoLEAST64 __PRI64_PREFIX "o"
#define __GLIBC_USE_LIB_EXT2 0
#define CI_DBG_NETIF_INFO_NOOP 0
#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
#define __sigevent_t_defined 1
#define CI_IP_SOCK_STATS_INC_ACKERR(ts) __CI_SOCK_STATS_INC( (ts), rx_ackerr )
#define OO_P_OFF(p) (p)
#define CI_PAGE_MASK (~((ci_uintptr_t) CI_PAGE_SIZE - 1))
#define CITP_RX_TIMESTAMPING_TRAILER_FORMAT_BRCM 2
#define __CI_COMPAT_SYSDEP_H__ 
#define WTERMSIG(status) __WTERMSIG (status)
#define PKT_IPX_UDP_HDR(af,pkt) ci_pkt_ipx_udp_hdr(af, pkt)
#define __CPU_SET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] |= __CPUMASK (__cpu)) : 0; }))
#define __S_TYPEISSEM(buf) ((buf)->st_mode - (buf)->st_mode)
#define OO_IOC_RESOURCE_ONLOAD_ALLOC OO_IOC_RW(RESOURCE_ONLOAD_ALLOC, ci_resource_onload_alloc_t)
#define CI_TP_LOG_NC 0x200
#define AF_SECURITY PF_SECURITY
#define ci_seq_eq(a,b,bits) ((((a) - (b)) & ((1u << (bits)) - 1u)) == 0u)
#define __FLT32_HAS_INFINITY__ 1
#define EXIT_SUCCESS 0
#define EF_EVENT_RX_BYTES(e) ((e).rx.len)
#define CP_MIB_OFF_NULL -1
#define CI_EF_UDP_RECV_FAST_S 3
#define udp_ipx_laddr(us) sock_ipx_laddr(&(us)->s)
#define PRIiFAST16 __PRIPTR_PREFIX "i"
#define SI_QUEUE SI_QUEUE
#define UINT_LEAST8_MAX (255)
#define POSIX_FADV_DONTNEED __POSIX_FADV_DONTNEED
#define _SYS_MMAN_H 1
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS _CS_XBS5_LPBIG_OFFBIG_CFLAGS
#define __INT_FAST32_MAX__ 0x7fffffffffffffffL
#define __LDBL_HAS_DENORM__ 1
#define cicp_encap_name(encap) (encap & CICP_LLAP_TYPE_VLAN ? "VLAN " : ""), (encap & CICP_LLAP_TYPE_MACVLAN ? "MACVLAN " : ""), (encap & CICP_LLAP_TYPE_IPVLAN ? "IPVLAN " : ""), (encap & CICP_LLAP_TYPE_VETH ? "VETH " : ""), (encap & CICP_LLAP_TYPE_LOOP ? "LOOP " : ""), (encap & CICP_LLAP_TYPE_BOND ? "BOND " : ""), (encap & CICP_LLAP_TYPE_USES_HASH ? "HASH " : ""), (encap & CICP_LLAP_TYPE_XMIT_HASH_LAYER34 ? "L34 " : ""), (encap & CICP_LLAP_TYPE_XMIT_HASH_LAYER2 ? "L2 " : ""), (encap & CICP_LLAP_TYPE_XMIT_HASH_LAYER23 ? "L23 " : ""), (encap & CICP_LLAP_TYPE_ROUTE_ACROSS_NS ? "XNS " : "")
#define LOG_FL(f,x) LOG_DC(ci_tp_log&(f), x)
#define __SIZEOF_PTHREAD_MUTEX_T 40
#define OO_OFFBUF_ASSERT_VALID(b,minp,maxp) do { ci_assert(b); ci_assert_ge(oo_offbuf_ptr(b), (char*)(minp)); ci_assert_le(oo_offbuf_end(b), (char*)(maxp)); ci_assert_le((b)->off, (b)->end); } while(0)
#define PRIdLEAST64 __PRI64_PREFIX "d"
#define __GLIBC_USE_IEC_60559_FUNCS_EXT 0
#define __NGREG 23
#define ITIMER_PROF ITIMER_PROF
#define _CS_XBS5_ILP32_OFF32_CFLAGS _CS_XBS5_ILP32_OFF32_CFLAGS
#define _PC_CHOWN_RESTRICTED _PC_CHOWN_RESTRICTED
#define ci_seq_ge(a,b,bits) (!ci_seq_lt((a), (b), (bits)))
#define OO_EPOLL_DEV_NAME "onload_epoll"
#define AF_RXRPC PF_RXRPC
#define _SC_SIGQUEUE_MAX _SC_SIGQUEUE_MAX
#define CI_FLAG_TSR_RETRIES_MASK 0x7f
#define CI_NETIF_ERROR_POST_POLL_LIST 0x01
#define __USE_POSIX199506 1
#define RAND_MAX 2147483647
#define CITP_PKTBUF_MODE_PHYS 2
#define KERN_WARNING "WARN>"
#define PRIiFAST32 __PRIPTR_PREFIX "i"
#define SIGQUIT 3
#define CI_TRACE_STRING(string) 
#define LOCK_UN 8
#define OO_PP_NULL -1
#define LOG_TC(x) LOG_FL(CI_TP_LOG_TC, x)
#define IPX_ARG(ip) CI_IP_PRINTF_ARGS(&((ip).ip4))
#define TCSETSF2 _IOW('T', 0x2D, struct termios2)
#define OO_OP_CHECK_VERSION 0xFF
#define EF_EVENT_RX_MULTI_CONT(e) ((e).rx_multi.flags & EF_EVENT_FLAG_CONT)
#define CI_EPLOCK_NETIF_PURGE_TXQS 0x0010000000000000ULL
#define ci_sys_fail(fn,rc) __ci_sys_fail(fn, rc, __FILE__, __LINE__)
#define __CI_EFHW_COMMON_CI2LINUX_H__ 
#define LINUX_VERSION_MAJOR 6
#define __DADDR_T_TYPE __S32_TYPE
#define OOFA_IPCACHE_STATE(ni,ipc) OOFA_IPCACHE_STATUS((ipc)->status), OOFA_IPCACHE_VALID((ni), (ipc))
#define efxdp_ef_eventq_check_event(vi,look_ahead) ef_eventq_has_many_events((vi), (look_ahead))
#define CI_UDPF_LAST_RECV_ON 0x00000020
#define ETH_P_8021AD 0x88A8
#define EDEADLK 35
#define ETH_P_8021AH 0x88E7
#define __INTPTR_WIDTH__ 64
#define __FLT64X_HAS_INFINITY__ 1
#define EPIPE 32
#define AF_NETLINK PF_NETLINK
#define _SC_SYSTEM_DATABASE_R _SC_SYSTEM_DATABASE_R
#define CI_TCP_STATS_INC_IN_SEGS(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_in_segs)
#define INADDR_MAX_LOCAL_GROUP ((in_addr_t) 0xe00000ff)
#define unix 1
#define __CPU_ISSET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? ((((const __cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] & __CPUMASK (__cpu))) != 0 : 0; }))
#define FIOQSIZE 0x5460
#define ci_frc_flush() 
#define PRIiFAST64 __PRI64_PREFIX "i"
#define __FD_SETSIZE 1024
#define __CI_SOCK_STATS_INC(ts,Fld) 
#define TIOCLINUX 0x541C
#define INET_ADDRSTRLEN 16
#define _XBS5_LP64_OFF64 1
#define ci_vmalloc malloc
#define OO_MEM_PRESSURE_CRITICAL 0x2
#define CI_TP_LOG_E 0x1
#define _POSIX_PRIORITY_SCHEDULING 200809L
#define ci_ip_copy_pkt_from_piov(ni,pkt,iov,aspc) __ci_ip_copy_pkt_from_piov((ni), (pkt), (iov))
#define CI_PKT_RX_FLAG_RX_SHARED 0x08
#define CI_IP_SOCK_STATS_VAL_TXBUFFREE(ts,v) do { __CI_SOCK_STATS_VAL((ts), tx_buffree, (v)); } while(0)
#define ci_seq_le(a,b,bits) (!ci_seq_lt((b), (a), (bits)))
#define __CI_APP_UTILS_H__ 
#define SI_USER SI_USER
#define ci_seq_lt(a,b,bits) (((a) - (b)) & (1u << ((bits) - 1)))
#define CI_PMTU_MAX_MTU (9 * 1024)
#define PRIi8 "i"
#define CI_CFG_TCP_FASTSTART 1
#define __glibc_fortify_n(f,__l,__s,__osz,...) (__glibc_safe_or_unknown_len (__l, __s, __osz) ? __ ## f ## _alias (__VA_ARGS__) : (__glibc_unsafe_len (__l, __s, __osz) ? __ ## f ## _chk_warn (__VA_ARGS__, (__osz) / (__s)) : __ ## f ## _chk (__VA_ARGS__, (__osz) / (__s))))
#define EBADMSG 74
#define ETH_P_IRDA 0x0017
#define __USE_XOPEN2K 1
#define TIOCCBRK 0x5428
#define SCNiLEAST16 "hi"
#define ifr_map ifr_ifru.ifru_map
#define ci_in_atomic() 0
#define CI_TCP_STATE_RECVD_FIN 0x008
#define __S_IFREG 0100000
#define ci_seqm_eq(a,b,mask) ((((a) - (b)) & (mask)) == 0u)
#define OO_IOC_NONE(XXX) _IO(OO_LINUX_IOC_BASE, OO_OP_ ##XXX)
#define __CI_EFHW_COMMON_SYSDEP_H__ 
#define CI_SOCK_TYPE_FMT "%s%s%s"
#define SIGABRT 6
#define _GCC_WRAP_STDINT_H 
#define CLD_CONTINUED CLD_CONTINUED
#define __O_DIRECT 040000
#define CI_TCPT_FLAG_TAIL_DROP_TIMING 0x80000
#define POSIX_FADV_NORMAL 0
#define __DEC32_MIN__ 1E-95DF
#define _IOC_SIZE(nr) (((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)
#define OO_MMAP_TYPE_CPLANE 1
#define S_IFCHR __S_IFCHR
#define SCNiLEAST32 "i"
#define __dev_t_defined 
#define _SC_XOPEN_CRYPT _SC_XOPEN_CRYPT
#define CI_TCP_EXT_STATS_INC_PRUNE_CALLED(netif) __CI_TCP_EXT_STATS_INC( (netif), prune_called )
#define FNTS_PRI_ARGS(n,t) __FUNCTION__, NTS_PRI_ARGS((n),(t))
#define __S_ISTYPE(mode,mask) (((mode) & __S_IFMT) == (mask))
#define OO_FOR_EACH_BIT(init_mask,mask,bitno) for( (mask) = (init_mask), (bitno) = __builtin_ctz(mask); (mask) ; (mask) = (mask) & ((mask) - 1), (bitno) = __builtin_ctz(mask) )
#define CI_IP_SOCK_STATS_VAL_RXWSCL(ts,s) do { __CI_SOCK_STATS_VAL((ts), rx_wscl, (s)); } while(0)
#define ETH_P_HSR 0x892F
#define CI_OFFSET(p,align) ((p) & ((align)-1u))
#define __cleanup_fct_attribute 
#define OO_SCP_FLAGS_FMT "%s%s%s%s"
#define uint32_t ci_uint32
#define TCP_TX_ERRNO(ts) (SOCK_TX_ERRNO(&(ts)->s))
#define EF_EVENT_PRI_ARG(e) (unsigned) (e).generic.type
#define _IOT_ifreq_int _IOT(_IOTS(char),IFNAMSIZ,_IOTS(int),1,0,0)
#define ci_seqm_neq(a,b,mask) (((a) - (b)) & (mask))
#define __DBL_MAX_EXP__ 1024
#define AUX_PER_BUF ((CI_CFG_EP_BUF_SIZE - CI_AUX_HEADER_SIZE) / CI_AUX_MEM_SIZE)
#define CICP_ENCAP_NAME_FMT "%s%s%s%s%s%s%s%s%s%s%s"
#define __WCHAR_WIDTH__ 32
#define __BIT_TYPES_DEFINED__ 1
#define CI_CFG_TCP_TX_BATCH 8
#define SEGV_ADIDERR SEGV_ADIDERR
#define SO_PEERNAME 28
#define CI_TP_LOG_SIG 0x40000000
#define INT_FAST64_MIN (-__INT64_C(9223372036854775807)-1)
#define IP_PMTUDISC_WANT 1
#define IP_RECVERR 11
#define TCP_RX_DONE(ts) ((ts)->s.rx_errno)
#define EFAB_NIC_DP_KNOWN(DP,PARAM) (offsetof(struct efab_nic_design_parameters, PARAM) < (DP).known_size)
#define ETH_P_PPP_MP 0x0008
#define __SSE2_MATH__ 1
#define NETLINK_CAP_ACK 10
#define __ATOMIC_HLE_RELEASE 131072
#define __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
#define CI_ALIGN_FWD(p,align) (((p)+(align)-1u) & ~((typeof(p))(align)-1u))
#define CI_CFG_CONG_AVOID_RFC3465_L_VALUE 2
#define _SC_OPEN_MAX _SC_OPEN_MAX
#define _VA_LIST_ 
#define PRIo8 "o"
#define SCNiLEAST64 __PRI64_PREFIX "i"
#define __PTRDIFF_MAX__ 0x7fffffffffffffffL
#define CI_TCP_SOCKET_FLAGS_PRI_ARG(ts) ((ts)->tcpflags & CI_TCPT_FLAG_TSO ? "TSO " :""), ((ts)->tcpflags & CI_TCPT_FLAG_WSCL ? "WSCL ":""), ((ts)->tcpflags & CI_TCPT_FLAG_SACK ? "SACK ":""), ((ts)->tcpflags & CI_TCPT_FLAG_ECN ? "ECN " :""), ((ts)->tcpflags & CI_TCPT_FLAG_STRIPE ? "STRIPE ":""), ((ts)->tcpflags & CI_TCPT_FLAG_SYNCOOKIE ? "SYNCOOKIE ":""), ((ts)->tcpflags & CI_TCPT_FLAG_WAS_ESTAB ? "ESTAB " :""), ((ts)->tcpflags & CI_TCPT_FLAG_NONBLOCK_CONNECT ? "NONBCON " :""), ((ts)->tcpflags & CI_TCPT_FLAG_PASSIVE_OPENED ? "PASSIVE " :""), ((ts)->tcpflags & CI_TCPT_FLAG_NO_ARP ? "ARP_FAIL " :""), ((ts)->tcpflags & CI_TCPT_FLAG_NO_TX_ADVANCE ? "NO_TX_ADVANCE " :""), ((ts)->tcpflags & CI_TCPT_FLAG_LOOP_DEFERRED ? "LOOP_DEFER ":""), ((ts)->tcpflags & CI_TCPT_FLAG_NO_QUICKACK ? "NO_QUICKACK ":""), ((ts)->tcpflags & CI_TCPT_FLAG_MEM_DROP ? "MEM_DROP ":""), ((ts)->tcpflags & CI_TCPT_FLAG_FIN_RECEIVED ? "FIN_RECV ":""), ((ts)->tcpflags & CI_TCPT_FLAG_ACTIVE_WILD ? "ACTIVE_WILD ":""), ((ts)->tcpflags & CI_TCPT_FLAG_MSG_WARM ? "MSG_WARM ":""), ((ts)->tcpflags & CI_TCPT_FLAG_LOOP_FAKE ? "LOOP_FAKE ":""), ((ts)->tcpflags & CI_TCPT_FLAG_TAIL_DROP_TIMING ? "TLP_TIMER ":""), ((ts)->tcpflags & CI_TCPT_FLAG_TAIL_DROP_MARKED ? "TLP_SENT ":""), ((ts)->tcpflags & CI_TCPT_FLAG_FIN_PENDING ? "FIN_PENDING ":"")
#define ETOOMANYREFS 109
#define CI_TEST(exp) do{ if( CI_UNLIKELY(!(exp)) ) ci_fail(("CI_TEST(%s)", #exp)); }while(0)
#define IPPROTO_HOPOPTS IPPROTO_HOPOPTS
#define _IOC_DIRSHIFT (_IOC_SIZESHIFT+_IOC_SIZEBITS)
#define _BITULL(x) (_ULL(1) << (x))
#define NTF_PROXY (1 << 3)
#define CI_CFG_POSIX_RECV 0
#define MCAST_INCLUDE 1
#define CI_IPX_IHL(af,ipx) CI_IP4_IHL(&(ipx)->ip4)
#define CI_IPTIME_WHEELS 4
#define CI_NI_READY_LIST_FLAG_PENDING_FREE 2
#define SCNdFAST16 __PRIPTR_PREFIX "d"
#define IPV6_UNICAST_HOPS 16
#define CI_TCP_ACK_FORCED_FLAG 0x4000
#define NETLINK_XFRM 6
#define SIOCDELMULTI 0x8932
#define OO_IOC_TCP_CLEAR_EPCACHE OO_IOC_NONE(TCP_CLEAR_EPCACHE)
#define CI_IP6_IS_V4MAPPED(ip6_p) (((ci_uint32 *)(ip6_p))[0] == 0 && ((ci_uint32 *)(ip6_p))[1] == 0 && ((ci_uint32 *)(ip6_p))[2] == CI_BSWAPC_BE32(0xffff))
#define CI_PTR_ALIGN_NEEDED_NZ(p,align) ((align) - (((char*)p) - ((char*) CI_ALIGN_BACK(((ci_ptr_arith_t)(p)), ((ci_ptr_arith_t)(align))))))
#define PF_PHONET 35
#define TCGETA 0x5405
#define __USECONDS_T_TYPE __U32_TYPE
#define IFHWADDRLEN 6
#define TCGETS 0x5401
#define TCGETX 0x5432
#define __OFF_T_TYPE __SYSCALL_SLONG_TYPE
#define OO_IOC_TCP_MORE_BUFS OO_IOC_NONE(TCP_MORE_BUFS)
#define ci_irqlock_ctor_dbg(l,fl,ln) ci_irqlock_ctor_i(l)
#define MSG_ZEROCOPY MSG_ZEROCOPY
#define IPTIMER_WHEEL2_MASK (CI_IPTIME_BUCKETMASK << (CI_IPTIME_BUCKETBITS*3))
#define ENONET 64
#define FPE_FLTOVF FPE_FLTOVF
#define FD_CLOEXEC 1
#define EF_VI_TRANSMIT_BATCH 64
#define _LINUX_STDDEF_H 
#define __ATOMIC_HLE_ACQUIRE 65536
#define CI_IP_SOCK_STATS_VAL_RXWIN(ts,w) do { __CI_SOCK_STATS_VAL((ts), rx_win, (w)); } while(0)
#define SO_ATTACH_FILTER 26
#define ETH_P_ERSPAN 0x88BE
#define OOFA_IP4(ip4) ((int) ((const ci_uint8*)&(ip4))[0]), ((int) ((const ci_uint8*)&(ip4))[1]), ((int) ((const ci_uint8*)&(ip4))[2]), ((int) ((const ci_uint8*)&(ip4))[3])
#define _STDARG_H 
#define tcp_snd_up(ts) ((ts)->snd_up)
#define ci_irqlock_ctor(l) ci_irqlock_ctor_dbg(l, __FILE__, __LINE__)
#define OO_PP_ID(pp) ((int) (pp))
#define _PC_PIPE_BUF _PC_PIPE_BUF
#define PF_NETBEUI 13
#define AF_AX25 PF_AX25
#define _PC_VDISABLE _PC_VDISABLE
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define OOFA_IPX(addr) IPX_ARG(AF_IP(addr))
#define SI_SIGIO SI_SIGIO
#define SO_COOKIE 57
#define CI_IP_DFLT_TOS 0
#define LNTS_PRI_ARGS NTS_PRI_ARGS
#define _BITS_STDIO2_H 1
#define _SC_BARRIERS _SC_BARRIERS
#define __EFAB_EF_VI_H__ 
#define _SC_XOPEN_LEGACY _SC_XOPEN_LEGACY
#define st_atime st_atim.tv_sec
#define CI_IP_CACHE_REQUEST_HWPORT 2
#define _POSIX_CPUTIME 0
#define CI_TCP_EXT_STATS_INC_TCP_DIRECT_COPY_FROM_PREQUEUE(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_direct_copy_from_prequeue )
#define NLM_F_APPEND 0x800
#define ci_irqlock_lock(l,s) ci_irqlock_lock_dbg((l),(s), __FILE__, __LINE__)
#define OOF_IPCACHE_STATE OOF_IPCACHE_STATUS"("OOF_IPCACHE_VALID")"
#define PTHREAD_CREATE_DETACHED PTHREAD_CREATE_DETACHED
#define _LINUX_TYPES_H 
#define OO_OS_STATUS_SEQ_SHIFT 3
#define __PRIPTR_PREFIX "l"
#define ef_eventq_has_many_events(vi,n_events) (vi)->ops.eventq_has_many_events((vi), (n_events))
#define _CS_POSIX_V7_ILP32_OFF32_LIBS _CS_POSIX_V7_ILP32_OFF32_LIBS
#define __BFLT16_HAS_INFINITY__ 1
#define CI_NETIF_ERROR_SYNRECV_TABLE 0x20
#define __SIZEOF_WINT_T__ 4
#define CI_TCP_FLAG_STR(flags,flag,str) (((flags) & CI_TCP_FLAG_ ##flag) ? (str) : "")
#define ifr_flags ifr_ifru.ifru_flags
#define SCNdFAST64 __PRI64_PREFIX "d"
#define _SYS_FILE_H 1
#define CI_SB_AFLAG_O_NONBLOCK_UNSYNCED 0x20000
#define TIOCSPGRP 0x5410
#define TIOCGSID 0x5429
#define __f32x(x) x ##f32x
#define TCSETSW2 _IOW('T', 0x2C, struct termios2)
#define ENOTNAM 118
#define S_TO_EPS(ni,s) ID_TO_EPS(ni,S_ID(s))
#define SIGALRM 14
#define __LONG_LONG_WIDTH__ 64
#define __putc_unlocked_body(_ch,_fp) (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
#define CI_IPTIME_BUCKETBITS 8
#define NUD_PERMANENT 0x80
#define __U16_TYPE unsigned short int
#define unsafe_memcpy(dst,src,bytes,justification) memcpy(dst, src, bytes)
#define ci_irqlock_unlock(l,s) ci_irqlock_unlock_dbg((l),(s), __FILE__, __LINE__)
#define CLD_EXITED CLD_EXITED
#define TIOCPKT_NOSTOP 16
#define tcp_srtt(ts) ((ts)->sa >> 3u)
#define EF_LOG_CONFIG_WARNINGS 3
#define _STDIO_H 1
#define WINT_MAX (4294967295u)
#define __ONLOAD_COMMON_H__ 
#define ENOSPC 28
#define SUN_LEN(ptr) (offsetof (struct sockaddr_un, sun_path) + strlen ((ptr)->sun_path))
#define OO_TIMEOUT_Q_TIMEWAIT 0
#define POSIX_MADV_NORMAL 0
#define UINTPTR_MAX (18446744073709551615UL)
#define CITP_NETIF_DTOR_ALL 2
#define PRIx8 "x"
#define CI_CPU_HAS_SSE 1
#define PRIxFAST64 __PRI64_PREFIX "x"
#define ef_vi_receive_set_discards(vi,discard_err_flags) (vi)->ops.receive_set_discards((vi), discard_err_flags)
#define __CI_TOOLS_MAGIC_H__ 
#define NETDB_INTERNAL -1
#define CI_PAGE_SHIFT 12
#define _SC_UCHAR_MAX _SC_UCHAR_MAX
#define __ASM_GENERIC_POSIX_TYPES_H 
#define CI_CFG_EPOLL1_SETS_PER_STACK 4
#define OO_EPLOCK_TIMEOUT_INFTY (-1L)
#define _SC_XOPEN_XCU_VERSION _SC_XOPEN_XCU_VERSION
#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
#define __isleap(year) ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))
#define ETH_P_ALL 0x0003
#define CI_SB_FLAG_WAKE_TX_B 0
#define NETLINK_UNUSED 1
#define CERASE 0177
#define SEQ_LE(s1,s2) ((ci_int32)((s1) - (s2)) <= 0)
#define __FLT_MIN_EXP__ (-125)
#define SOCK_TXREHASH_DEFAULT 255
#define CI_UDPF_EF_SEND 0x00000010
#define S_IPX_TCP_HDR(s) S_TCP_HDR(s)
#define CI_TCP_FLAG_SYN 0x02
#define WEXITED 4
#define F_GETOWN __F_GETOWN
#define INT64_MAX (__INT64_C(9223372036854775807))
#define IPV6_V6ONLY 26
#define IFF_DYNAMIC IFF_DYNAMIC
#define _IOC_WRITE 1U
#define __CPU_EQUAL_S(setsize,cpusetp1,cpusetp2) (__builtin_memcmp (cpusetp1, cpusetp2, setsize) == 0)
#define CI_DLLIST_INITIALISER(name) { { &(name).l, &(name).l } }
#define CI_CFG_WANT_BPF_NATIVE 1
#define CI_SB_AFLAG_OS_BACKED 0x10000
#define IP_OPTIONS 4
#define AF_PPPOX PF_PPPOX
#define CI_EF_LOG_DEFAULT ((1 << EF_LOG_BANNER) | (1 << EF_LOG_RESOURCE_WARNINGS) | (1 << EF_LOG_CONFIG_WARNINGS) | (1 << EF_LOG_USAGE_WARNINGS))
#define IPV6_RECVRTHDR 56
#define kernel_packets_pending(ns) ((ns)->kernel_packets_pending)
#define CI_CVS_OPT_HDR_VERSION ("$Revision$")
#define PKT(ni,id) __PKT((ni), TRUSTED_PKT_ID((ni), (id)))
#define IP_MULTICAST_ALL 49
#define __attribute_copy__(arg) __attribute__ ((__copy__ (arg)))
#define __S_IFMT 0170000
#define SOF_TIMESTAMPING_OOEXT_TRAILER (1U << 31)
#define NTF_SELF (1 << 1)
#define ci_wmb() ci_compiler_barrier()
#define __HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16
#define __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
#define LOG_URG(x) LOG_FL(CI_TP_LOG_URG, x)
#define ci_dllist_get ci_dllist_pop
#define CI_UDP_INITIAL_MTU ETH_DATA_LEN
#define _PC_SOCK_MAXBUF _PC_SOCK_MAXBUF
#define NUD_NOARP 0x40
#define _SC_ULONG_MAX _SC_ULONG_MAX
#define CI_PKT_FLAG_TX_PSH 0x0040
#define CI_ERRQ_UDP_ERR_MAX 4
#define NETLINK_CONNECTOR 11
#define SCM_WIFI_STATUS SO_WIFI_STATUS
#define _SC_LEVEL2_CACHE_LINESIZE _SC_LEVEL2_CACHE_LINESIZE
#define ifr_mtu ifr_ifru.ifru_mtu
#define IPV6_RECVHOPLIMIT 51
#define ipcache_ttl(ipcache) ((ipcache)->ipx.ip4.ip_ttl)
#define __FLT64X_HAS_QUIET_NAN__ 1
#define __INT_FAST64_TYPE__ long int
#define _NSIG (__SIGRTMAX + 1)
#define ci_bswap16 ci_bswapc16
#define __CI_DEBUG_OP_NETSTAT_STACK__ (7)
#define CI_CFG_PKT_SET_LOW_WATER (PKTS_PER_SET / 2)
#define PTHREAD_INHERIT_SCHED PTHREAD_INHERIT_SCHED
#define __BFLT16_MAX__ 3.38953138925153547590470800371487867e+38BF16
#define _SC_MQ_OPEN_MAX _SC_MQ_OPEN_MAX
#define NLMSG_HDRLEN ((int) NLMSG_ALIGN(sizeof(struct nlmsghdr)))
#define TIOCSSERIAL 0x541F
#define ci_x86_mfence() __asm__ __volatile__ ("mfence")
#define IPV6_RECVTCLASS 66
#define __BFLT16_HAS_DENORM__ 1
#define _BITS_SIGNUM_ARCH_H 1
#define CITP_CLUSTER_RESTART_FAIL 0
#define O_RSYNC O_SYNC
#define SOCK_TX_ERRNO(s) ((s)->tx_errno)
#define WINT_MIN (0u)
#define CI_CFG_STATS_TCP_LISTEN 1
#define CI_STRUCT_MBR(name,val) .name = val
#define __key_t_defined 
#define SCNxFAST32 __PRIPTR_PREFIX "x"
#define __AC(X,Y) (X ##Y)
#define ETH_P_ARP 0x0806
#define SO_BUSY_POLL 46
#define __FLT16_DENORM_MIN__ 5.96046447753906250000000000000000000e-8F16
#define TTYDEF_CFLAG (CREAD | CS7 | PARENB | HUPCL)
#define NETLINK_RX_RING 6
#define IPV6_MTU 24
#define SO_RCVLOWAT 18
#define __ONLOAD_SOCK_P_H__ 
#define OOF_IPCACHE_STATUS "%s"
#define IPV6_RECVDSTOPTS 58
#define ONLOAD_SOF_TIMESTAMPING_STREAM (1 << 23)
#define __CI_DEBUG_OP_IP_STATS__ (13)
#define IPPROTO_MTP IPPROTO_MTP
#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS _CS_POSIX_V6_LP64_OFF64_LDFLAGS
#define CLOCK_REALTIME_COARSE 5
#define CI_DLLIST_LINK_ASSERT_VALID(l) do{ ci_assert_equal((((l)->prev))->next, l); ci_assert_equal((((l)->next))->prev, l); }while(0)
#define _XOPEN_LEGACY 1
#define FL_LOCK_SOCK 0x2
#define __HAVE_DISTINCT_FLOAT64 0
#define CI_TCP_AUX_TYPE_PMTUS 3
#define __INT_LEAST8_TYPE__ signed char
#define UTIME_NOW ((1l << 30) - 1l)
#define CI_DEFFACED CI_BSWAPC_BE32(0xDEFFACED)
#define __HAVE_FLOAT32X 1
#define ENETRESET 102
#define ci_irqlock_safely_do(lockp,cmd) do { ci_irqlock_state_t __irqstate; ci_irqlock_lock((lockp), &__irqstate); {cmd;} ci_irqlock_unlock((lockp), &__irqstate); } while(0)
#define _POSIX_JOB_CONTROL 1
#define CITP_MCAST_SEND_FLAG_LOCAL 1
#define CI_SO_L5_CONFIG_SOCK_STATS (__SO_L5_BASE+0x05)
#define ci_bswap64 __builtin_bswap64
#define CI_IP_STATS_MAX_VAL 0xffffffff
#define IPX_PORT_FMT IPX_FMT":%d"
#define __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
#define CI_IP_SOCK_STATS_RANGE_LEN (sizeof(ci_ip_sock_stats_min)/sizeof( CI_IP_STATS_TYPE))
#define CI_IP4_FRAG_MORE CI_BSWAPC_BE16(0x2000)
#define oo_pktq_is_empty(q) ((q)->num == 0)
#define CLOCK_REALTIME_ALARM 8
#define _ci_assert(exp,file,line) do{}while(0)
#define TCP_FORCE_ACK(ts) ((ts)->acks_pending |= CI_TCP_ACK_FORCED_FLAG)
#define __LEAF_ATTR __attribute__ ((__leaf__))
#define S_IFREG __S_IFREG
#define __DECIMAL_BID_FORMAT__ 1
#define IFF_RUNNING IFF_RUNNING
#define CI_ERRQ_TCP_ERR_MASK (CI_ERRQ_TCP_ERR_MAX-1)
#define CITP_SCALABLE_MODE_PASSIVE_RSS (CITP_SCALABLE_MODE_PASSIVE | CITP_SCALABLE_MODE_RSS)
#define __FLT64_MIN_EXP__ (-1021)
#define IPV6_RECVERR 25
#define __RLIM64_T_TYPE __UQUAD_TYPE
#define PF_MAX 46
#define CI_TCP_HDR_FLAGS_PRI_ARG(hdr) CI_TCP_FLAGS_PRI_ARG((hdr)->tcp_flags)
#define _SC_V7_LP64_OFF64 _SC_V7_LP64_OFF64
#define CI_TCPT_FLAG_SEQNO_REMEMBERED 0x400000
#define _INTTYPES_H 1
#define CI_NDEBUG(x) x
#define ci_assert_le(exp1,exp2) _ci_assert_le(exp1, exp2, __FILE__, __LINE__)
#define FPE_INTDIV FPE_INTDIV
#define IP_RECVTOS 13
#define SO_PEERSEC 31
#define CI_IPV4_STATS_INC_IN_HDR_ERRS(netif) __CI_IPV4_STATS_INC( (netif), in_hdr_errs)
#define SOL_DECNET 261
#define __CI_INTERNAL_OO_VI_FLAGS_H__ 
#define ETH_P_MOBITEX 0x0015
#define OO_IOC_RSOP_DUMP OO_IOC_NONE(RSOP_DUMP)
#define timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)
#define CI_IP_PRINTF_FORMAT "%d.%d.%d.%d"
#define CI_DLLIST_FOR_EACH2(c_type,p_c,lnk_mbr,list) for( (p_c) = CI_CONTAINER(c_type, lnk_mbr, ci_dllist_start(list)); (&((p_c)->lnk_mbr) != ci_dllist_end(list)) || ((p_c) = 0,0); (p_c) = CI_CONTAINER(c_type, lnk_mbr, ((p_c)->lnk_mbr).next) )
#define CI_DLLIST_FOR_EACH3(c_type,p_c,lnk_mbr,list,temp_next) for( (p_c) = CI_CONTAINER(c_type, lnk_mbr, ci_dllist_start(list)); ( temp_next=CI_CONTAINER(c_type, lnk_mbr, ((p_c)->lnk_mbr).next) ) && ((&((p_c)->lnk_mbr) != ci_dllist_end(list)) || ((p_c) = 0,0)); (p_c) = temp_next )
#define CI_DLLIST_FOR_EACH4(p_lnk,p_list,temp_next) for( ((p_lnk) = ci_dllist_start(p_list), (temp_next) = (p_lnk), ci_dllist_iter(temp_next)); ((p_lnk) != ci_dllist_end(p_list)) || ((p_lnk) = 0,0); ((p_lnk) = (temp_next), ci_dllist_iter(temp_next)) )
#define __USE_POSIX199309 1
#define __FDS_BITS(set) ((set)->__fds_bits)
#define CI_TCP_HDR_OPTS(hdr) ((ci_uint8*)&(hdr)->tcp_urg_ptr_be16+2)
#define IN_CLASSC_HOST (0xffffffff & ~IN_CLASSC_NET)
#define __ULONGWORD_TYPE unsigned long int
#define CI_CFG_NETIF_HARDEN 0
#define E_PRI_ARGS(epi) NSS_PRI_ARGS((epi)->sock.netif, (epi)->sock.s)
#define ci_netif_pkt_release_rx_1ref(ni,pkt) ci_netif_pkt_release_1ref(ni, pkt)
#define OO_P_ADD(p,off) do{ (p) += (off); }while(0)
#define _IOR(type,nr,size) _IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))
#define __FLT16_MIN_10_EXP__ (-4)
#define CI_USER_PTR_SET(p,x) ((p).ptr = (ci_uint64)(ci_uintptr_t)(x))
#define OO_P_EQ(pa,pb) ((pa) == (pb))
#define IP_TOS 1
#define _SC_FILE_LOCKING _SC_FILE_LOCKING
#define CI_SOCK_ERR_GET(err) (err = errno)
#define _IOC(dir,type,nr,size) (((dir) << _IOC_DIRSHIFT) | ((type) << _IOC_TYPESHIFT) | ((nr) << _IOC_NRSHIFT) | ((size) << _IOC_SIZESHIFT))
#define ifr_data ifr_ifru.ifru_data
#define __REGISTER_PREFIX__ 
#define __UINT16_MAX__ 0xffff
#define CI_FITS(p,size,align,signed_t) (CI_ALIGN_NEEDED((p) + 1, (align), signed_t) + 1 >= (size))
#define CI_IP4_ARE_FROM_SAME_PKT(ip1,ip2) ( ((ip1)->ip_id_be16 == (ip2)->ip_id_be16) && ((ip1)->ip_saddr_be32 == (ip2)->ip_saddr_be32) && ((ip1)->ip_daddr_be32 == (ip2)->ip_daddr_be32))
#define CI_SO_L5_CONFIG_NETIF_STATS (__SO_L5_BASE+0x06)
#define ci_dllist_assert_valid(l) 
#define __INTPTR_MAX__ 0x7fffffffffffffffL
#define EIDRM 43
#define PF_ROSE 11
#define OO_PIPE_MAX_BUFS (OO_PIPE_SIZE_TO_BUFS(CI_CFG_MAX_PIPE_SIZE) + 1)
#define SIOCSIFSLAVE 0x8930
#define EF_EVENT_TX_Q_ID(e) ((e).tx.q_id)
#define _PC_NAME_MAX _PC_NAME_MAX
#define MADV_DONTDUMP 16
#define NLM_F_EXCL 0x200
#define _CS_XBS5_ILP32_OFFBIG_LIBS _CS_XBS5_ILP32_OFFBIG_LIBS
#define __attr_dealloc_free __attr_dealloc (__builtin_free, 1)
#define ETH_P_PAE 0x888E
#define _PC_MAX_CANON _PC_MAX_CANON
#define NWS_PRI_ARGS(n,w) NI_ID(n), W_FMT(w), ci_tcp_state_str((w)->state)
#define PF_INET6 10
#define CI_IP_SOCK_STATS_INC_TXSTUCK(ts) __CI_SOCK_STATS_INC( (ts), tx_stuck )
#define __clock_t_defined 1
#define CI_UDPF_IMPLICIT_BIND 0x00000004
#define __USE_POSIX2 1
#define LNTFS_PRI_ARGS NTFS_PRI_ARGS
#define IP_TRANSPARENT 19
#define IP_RECVTTL 12
#define CI_TCP_EXT_STATS_INC_LOCK_DROPPED_ICMPS(netif) __CI_TCP_EXT_STATS_INC( (netif), lock_dropped_icmps )
#define NTF_STICKY (1 << 6)
#define CI_SOCK_ERR_STR() (strerror(errno))
#define _SC_LEVEL2_CACHE_ASSOC _SC_LEVEL2_CACHE_ASSOC
#define __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
#define CI_CFG_RANDOM_DROP 0
#define ETH_P_QINQ1 0x9100
#define ETH_P_QINQ2 0x9200
#define ETH_P_QINQ3 0x9300
#define SP_TO_SOCK(ni,sp) SP_TO_foo((ni), (sp), ci_sock_cmn)
#define CI_IPV6_DFLT_HOPLIMIT 64
#define OOF_PORT "%d"
#define CI_CFG_NOTICE_WINDOW_SHRINKAGE 1
#define _SC_LEVEL1_ICACHE_ASSOC _SC_LEVEL1_ICACHE_ASSOC
#define __INT_LEAST32_WIDTH__ 32
#define _SYS_UIO_H 1
#define CI_PFD_AFLAG_NONBLOCK 0x01
#define CI_TCP_FLAG_ECE 0x40
#define IPV6_AUTOFLOWLABEL 70
#define ci_lock_ctor_dbg(l,fl,ln) ci_lock_ctor_i(l)
#define SCNiMAX __PRI64_PREFIX "i"
#define SIOCSIFMTU 0x8922
#define IPV6_2292PKTINFO 2
#define __CI_EFRM_DEBUG_H__ 
#define CI_TCP_AUX_TYPE_NUM 4
#define __FLT_MANT_DIG__ 24
#define AF_IUCV PF_IUCV
#define ci_lock_trylock(l) ci_lock_trylock_dbg(l, __FILE__, __LINE__)
#define _IOW(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))
#define CI_CFG_TX_CRC_OFFLOAD 0
#define CI_HAVE_SPINLOCKS 
#define __VERSION__ "13.3.0"
#define SCNoLEAST8 "hho"
#define CI_SOCK_FLAG_PMTU_DO 0x00008000
#define __IOV_MAX 1024
#define PRIuPTR __PRIPTR_PREFIX "u"
#define S_ISFIFO(mode) __S_ISTYPE((mode), __S_IFIFO)
#define CI_DEADCODE CI_BSWAPC_BE32(0xDEADC0DE)
#define IP_PKTINFO 8
#define __UINT64_C(c) c ## UL
#define CI_SB_AFLAG_TCP_IN_ACCEPTQ_BIT 1u
#define PRIXLEAST16 "X"
#define _SYS_CDEFS_H 1
#define CI_TCP_OPT_MSS 0x2
#define RX_PKT_DADDR(pkt) ipx_hdr_daddr(oo_pkt_af(pkt), RX_PKT_IPX_HDR(pkt))
#define CI_UDPF_SO_TIMESTAMP 0x00004000
#define ILL_ILLTRP ILL_ILLTRP
#define MCL_ONFAULT 4
#define HANDOVER_DESCRIPTION(_x) "All of the handover statistics represent sockets that have been handed " "to the kernel; and the call that was made that caused this." "  (In this case " #_x "with a TCP socket)  " "Most often, this is caused by routing over a non-accelerated interface " "(including loopback; see EF_TCP_SERVER_LOOPBACK and " "EF_TCP_CLIENT_LOOPBACK); but unsupported socket options and resource " "limitations can also cause this."
#define ef_vi_pure __attribute__ ((pure))
#define SIOCRTMSG 0x890D
#define CI_TCP_TCONST_KEEPALIVE_INTVL 75000
#define OO_SW_FILTER_OPS_SIZE (CI_CFG_MAX_LOCAL_IPADDRS * 2)
#define AT_EACCESS 0x200
#define CI_CFG_STR 4
#define SEQ_MIN(x,y) (SEQ_LE(x, y) ? (x) : (y))
#define CI_ASSERT_ICMP_TYPES_VALID ci_assert((sizeof(ci_icmp_msg) - sizeof(ci_icmp_hdr)) == 4)
#define EFILTERSSOME EDQUOT
#define CI_CFG_ZC_RECV_FILTER 1
#define CI_DBG_NETIF_INFO_MAX_ENDPOINTS 40
#define EBFONT 59
#define CI_SOCK_FLAG_SET_IPV6_UNICAST_HOPS 0x20000000
#define _POSIX_VERSION 200809L
#define _STDC_PREDEF_H 1
#define IN6_IS_ADDR_MC_ORGLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x8))
#define FIOCLEX 0x5451
#define PRIXLEAST32 "X"
#define CI_TCP_OPT_SACK 0x5
#define tcp_lport_be16(ts) sock_lport_be16(&(ts)->s)
#define __INT_WCHAR_T_H 
#define CI_IP_PREFIXLEN_BAD 0xff
#define CI_CFG_DESTROY_WEDGED 1
#define CI_IP4_FRAG_OFFSET(ip) CI_BSWAP_BE16((ip)->ip_frag_off_be16 & CI_IP4_OFFSET_MASK)
#define _____fpos_t_defined 1
#define _PC_REC_INCR_XFER_SIZE _PC_REC_INCR_XFER_SIZE
#define OO_SP_IS_NULL(p) ((p) < 0)
#define __bitwise 
#define _SC_TIMERS _SC_TIMERS
#define __W_EXITCODE(ret,sig) ((ret) << 8 | (sig))
#define ETH_TLEN 2
#define _CS_XBS5_LP64_OFF64_LIBS _CS_XBS5_LP64_OFF64_LIBS
#define ENOTSOCK 88
#define FL_ARG_SV 0x10
#define ci_istack_empty(s) ((s)->istack_ptr == 0)
#define O_RDWR 02
#define __INT_LEAST32_MAX__ 0x7fffffff
#define _SYS_SOCKET_H 1
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define ef_vi_transmit_alt_go(vi,alt_id) (vi)->ops.transmit_alt_go((vi), (alt_id))
#define _T_PTRDIFF_ 
#define __DEFINED_ptrdiff_t 
#define MSG_CONFIRM MSG_CONFIRM
#define IFF_NOTRAILERS IFF_NOTRAILERS
#define AF_ECONET PF_ECONET
#define ci_lock_no_holder (ci_lock_holder_t)NULL
#define CI_IPX_ADDR_EQ(a,b) (!CI_IP_ADDR_CMP((a).ip4, (b).ip4))
#define PF_FILE PF_LOCAL
#define LNT_FMT LPF "%d:%d "
#define CI_TCP_EXT_STATS_INC_TCP_MEMORY_PRESSURES(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_memory_pressures )
#define RSS_HASH_SIZE 0x80
#define _SC_NL_LANGMAX _SC_NL_LANGMAX
#define __FLT128_MAX_EXP__ 16384
#define PRIXLEAST64 __PRI64_PREFIX "X"
#define CI_TCP_EXT_STATS_INC_TCP_LOSS_FAILURES(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_loss_failures )
#define ETHERTYPE_REVARP 0x8035
#define SEGV_CPERR SEGV_CPERR
#define ETHERTYPE_VLAN 0x8100
#define PROT_WRITE 0x2
#define OO_IOC_OOF_CP_DNAT_DEL OO_IOC_W(OOF_CP_DNAT_DEL, struct oo_op_cplane_dnat_del)
#define CITP_TCP_LOOPBACK_TO_NEWSTACK 4
#define SIGPOLL 29
#define SOL_NFC 280
#define ef_vi_receive_get_discards(vi) (vi)->ops.receive_get_discards((vi))
#define _CS_XBS5_LP64_OFF64_CFLAGS _CS_XBS5_LP64_OFF64_CFLAGS
#define CICP_FWD_DATA_FLAG_ARP_FAILED 0x2
#define CI_SOCK_FLAG_ALWAYS_DF 0x00010000
#define ci_lock_unlock_i(l) pthread_mutex_unlock(l)
#define ci_fifo2_buf_size(f) ((f)->fifo_mask + 1u)
#define ci_bit_mask_clear(b,m) ci_atomic32_and((b), ~(m))
#define OO_IOC_CP_READY OO_IOC_NONE(CP_READY)
#define EF_FMT "%d:%d/"FD_FMT
#define TIOCMSET 0x5418
#define timercmp(a,b,CMP) (((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))
#define CI_TCP_EXT_STATS_INC_TCP_RENO_RECOVERY(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_reno_recovery )
#define __FLT32_MANT_DIG__ 24
#define IPV6_MULTICAST_HOPS 18
#define _SYS_SIZE_T_H 
#define CI_EPLOCK_NETIF_PKT_WAKE 0x0100000000000000ULL
#define SOF_TIMESTAMPING_OOEXT_FIRST (1U << 31)
#define SIOCGIFBRDADDR 0x8919
#define CI_MEMLEAK_DEBUG_ALLOC_TABLE 0
#define CI_RANDOM_OOM_RET(ret) do { if (CI_RANDOM_ERROR()) { ci_log("%s: random oom rc=%d", __FUNCTION__,ret); return (ret); } } while(0);
#define CI_SB_AFLAG_IN_PASSIVE_CACHE 0x8000
#define CP_VERLOCK_STOP(var_,mib_) if( (var_) != OO_ACCESS_ONCE(*(mib_)->version)) goto _verlock_again;
#define _CS_POSIX_V6_LP64_OFF64_LINTFLAGS _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
#define NUD_DELAY 0x08
#define CI_FIFO2_PRI_ARG(f) (unsigned) ci_fifo2_rd_i(f), (unsigned) ci_fifo2_wr_i(f), (int) ci_fifo2_num(&(f)), (int) ci_fifo2_contig_num(&(f)), (int) ci_fifo2_space(&(f)), (int) ci_fifo2_contig_space(&(f))
#define CI_WRITE_ONCE(x,v) (OO_ACCESS_ONCE((x)) = (v))
#define EF_EVENT_RX_SOP(e) ((e).rx.flags & EF_EVENT_FLAG_SOP)
#define EF_EVENT_TYPE(e) ((e).generic.type)
#define __SIZE_T__ 
#define CI_IFID_LOOP 1
#define __stub_gtty 
#define CI_IP_IS_MULTICAST(ip_be32) (((ip_be32) & CI_BSWAPC_BE32(0xf0000000)) == CI_BSWAPC_BE32(0xe0000000))
#define CI_TCP_STATE_TCP_CONN 0x100
#define CI_SB_AFLAG_DEFERRED_BIT 2u
#define MAP_HUGE_SHIFT 26
#define si_value _sifields._rt.si_sigval
#define __EFAB_BASE_H__ 
#define EFAULT 14
#define IOCSIZE_MASK (_IOC_SIZEMASK << _IOC_SIZESHIFT)
#define IP_PASSSEC 18
#define IPPORT_RESERVED 1024
#define __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
#define SIOCGIFMETRIC 0x891d
#define EF_EVENT_FLAG_ISCSI_OK 0x4
#define CI_KERNEL_ARG(x) 
#define ci_istack_not_full(s) ((s)->istack_ptr != (s)->istack_size)
#define si_utime _sifields._sigchld.si_utime
#define __SIGRTMIN 32
#define __ONLOAD_EXTENSIONS_TIMESTAMPING_H__ 
#define MSG_BATCH MSG_BATCH
#define CI_CFG_LIMIT_AMSS 1
#define CI_IP4_IHL_VERSION(ihl) ((4u << 4u) | ((ihl) >> 2u))
#define _SC_PII_OSI _SC_PII_OSI
#define CI_SOCK_ERR_ORIGIN_ICMP 2
#define INADDR_DUMMY ((in_addr_t) 0xc0000008)
#define ef_vi_transmitv_ctpio_copy(vi,frame_len,frame_iov,frame_iov_len,ct_threshold,fallback) (vi)->ops.transmitv_ctpio_copy((vi), (frame_len), (frame_iov), (frame_iov_len), (ct_threshold), (fallback))
#define OO_IOC_TCP_SOCK_UNLOCK OO_IOC_W(TCP_SOCK_UNLOCK, ci_int32)
#define AI_ALL 0x0010
#define __STDC_IEC_60559_COMPLEX__ 201404L
#define __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64
#define _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
#define FFSYNC O_FSYNC
#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
#define S_IWRITE S_IWUSR
#define ci_wait_readable(fd,timeout) ci_select_1( (fd), CI_SELECT_READABLE, 0, (timeout) )
#define CI_CFG_TCPDUMP 1
#define __wur __attribute_warn_unused_result__
#define ELOOP 40
#define SCNiLEAST8 "hhi"
#define ETH_P_PRP 0x88FB
#define __BFLT16_MIN__ 1.17549435082228750796873653722224568e-38BF16
#define CI_CFG_SEND_STATS_TO_LOG 1
#define CI_UDPF_FILTERED 0x00000001
#define ipx_hdr_saddr(af,hdr) ({ struct { ci_addr_t a[1]; } a = {}; a.a[0] = IS_AF_INET6(af) ? CI_ADDR_FROM_IP6((hdr)->ip6.saddr) : CI_ADDR_FROM_IP4((hdr)->ip4.ip_saddr_be32); a;}).a[0]
#define __FLT128_HAS_DENORM__ 1
#define CI_TCP_STATE_UDP (0xb000)
#define F_SETFL 4
#define EF_LOG_MAX 6
#define SIG_UNBLOCK 1
#define _SC_SSIZE_MAX _SC_SSIZE_MAX
#define EF_EVENT_RX_DISCARD_SOP(e) ((e).rx_discard.flags&EF_EVENT_FLAG_SOP)
#define ci_fifo_num(f) CI_FIFO_M((f), (f)->fifo_wr_i + (f)->fifo_size - (f)->fifo_rd_i)
#define __F_GETSIG 11
#define OO_SIGHANGLER_TERM 0
#define SIGTSTP 20
#define SIOCSIFENCAP 0x8926
#define IN_CLASSB_MAX 65536
#define __INT32_C(c) c
#define CI_ETHERTYPE_ARP CI_BSWAPC_BE16(0x0806)
#define __DEC64_EPSILON__ 1E-15DD
#define __ORDER_PDP_ENDIAN__ 3412
#define CI_HWPORT_ID_BAD ((ci_hwport_id_t) -1)
#define __PDP_ENDIAN 3412
#define _POSIX_MEMLOCK 200809L
#define NETLINK_ISCSI 8
#define EFRM_NIC_SET_FMT CI_PRIx64
#define EL2HLT 51
#define ci_assert_addrs_equal(exp1,exp2) _ci_assert_addrs_equal(exp1, exp2, __FILE__, __LINE__)
#define CI_TCP_LISTEN_BUCKET_S 4
#define CI_SOCK_FLAG_BOUND 0x00000080
#define CI_UNIX_PIPE_DONT_ACCELERATE 0
#define OO_IOC_EPLOCK_LOCK OO_IOC_RW(EPLOCK_LOCK, ci_int32)
#define ETH_P_PUP 0x0200
#define CI_TCPT_FLAG_LOOP_FAKE 0x20000
#define BYTE_ORDER __BYTE_ORDER
#define s6_addr __in6_u.__u6_addr8
#define CICP_FWD_FLAG_FIXED_MAC 0x20
#define CLOCK_MONOTONIC_COARSE 6
#define __have_pthread_attr_t 1
#define __STDC_FORMAT_MACROS 
#define CBRK CEOL
#define CSTOP CTRL('s')
#define OO_SP_INVALID -2
#define __CI_COMPAT_GCC_H__ 
#define CI_CFG_PKT_SET_HIGH_WATER (PKTS_PER_SET - PKTS_PER_SET / 32)
#define UINT64_MAX (__UINT64_C(18446744073709551615))
#define _XOPEN_VERSION 700
#define ILL_COPROC ILL_COPROC
#define IPV6_HOPLIMIT 52
#define _SC_MULTI_PROCESS _SC_MULTI_PROCESS
#define __INT_FAST8_MAX__ 0x7f
#define NO_RECOVERY 3
#define __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
#define EINVAL 22
#define _ANSI_STDARG_H_ 
#define WSTOPSIG(status) __WSTOPSIG (status)
#define __UINT_LEAST16_TYPE__ short unsigned int
#define PRIuFAST8 "u"
#define ETHER_MAX_LEN (ETH_FRAME_LEN + ETHER_CRC_LEN)
#define __WIFEXITED(status) (__WTERMSIG(status) == 0)
#define _STRUCT_TIMESPEC 1
#define CI_ABS(x) (((x) < 0) ? -(x) : (x))
#define CICP_HASH_STATE_FLAGS_IS_IP 0x1
#define __CI_DEBUG_OP_VI_INFO__ (19)
#define CI_EPLOCK_FL_NEED_WAKE 0x40000000ULL
#define IP_MULTICAST_TTL 33
#define IPPROTO_UDP IPPROTO_UDP
#define ci_fifo_get(f,pv) do{ *(pv) = ci_fifo_peek(f); ci_fifo_rd_next(f); }while(0)
#define CI_PTR_OFFSET(p,align) CI_OFFSET(((ci_ptr_arith_t)(p)), ((ci_ptr_arith_t)(align)))
#define __DEC128_MAX_EXP__ 6145
#define SS_ONSTACK SS_ONSTACK
#define __bos0(ptr) __builtin_object_size (ptr, 0)
#define NDTA_MAX (__NDTA_MAX - 1)
#define _IOC_DIRBITS 2
#define STACK_LOG_DUMP(x) 
#define __need___va_list 
#define CI_SOCK_FLAG_DEFERRED_BIND 0x00200000
#define CI_IP_SOCK_STATS_ACTUAL_LEN (sizeof(ci_ip_sock_stats_actual)/sizeof( CI_IP_STATS_TYPE))
#define F_SETLK F_SETLK64
#define CI_TCP_TIME_WAIT (0x9000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SYNCHRONISED | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_NOT_CONNECTED | CI_TCP_STATE_RECVD_FIN | CI_TCP_STATE_NO_TIMERS)
#define _SC_PIPE _SC_PIPE
#define __INT16_MAX__ 0x7fff
#define EKEYREJECTED 129
#define _BSD_SIZE_T_ 
#define __SIZE_TYPE__ long unsigned int
#define OO_SPIN_BLURB "Spinning typically reduces latency and jitter substantially, and can " "also improve throughput.  However, in some applications spinning can " "harm performance; particularly application that have many threads.  " "When spinning is enabled you should normally dedicate a CPU core to " "each thread that spins." "\n" "You can use the EF_*_SPIN options to selectively enable or disable " "spinning for each API and transport.  You can also use the " "onload_thread_set_spin() extension API to control spinning on a " "per-thread and per-API basis."
#define __UINT64_MAX__ 0xffffffffffffffffUL
#define __FLT_IS_IEC_60559__ 1
#define CI_TCP_STATE_PIPE (0xc000)
#define NETLINK_NFLOG 5
#define IN_CLASSA(a) ((((in_addr_t)(a)) & 0x80000000) == 0)
#define IN_CLASSB(a) ((((in_addr_t)(a)) & 0xc0000000) == 0x80000000)
#define IN_CLASSC(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xc0000000)
#define IN_CLASSD(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xe0000000)
#define ETH_P_IFE 0xED3E
#define CI_TCP_EXT_STATS_INC_PAWS_PASSIVE_REJECTED(netif) __CI_TCP_EXT_STATS_INC( (netif), paws_passive_rejected )
#define INADDR_ALLHOSTS_GROUP ((in_addr_t) 0xe0000001)
#define ci_fifo2_dtor(f) do{ ci_assert(ci_fifo2_valid(f)); ci_free((f)->fifo); }while(0)
#define FPE_CONDTRAP FPE_CONDTRAP
#define CI_KERNEL_ARG_LINUX(x) CI_KERNEL_ARG(x)
#define __GNUC_WIDE_EXECUTION_CHARSET_NAME "UTF-32LE"
#define NI_NUMERICSERV 2
#define AF_INET PF_INET
#define __CPU_FREE(cpuset) __sched_cpufree (cpuset)
#define OO_IOC_EVQ_POLL OO_IOC_W(EVQ_POLL, ci_uint32)
#define CI_SET_UDP_SO_ERROR(u,e) CI_SET_SO_ERROR(&(u)->s,(e))
#define _CS_XBS5_LP64_OFF64_LINTFLAGS _CS_XBS5_LP64_OFF64_LINTFLAGS
#define _SC_PRIORITIZED_IO _SC_PRIORITIZED_IO
#define OO_FDFLAG_TYPE_STR(flags) (flags) & OO_FDFLAG_STACK ? "stack" : (flags) & OO_FDFLAG_EP_TCP ? "tcp" : (flags) & OO_FDFLAG_EP_UDP ? "udp" : (flags) & OO_FDFLAG_EP_PASSTHROUGH ? "os_sock" : (flags) & OO_FDFLAG_EP_ALIEN ? "moved" : (flags) & OO_FDFLAG_EP_PIPE_READ ? "piper" : (flags) & OO_FDFLAG_EP_PIPE_WRITE ? "pipew" : "?"
#define SOL_NETBEUI 267
#define CI_CFG_USERSPACE_SYSCALL 1
#define OO_STACK_FOR_EACH_FUTURE_INTF_I(_ni,_mask,_intf_i) ci_assert_lt((_ni)->future_intf_mask, 1u << oo_stack_intf_max(_ni)); { CI_BUILD_ASSERT(sizeof(_mask) >= sizeof((_ni)->future_intf_mask)); } OO_FOR_EACH_BIT((_ni)->future_intf_mask, (_mask), (_intf_i))
#define __HAVE_DISTINCT_FLOAT128 1
#define ETH_P_PPP_SES 0x8864
#define AF_MPLS PF_MPLS
#define CI_SET_ERROR(rc,e) do{ CI_BUILD_ASSERT_CONSTANT_NON_NEGATIVE((int)(e)-1); ci_assert_gt((int)(e), 0); errno = (e); (rc) = CI_SOCKET_ERROR; } while(0)
#define si_addr_lsb _sifields._sigfault.si_addr_lsb
#define CLOCK_THREAD_CPUTIME_ID 3
#define IPV6_PMTUDISC_DO 2
#define CI_SB_AFLAG_AVOID_INTERRUPTS_BIT 3u
#define IPV6_PKTINFO 50
#define OO_IOC_INSTALL_STACK OO_IOC_W(INSTALL_STACK, struct oo_op_install_stack)
#define CI_TCP_EXT_STATS_INC_EMBRIONIC_RSTS(netif) __CI_TCP_EXT_STATS_INC( (netif), embrionic_rsts )
#define CITP_TCP_ISN_2MSL_MAX 480
#define _SC_V6_ILP32_OFFBIG _SC_V6_ILP32_OFFBIG
#define _SC_TRACE_LOG _SC_TRACE_LOG
#define EF_VI_ALIGN(x) __attribute__ ((aligned (x)))
#define __F_GETOWN_EX 16
#define EF_VI_DMA_ALIGN 64
#define CI_TRACE_MAC(mac) 
#define SO_OOEXT_BASE 0x000F5300
#define SIOCGSTAMP_OLD 0x8906
#define CI_UL_LOG_CLUT 0x8000
#define __TIME_T_TYPE __SYSCALL_SLONG_TYPE
#define CI_SOCK_FLAG_TPROXY 0x00040000
#define F_SETLK64 6
#define ci_irqlock_check_locked(l) ci_irqlock_check_locked_dbg((l), __FILE__, __LINE__)
#define sock_rport_be16(s) ipcache_rport_be16(&(s)->pkt)
#define CI_HAVE_INT64 
#define _IOC_NRMASK ((1 << _IOC_NRBITS)-1)
#define TIOCGPTLCK _IOR('T', 0x39, int)
#define TIOCSERGETLSR 0x5459
#define __warnattr(msg) __attribute__((__warning__ (msg)))
#define _SYS_TYPES_H 1
#define CI_CFG_MAX_PIPE_SIZE (1<<20)
#define CI_EPLOCK_NETIF_NEED_POLL 0x2000000000000000ULL
#define AI_V4MAPPED 0x0008
#define CI_TCP_STATE_ACCEPT_DATA 0x010
#define __BFLT16_HAS_QUIET_NAN__ 1
#define CHECK_TIMERS(ni) 
#define PRIdLEAST8 "d"
#define ci_istack_not_empty(s) ((s)->istack_ptr)
#define SOL_IRDA 266
#define __FLT32X_MIN_10_EXP__ (-307)
#define __kernel_old_dev_t __kernel_old_dev_t
#define CI_CPU_ERROR (-2)
#define __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
#define INTPTR_MAX (9223372036854775807L)
#define __UINTMAX_C(c) c ## UL
#define RX_PKT_PAYLOAD_LEN(pkt) ipx_hdr_tot_len(oo_pkt_af(pkt), RX_PKT_IPX_HDR(pkt))
#define SIOCGRARP 0x8961
#define CI_SB_AFLAG_O_APPEND_BIT 7u
#define SO_ERROR 4
#define _POSIX_C_SOURCE 200809L
#define ci_ip_copy_pkt_to_user __ci_ip_copy_pkt_to_user
#define IP_DROP_MEMBERSHIP 36
#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + ((c) > 255 ? 255 : (c)))
#define CI_NETIF_ERRORS_PRI_ARG(errors) ((errors) & CI_NETIF_ERROR_POST_POLL_LIST ? "PPL ":""), ((errors) & CI_NETIF_ERROR_LOOP_PKTS_LIST ? "LOOP ":""), ((errors) & CI_NETIF_ERROR_ASSERT ? "ASS ":""), ((errors) & CI_NETIF_ERROR_SYNRECV_TABLE ? "SYNRECV ":"")
#define CI_PKT_ALLOC_FOR_TCP_TX 1
#define CI_TCP_INVALID (CI_TCP_LISTEN | CI_TCP_STATE_INVALID)
#define PTHREAD_STACK_MIN 16384
#define IN6_IS_ADDR_V4MAPPED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == htonl (0xffff); }))
#define _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS
#define __SSE_MATH__ 1
#define TIOCGETD 0x5424
#define ETH_P_X25 0x0805
#define AF_XDP PF_XDP
#define ETH_P_CANFD 0x000D
#define ENAVAIL 119
#define __k8 1
#define SO_SNDBUFFORCE 32
#define _SC_XOPEN_XPG2 _SC_XOPEN_XPG2
#define _SC_XOPEN_XPG3 _SC_XOPEN_XPG3
#define _SC_XOPEN_XPG4 _SC_XOPEN_XPG4
#define CP_STRING_LEN 256
#define CI_CFG_CONGESTION_WINDOW_VALIDATION_DELACK_SCALING 0
#define EF_EVENT_SW_DATA_MASK 0xffff
#define _SC_PRIORITY_SCHEDULING _SC_PRIORITY_SCHEDULING
#define CI_FIFO_PRI_ARG(f) (unsigned) (f).fifo_rd_i, (unsigned) (f).fifo_wr_i, (int) ci_fifo_num(&(f)), (int) ci_fifo_contig_num(&(f)), (int) ci_fifo_space(&(f)), (int) ci_fifo_contig_space(&(f))
#define ci_netif_get_valid_ep(ni,sockp) ((ni)->ep_tbl[TRUSTED_SOCK_ID_FROM_P((ni), (sockp))])
#define OO_PP_INIT(ni,pp,iid) ((pp) = (ci_int32) (iid))
#define CI_TCPT_FLAG_MEM_DROP 0x2000
#define SIGCONT 18
#define EF_EVENT_TX_WITH_TIMESTAMP_NSEC_FRAC16(e) (((uint16_t) (e).tx_timestamp.ts_nsec_frac) << (16 - EF_VI_TX_TS_FRAC_NS_BITS))
#define MADV_FREE 8
#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
#define SIOCDARP 0x8953
#define FL_NO_LOCK 0x1
#define __blksize_t_defined 
#define POSIX_MADV_SEQUENTIAL 2
#define SIGEV_THREAD_ID SIGEV_THREAD_ID
#define CI_PKT_FLAG_TX_MORE 0x0080
#define _SC_SELECT _SC_SELECT
#define O_SYNC 04010000
#define IOC_OUT (_IOC_READ << _IOC_DIRSHIFT)
#define __CI_INTERNAL_IP_STATS_OPS_H__ 
#define ETH_P_LOCALTALK 0x0009
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define _LFS64_LARGEFILE 1
#define __bswap_constant_16(x) ((__uint16_t) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))
#define NLM_F_BULK 0x200
#define __WCHAR_MAX __WCHAR_MAX__
#define EFAB_NIC_DP_DEFAULT_rx_queues 8
#define CI_FIFO2_DEFINE_GET(name,fifo_t,elem_t) ci_inline elem_t name(fifo_t* f) { elem_t v = ci_fifo2_peek(f); ci_fifo2_rd_next(f); return v; }
#define ETH_P_DDCMP 0x0006
#define _LFS64_ASYNCHRONOUS_IO 1
#define _ANSI_STDDEF_H 
#define PRIu32 "u"
#define __va_arg_pack() __builtin_va_arg_pack ()
#define _BITS_WCHAR_H 1
#define EF_EVENT_RX_DISCARD_BYTES(e) ((e).rx_discard.len)
#define IP_XFRM_POLICY 17
#define __iovec_defined 1
#define CHECK_NI(ni) 
#define __bswap_constant_32(x) ((((x) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) | (((x) & 0x0000ff00u) << 8) | (((x) & 0x000000ffu) << 24))
#define CI_TCPT_FLAG_WSCL 0x02
#define IN_CLASSA_MAX 128
#define CI_ADDR_SH_FROM_IP4(ip) ({ ci_addr_sh_t a = {.u64 = {0, CI_BSWAP_LE64(((ci_uint64)CI_BSWAP_LE32(ip) << 32) | 0xffff0000)}}; a; })
#define ci_bswapc16 __builtin_bswap16
#define CI_SOCK_AFLAG_CORK 0x01
#define CI_CFG_PORT_STRIPING 0
#define SO_DETACH_FILTER 27
#define CI_SOCK_FLAG_LINGER 0x00000010
#define CI_ALIGN_NEEDED(p,align,signed_t) (-(signed_t)(p) & ((align)-1u))
#define TX_PKT_IPX_SPORT(af,pkt) (((ci_uint16*) oo_tx_ipx_data(af, pkt))[0])
#define TIOCSRS485 0x542F
#define SCNoMAX __PRI64_PREFIX "o"
#define INTPTR_MIN (-9223372036854775807L-1)
#define MADV_COLLAPSE 25
#define ETH_P_80221 0x8917
#define __f32(x) x ##f32
#define ENOMEDIUM 123
#define _SC_SIGSTKSZ _SC_SIGSTKSZ
#define _SC_DELAYTIMER_MAX _SC_DELAYTIMER_MAX
#define PRIu64 __PRI64_PREFIX "u"
#define PKT_SET_ID(pkt) PKT_ID2SET(OO_PKT_P(pkt))
#define S_IFDIR __S_IFDIR
#define __attribute_artificial__ __attribute__ ((__artificial__))
#define _SC_THREAD_SAFE_FUNCTIONS _SC_THREAD_SAFE_FUNCTIONS
#define __USE_MISC 1
#define __INT_FAST32_WIDTH__ 64
#define __UWORD_TYPE unsigned long int
#define TIOCSTI 0x5412
#define IN6_IS_ADDR_LOOPBACK(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == htonl (1); }))
#define _POSIX_ASYNCHRONOUS_IO 200809L
#define __FLT64_IS_IEC_60559__ 1
#define OO_IOC_CP_MIB_SIZE OO_IOC_R(CP_MIB_SIZE, ci_uint32)
#define MAP_POPULATE 0x08000
#define __FLT32X_MIN_EXP__ (-1021)
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __glibc_safe_len_cond(__l,__s,__osz) ((__l) <= (__osz) / (__s))
#define FN_PRI_ARGS(n) __FUNCTION__, N_PRI_ARGS(n)
#define _SC_SAVED_IDS _SC_SAVED_IDS
#define OO_PKT_P(pkt) ((pkt)->pp)
#define ETH_P_LOOP 0x0060
#define PRIxLEAST16 "x"
#define SIOCPROTOPRIVATE 0x89E0
#define __INT_FAST16_MAX__ 0x7fffffffffffffffL
#define __timer_t_defined 1
#define CI_SLEEP_SOCK_LOCKED 0x2
#define MSG_OOB MSG_OOB
#define TCP_ACK_FORCED(ts) ((ts)->acks_pending & CI_TCP_ACK_FORCED_FLAG)
#define __WCLONE 0x80000000
#define OO_VI_FLAGS_RX_SHARED 0x80
#define ci_tcp_acceptq_n(tls) ((tls)->acceptq_n_in - (tls)->acceptq_n_out)
#define _CS_XBS5_ILP32_OFF32_LINTFLAGS _CS_XBS5_ILP32_OFF32_LINTFLAGS
#define CI_CFG_CONG_AVOID_SLOW_START_MODE 2
#define SEGV_ADIPERR SEGV_ADIPERR
#define SP_TO_ACTIVE_WILD(ni,sp) SP_TO_foo((ni), (sp), ci_active_wild)
#define ci_ip_csum_copy ci_ip_csum_copy_c
#define CICP_FWD_FLAG_ERROR 0x100
#define CI_IP4_SET_FRAG_DONT(ip) (ip)->ip_frag_off_be16 |= CI_IP4_FRAG_DONT
#define _BITS_SELECT_DECL_H 1
#define PRIxLEAST32 "x"
#define ci_istack_num(s) ((s)->istack_ptr)
#define __WCHAR_MIN __WCHAR_MIN__
#define __FLT64_DIG__ 15
#define EROFS 30
#define CI_IP6_MF 0x0001
#define IN_EXPERIMENTAL(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xe0000000)
#define ETH_ZLEN 60
#define __CPU_ALLOC_SIZE(count) ((((count) + __NCPUBITS - 1) / __NCPUBITS) * sizeof (__cpu_mask))
#define ci_fifo_contig_num(f) (((f)->fifo_wr_i >= (f)->fifo_rd_i) ? (f)->fifo_wr_i - (f)->fifo_rd_i : (f)->fifo_size - (f)->fifo_rd_i)
#define _SC_SEMAPHORES _SC_SEMAPHORES
#define SO_BSDCOMPAT 14
#define __CI_TOOLS_FIFOS_H__ 
#define ETH_P_MPLS_UC 0x8847
#define BUS_MCEERR_AO BUS_MCEERR_AO
#define IPV6_RTHDRDSTOPTS 55
#define BUS_MCEERR_AR BUS_MCEERR_AR
#define UINTMAX_MAX (__UINT64_C(18446744073709551615))
#define INT32_C(c) c
#define POSIX_FADV_NOREUSE __POSIX_FADV_NOREUSE
#define CITP_SCALABLE_FILTERS_ENABLE 1
#define ci_ip_csum_aligned ci_ip_csum_aligned_c
#define CI_NETIF_FLAG_SCALABLE_FILTERS_RSS 0x8
#define NTF_EXT_LEARNED (1 << 4)
#define __glibc_c99_flexarr_available 1
#define __LONG_MAX__ 0x7fffffffffffffffL
#define PROT_GROWSUP 0x02000000
#define CITP_TCP_LOOPBACK_OFF 0
#define __WCHAR_T__ 
#define CI_IP_ADDR_CMP(addr1,addr2) ((addr1) != (addr2))
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define SIOCADDMULTI 0x8931
#define ELIBACC 79
#define __glibc_objsize0(__o) __builtin_dynamic_object_size (__o, 0)
#define SHADOW_STACK_SET_TOKEN 0x1
#define CI_CFG_TCP_DSACK 1
#define PKT_UDP_HDR(pkt) ((ci_udp_hdr*)oo_ip_data(pkt))
#define __GNUC_EXECUTION_CHARSET_NAME "UTF-8"
#define TCSETA 0x5406
#define PRIxLEAST64 __PRI64_PREFIX "x"
#define TCSETS 0x5402
#define NETLINK_SELINUX 7
#define __ONLOAD_SIGNALS_H__ 
#define TCSETX 0x5433
#define NI_DGRAM 16
#define PRIxFAST16 __PRIPTR_PREFIX "x"
#define IPV6_JOIN_ANYCAST 27
#define L_INCR 1
#define MCAST_UNBLOCK_SOURCE 44
#define __S_TYPEISSHM(buf) ((buf)->st_mode - (buf)->st_mode)
#define SC_ID(s) OO_SP_TO_INT(SC_SP(s))
#define CI_PKT_ALLOC_NO_REAP 4
#define NETLINK_LISTEN_ALL_NSID 8
#define OO_SCP_IP4_PMTU_PROBE 0x10
#define _BITS_PTHREADTYPES_COMMON_H 1
#define NETLINK_SMC 22
#define CI_SOCK_FLAG_AUTOFLOWLABEL_OPT 0x08000000
#define NLM_F_REPLACE 0x100
#define NETLINK_FIB_LOOKUP 10
#define __UINT_FAST16_TYPE__ long unsigned int
#define EP_BUF_SIZE CI_CFG_EP_BUF_SIZE
#define __DEC64_MAX__ 9.999999999999999E384DD
#define NTF_ROUTER (1 << 7)
#define WIFSTOPPED(status) __WIFSTOPPED (status)
#define N_AX25 5
#define CI_TCP_LAST_ACK (0x5000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SYNCHRONISED | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_NOT_CONNECTED | CI_TCP_STATE_RECVD_FIN | CI_TCP_STATE_TXQ_ACTIVE | CI_TCP_STATE_TIMEOUT_ORPHAN )
#define __attribute_maybe_unused__ __attribute__ ((__unused__))
#define NETLINK_AUDIT 9
#define _POSIX_RAW_SOCKETS 200809L
#define EP_PRI_ARGS(e) NI_ID(&(e)->thr->netif), (e)->id
#define __CI_PKT_FLAGS_PRI_ARG(flags) ((flags) & CI_PKT_FLAG_TX_PENDING ? "TxPend ":""), ((flags) & CI_PKT_FLAG_INDIRECT ? "Indir ":""), ((flags) & CI_PKT_FLAG_RTQ_RETRANS ? "Retrans ":""), ((flags) & CI_PKT_FLAG_RTQ_SACKED ? "Sacked ":""), ((flags) & CI_PKT_FLAG_UDP ? "Udp ":""), ((flags) & CI_PKT_FLAG_TX_PSH ? "Psh ":""), ((flags) & CI_PKT_FLAG_TX_MORE ? "More ":""), ((flags) & CI_PKT_FLAG_NONB_POOL ? "Nonb ":""), ((flags) & CI_PKT_FLAG_RX ? "Rx ":""), ((flags) & CI_PKT_FLAG_TX_PSH_ON_ACK ? "PshOnAck ":"")
#define _CS_POSIX_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS
#define PRIxFAST32 __PRIPTR_PREFIX "x"
#define __EFAB_EFCT_VI_H__ 
#define __ss_aligntype unsigned long int
#define OO_FDFLAG_EP_PIPE_READ 0x20
#define TS_ARG(ni,ts) (S_SP(ts)), (unsigned) TS_OFF((ni),(ts))
#define ETHERTYPE_NTRAILER 16
#define CI_PAGE_SIZE 4096
#define SIOCSIFMAP 0x8971
#define S_TYPEISMQ(buf) __S_TYPEISMQ(buf)
#define TCSETAW 0x5407
#define SOF_TIMESTAMPING_OOEXT_MASK ((((SOF_TIMESTAMPING_OOEXT_LAST) << 1) - 1) - ((SOF_TIMESTAMPING_OOEXT_FIRST) - 1))
#define MADV_UNMERGEABLE 13
#define __FLT16_DECIMAL_DIG__ 5
#define ef_vi_start_transmit_warm(vi,saved_state,warm_ctpio_mmap_ptr) (vi)->ops.start_transmit_warm((vi), (saved_state), (warm_ctpio_mmap_ptr))
#define _STRINGS_H 1
#define SI_MESGQ SI_MESGQ
#define __F_SETOWN 8
#define _VA_LIST_DEFINED 
#define PRIX32 "X"
#define __DECLARE_FLEX_ARRAY(TYPE,NAME) struct { struct { } __empty_ ## NAME; TYPE NAME[]; }
#define __ATOMIC_CONSUME 1
#define __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
#define EFAB_NIC_DP_DEFAULT(PARAM) EFAB_NIC_DP_DEFAULT_ ## PARAM
#define PF_ECONET 19
#define __SEG_FS 1
#define __INT_LEAST16_MAX__ 0x7fff
#define CI_CABBAGES CI_BSWAPC_BE32(0xCABBA9E5)
#define CKILL CTRL('u')
#define N_TTY 0
#define EXFULL 54
#define _SC_THREAD_DESTRUCTOR_ITERATIONS _SC_THREAD_DESTRUCTOR_ITERATIONS
#define __DEC64_MANT_DIG__ 16
#define __INT64_MAX__ 0x7fffffffffffffffL
#define _BITS_ENDIAN_H 1
#define TX_PKT_IPX_UDP(af,pkt,is_frag) ci_tx_pkt_ipx_udp(af, pkt, is_frag)
#define ETH_P_CANXL 0x000E
#define NUD_NONE 0x00
#define _CI_LIB_STACK_H 
#define __SEG_GS 1
#define _POSIX_SOURCE 1
#define __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
#define ci_fifo2_space(f) (ci_fifo2_capacity(f) - ci_fifo2_num(f))
#define OO_IOC_EPLOCK_WAKE OO_IOC_NONE(EPLOCK_WAKE)
#define TX_PKT_SADDR(af,pkt) ipx_hdr_saddr(af, TX_PKT_IPX_HDR(af, pkt))
#define __SIG_ATOMIC_WIDTH__ 32
#define si_stime _sifields._sigchld.si_stime
#define CITP_EPOLL_UL 1
#define OO_SP_FROM_INT(ni,id) (id)
#define _SC_THREAD_KEYS_MAX _SC_THREAD_KEYS_MAX
#define ci_fifo2_valid(f) ((f)->fifo && CI_IS_POW2((f)->fifo_mask+1u) && (int) ci_fifo2_num(f) >= 0 && (int) ci_fifo2_num(f) <= ci_fifo2_capacity(f))
#define SOCK_NONBLOCK SOCK_NONBLOCK
#define __INT_LEAST64_TYPE__ long int
#define htole16(x) __uint16_identity (x)
#define SIGCHLD 17
#define TCGETS2 _IOR('T', 0x2A, struct termios2)
#define ci_fifo2_poke(f) ((f)->fifo[ci_fifo2_wr_i(f)])
#define ID_TO_WAITABLE_OBJ(ni,id) ID_TO_foo((ni), (id), WAITABLE_OBJ)
#define __INT16_TYPE__ short int
#define CI_IP_SOCK_STATS_MAX_LEN (sizeof(ci_ip_sock_stats_max)/sizeof( CI_IP_STATS_TYPE))
#define EF_EVENT_RX_ISCSI_OKAY(e) ((e).rx.flags & EF_EVENT_FLAG_ISCSI_OK)
#define ONLOAD_MSG_WARM 0x400
#define CI_SOCK_INV(x) ((x) < 0)
#define PRIX64 __PRI64_PREFIX "X"
#define PRIiLEAST16 "i"
#define ci_seqm_ge(a,b,mask) (!ci_seqm_lt((a), (b), (mask)))
#define OO_IOC_CP_XDP_PROG_CHANGE OO_IOC_W(CP_XDP_PROG_CHANGE, struct oo_cp_xdp_change)
#define CI_NETIF_FLAGS_DONT_USE_ANON 0x40
#define ci_seqm_gt(a,b,mask) ci_seqm_lt((b), (a), (mask))
#define __TOOLS_CPLANE_ONLOAD_H__ 
#define SIOCSIFMEM 0x8920
#define SIOCGIFBR 0x8940
#define CI_NETIF_LOCK_PRI_ARG(v) ((v) & CI_EPLOCK_LOCKED ? "LOCKED ":"UNLOCKED"), ((v) & CI_EPLOCK_FL_NEED_WAKE ? "CONTENDED ":""), ((v) & CI_EPLOCK_NETIF_NEED_POLL ? "POLL ":""), ((v) & CI_EPLOCK_NETIF_NEED_PRIME ? "PRIME ":""), ((v) & CI_EPLOCK_NETIF_CLOSE_ENDPOINT ? "CLOSE_EP ":""), ((v) & CI_EPLOCK_NETIF_NEED_WAKE ? "WAKE ":""), ((v) & CI_EPLOCK_NETIF_PKT_WAKE ? "PKT_WAKE ":""), ((v) & CI_EPLOCK_NETIF_SWF_UPDATE ? "SWF_UPDATE ":""), ((v) & CI_EPLOCK_NETIF_IS_PKT_WAITER ? "PKT_WAIT ":""), ((v) & CI_EPLOCK_NETIF_MERGE_ATOMIC_COUNTERS ? "MERGE ":""), ((v) & CI_EPLOCK_NETIF_NEED_PKT_SET ? "PKT_SET ":""), ((v) & CI_EPLOCK_NETIF_NEED_SOCK_BUFS ? "SOCK_BUFS ":""), ((v) & CI_EPLOCK_NETIF_PURGE_TXQS ? "PURGE_TXQ ":""), ((v) & CI_EPLOCK_NETIF_KERNEL_PACKETS ? "KPKTS ":""), ((v) & CI_EPLOCK_NETIF_FREE_READY_LIST ? "FREE_RLIST ":""), ((v) & CI_EPLOCK_NETIF_SOCKET_LIST ? "DEFERRED ":"")
#define PRIoFAST16 __PRIPTR_PREFIX "o"
#define S_IRWXO (S_IRWXG >> 3)
#define NLA_ALIGNTO 4
#define CI_UL_LOG_VVPOLL 0x80
#define htole32(x) __uint32_identity (x)
#define CI_IP4_IHL(ip) (((ip)->ip_ihl_version & 0xf) << 2u)
#define EDQUOT 122
#define CI_TCONST_STATS 0
#define ETHERMTU ETH_DATA_LEN
#define __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define F_WRLCK 1
#define __CI_INTERNAL_IP_H__ 
#define IPPROTO_NONE IPPROTO_NONE
#define SO_TIMESTAMPNS SO_TIMESTAMPNS_OLD
#define ci_fifo2_init(f,cap) do{ ci_assert(CI_IS_POW2((cap))); (f)->fifo_rd_i = (f)->fifo_wr_i = 0u; (f)->fifo_mask = (cap) - 1; }while(0)
#define SIGSYS 31
#define OO_VI_FLAGS_CTPIO_EN 0x10
#define CI_TCP_OPT_END 0x0
#define linux 1
#define SOL_DCCP 269
#define CI_TCP_STATE_NUM(s) (((s) & 0xf000) >> 12u)
#define __SIZEOF_SHORT__ 2
#define EP_BUF_PER_CHUNK 2048
#define ntohl(x) __bswap_32 (x)
#define SA_NOCLDSTOP 1
#define ntohs(x) __bswap_16 (x)
#define PF_NETLINK 16
#define ETH_P_BPQ 0x08FF
#define NETLINK_GENERIC 16
#define SCNdMAX __PRI64_PREFIX "d"
#define OO_DEV_NAME "onload"
#define CITP_RX_TIMESTAMPING_SOURCE_NIC 0
#define CI_IPX_HDR_SIZE(af) sizeof(ci_ip4_hdr)
#define ____FILE_defined 1
#define N_HCI 15
#define ETH_P_TDLS 0x890D
#define SO_BINDTOIFINDEX 62
#define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
#define OO_IOC_EP_FILTER_DUMP OO_IOC_W(EP_FILTER_DUMP, oo_tcp_filter_dump_t)
#define NLM_F_ROOT 0x100
#define ILL_PRVREG ILL_PRVREG
#define __HAVE_FLOAT16 0
#define htole64(x) __uint64_identity (x)
#define RX_PKT_PROTOCOL(pkt) ipx_hdr_protocol(oo_pkt_af(pkt), RX_PKT_IPX_HDR(pkt))
#define _THREAD_SHARED_TYPES_H 1
#define FPE_FLTINV FPE_FLTINV
#define __STDC_IEC_60559_BFP__ 201404L
#define IN_CLASSB_HOST (0xffffffff & ~IN_CLASSB_NET)
#define ci_ss_assert_neq(ni,x,y) ci_ss_assert2((ni), (x)!=(y), x, y)
#define ci_verify(exp) _ci_verify(exp, __FILE__, __LINE__)
#define SC_SP(s) ((s)->b.bufid)
#define TIOCPKT_FLUSHREAD 1
#define CI_PMTU_TCONST_DISCOVER_FAST (2*60*1000)
#define F_SETLKW F_SETLKW64
#define SIOCGIFDSTADDR 0x8917
#define SA_INTERRUPT 0x20000000
#define __bool_true_false_are_defined 1
#define ci_seqm_le(a,b,mask) (!ci_seqm_lt((b), (a), (mask)))
#define CI_ROUND_UP(i,align) (((i)+(align)-1u) & ~((typeof(i))(align)-1u))
#define __CI_DEBUG_OP_NETIF_DUMP__ (8)
#define ci_seqm_lt(a,b,mask) (((a) - (b)) & (((mask) + 1u) >> 1u))
#define ETH_P_IEEEPUPAT 0x0a01
#define int64_t ci_int64
#define ci_tcp_acceptq_not_empty(tls) (((tls)->acceptq_put >= 0) | OO_SP_NOT_NULL((tls)->acceptq_get))
#define __UID_T_TYPE __U32_TYPE
#define TCP_NEED_ACK(ts) (++(ts)->acks_pending)
#define __FLT32_MIN_10_EXP__ (-37)
#define CI_PFD_AFLAG_CLOSED 0x02
#define CI_TCP_EXT_STATS_INC_TCP_RENO_FAILURES(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_reno_failures )
#define MCAST_MSFILTER 48
#define CI_EPLOCK_NETIF_HANDLE_ICMP 0x0001000000000000ULL
#define __GNUC_MINOR__ 3
#define CI_CFG_TCP_SNDBUF_DEFAULT 16384
#define __CI_NETIF_PTR(ni,oop) oo_state_off_to_ptr((ni), OO_P_OFF(oop))
#define EF_VI_MAX_QS 32
#define ci_fifo2_peek(f) ((f)->fifo[ci_fifo2_rd_i(f)])
#define __FLT32X_DIG__ 15
#define _CS_GNU_LIBC_VERSION _CS_GNU_LIBC_VERSION
#define CI_CFG_INJECT_PACKETS 1
#define CI_DEFAULT_NIC 0
#define __UINT16_C(c) c
#define __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 1
#define __WORDSIZE 64
#define S_BLKSIZE 512
#define CI_CFG_OPTGROUP(group,category,expertise) 
#define CI_IP_IS_LOOPBACK(ip_be32) (((ip_be32) & CI_BSWAPC_BE32(0xff000000)) == CI_BSWAPC_BE32(0x7f000000))
#define INT64_MIN (-__INT64_C(9223372036854775807)-1)
#define _SC_PII_XTI _SC_PII_XTI
#define CI_BSWAPC_LE16(v) (v)
#define ef_vi_transmitv(vi,iov,iov_len,dma_id) (vi)->ops.transmitv((vi), (iov), (iov_len), (dma_id))
#define _POSIX_READER_WRITER_LOCKS 200809L
#define _PC_REC_MIN_XFER_SIZE _PC_REC_MIN_XFER_SIZE
#define OO_IOC_STACK_ATTACH OO_IOC_RW(STACK_ATTACH, oo_stack_attach_t)
#define PRIXLEAST8 "X"
#define ifr_metric ifr_ifru.ifru_ivalue
#define ETH_P_PREAUTH 0x88C7
#define _BITS_STDINT_INTN_H 1
#define CLD_STOPPED CLD_STOPPED
#define __UINTMAX_MAX__ 0xffffffffffffffffUL
#define __DBL_HAS_QUIET_NAN__ 1
#define ci_fifo_not_empty(f) ((f)->fifo_rd_i != (f)->fifo_wr_i)
#define __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define __FLT16_HAS_INFINITY__ 1
#define SO_DETACH_BPF SO_DETACH_FILTER
#define oo_p_dllink_for_each(ni,link,list) for( link = oo_p_dllink_statep(ni, list.l->next); link.l != list.l; link = oo_p_dllink_statep(ni, link.l->next) )
#define _SC_FILE_SYSTEM _SC_FILE_SYSTEM
#define __CI_CONTAINER(c_type,mbr_name,p_mbr) ( (c_type*) ((ci_uintptr_t)(p_mbr) - CI_MEMBER_OFFSET(c_type, mbr_name)) )
#define ASSERT_VALID_PKT(ni,pkt) 
#define CI_TCP_TCONST_ZWIN_MAX CI_TCP_TCONST_RTO_MAX
#define EF_MULTIARCH_DATAPATH_FF 0
#define IPPROTO_MPLS IPPROTO_MPLS
#define CI_BSWAPC_LE32 CI_BSWAP_LE32
#define SA_STACK SA_ONSTACK
#define CI_TCP_HDR_SET_LEN(hdr,hlen) ((hdr)->tcp_hdr_len_sl4 = (hlen) << 2u)
#define CHECK_TEP(ep) 
#define BUS_ADRERR BUS_ADRERR
#define CI_SB_AFLAG_O_CLOEXEC 0x1000
#define __code_model_small__ 1
#define EF_XDP_MODE_COMPATIBLE 1
#define _SC_AIO_LISTIO_MAX _SC_AIO_LISTIO_MAX
#define _SYS_IOCTL_H 1
#define CI_CFG_ACCEPT_INHERITS_NONBLOCK 0
#define CI_IP4_OFFSET_MASK CI_BSWAPC_BE16(0x1fff)
#define UDP_GET_FLAG(us,f) ((us)->udpflags&(f))
#define CI_TP_LOG_IP 0x100000
#define __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
#define le64toh(x) __uint64_identity (x)
#define PF_AX25 3
#define __glibc_has_extension(ext) 0
#define CI_TCP_RETRANSMIT_THRESHOLD_SYN 4
#define _SC_NL_TEXTMAX _SC_NL_TEXTMAX
#define ONLOAD_SCM_TIMESTAMPING_STREAM ONLOAD_SOF_TIMESTAMPING_STREAM
#define TIME_GT(x,y) ((ci_int32)((x)-(y)) > 0)
#define __FLT16_MANT_DIG__ 11
#define TIOCSIG _IOW('T', 0x36, int)
#define CI_PKT_FLAG_TX_PSH_ON_ACK 0x2000
#define CI_IP_SOCK_STATS_COUNT_LEN (sizeof(ci_ip_sock_stats_count)/sizeof( CI_IP_STATS_TYPE))
#define ESOCKTNOSUPPORT 94
#define AF_LOCAL PF_LOCAL
#define MAP_DENYWRITE 0x00800
#define __WCHAR_TYPE__ int
#define CITP_VFORK_USE_VFORK 2
#define oo_pktq_num(q) ((q)->num)
#define __SIZEOF_FLOAT__ 4
#define CI_ETHERTYPE_IP6 CI_BSWAPC_BE16(0x86DD)
#define __SLONGWORD_TYPE long int
#define _SC_XOPEN_ENH_I18N _SC_XOPEN_ENH_I18N
#define CI_SOCK_FLAG_SET_IP_TTL 0x00100000
#define _SC_LEVEL1_ICACHE_SIZE _SC_LEVEL1_ICACHE_SIZE
#define _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
#define LITTLE_ENDIAN __LITTLE_ENDIAN
#define CI_BSWAPC_LE64 CI_BSWAP_LE64
#define PTHREAD_RWLOCK_INITIALIZER { { __PTHREAD_RWLOCK_INITIALIZER (PTHREAD_RWLOCK_DEFAULT_NP) } }
#define CP_FWD_MULTIPATH_WEIGHT_FMT "multipath %d/%d%s"
#define ci_irqlock_dtor(l) ci_irqlock_dtor_dbg(l, __FILE__, __LINE__)
#define S_ISBLK(mode) __S_ISTYPE((mode), __S_IFBLK)
#define uint16_t ci_uint16
#define NLM_F_ECHO 0x08
#define oo_p_dllink_for_each_rev(ni,link,list) for( link = oo_p_dllink_statep(ni, list.l->prev); link.l != list.l; link = oo_p_dllink_statep(ni, link.l->prev) )
#define NETLINK_SCSITRANSPORT 18
#define __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
#define ci_lock_lock_dbg(l,fl,ln) ci_lock_lock_i(l)
#define ASSERT_PKT_PAYLOAD_EMPTY(p) 
#define ci_fifo_buf_size(f) ((f)->fifo_size)
#define __ONLOAD_PKT_P_H__ 
#define CI_UDP_STATS_INC_NO_PORTS(netif) __CI_UDP_STATS_INC( (netif), udp_no_ports )
#define __DEC64_MIN_EXP__ (-382)
#define SCNxPTR __PRIPTR_PREFIX "x"
#define FL_ONCE 0x100
#define TCSETS2 _IOW('T', 0x2B, struct termios2)
#define CI_TCP_URG_PTR_VALID 0x0400
#define SIOCGIFINDEX 0x8933
#define EDOTDOT 73
#define CI_IPX_ADDR_SH_PTR(af,addr) ((af) == AF_INET6 ? (void*)(&(addr).ip6) : (void*)(&(addr).ip4))
#define ci_ctimer_frc ci_frc64
#define CI_EPLOCK_LOCKED 0x20000000ULL
#define TCSETSW 0x5403
#define TRUSTED_SOCK_P(ni,sockp) OO_SP_FROM_INT((ni), TRUSTED_SOCK_ID((ni), OO_SP_TO_INT(sockp)))
#define __FLT32_DECIMAL_DIG__ 9
#define SIOCGIFENCAP 0x8925
#define EFRM_LIMITED(x) do { static uint64_t last_jiffy; static int suppressed; if (jiffies - last_jiffy > HZ) { if (suppressed) { EFRM_PRINTK(KERN_WARNING, "Rate limiting suppressed %d msgs", suppressed); } x; suppressed = 0; last_jiffy = jiffies; } else { ++suppressed; } } while(0)
#define CI_DLLIST_FOR_EACH_REV2(c_type,p_c,lnk_mbr,list) for( (p_c) = CI_CONTAINER(c_type, lnk_mbr, ci_dllist_last(list)); (&((p_c)->lnk_mbr) != ci_dllist_end(list)) || ((p_c) = 0,0); (p_c) = CI_CONTAINER(c_type, lnk_mbr, ((p_c)->lnk_mbr).prev) )
#define CI_DLLIST_FOR_EACH_REV3(c_type,p_c,lnk_mbr,list,temp_prev) for( (p_c) = CI_CONTAINER(c_type, lnk_mbr, ci_dllist_last(list)); ( temp_prev=CI_CONTAINER(c_type, lnk_mbr, ((p_c)->lnk_mbr).prev) ) && ((&((p_c)->lnk_mbr) != ci_dllist_end(list)) || ((p_c) = 0,0)); (p_c) = temp_prev )
#define __USE_POSIX 1
#define PF_NFC 39
#define __O_TMPFILE (020000000 | __O_DIRECTORY)
#define ci_tcp_state_verify_no_timers(ni,ts) 
#define CI_UNIX_FORK_NETIF_PARENT 2
#define ci_fifo2_wr_i(f) CI_FIFO2_M((f), (f)->fifo_wr_i)
#define CI_TCP_EXT_STATS_INC_TCP_DSACK_OFO_RECV(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_dsack_ofo_recv )
#define BUFSIZ 8192
#define EF_RIOV_FLAG_TRANSLATE_ADDR 0x1
#define TIME_LE(x,y) ((ci_int32)((x)-(y)) <= 0)
#define __LINUX_NETLINK_H 
#define CI_SOCK_ERR_ORIGIN_ICMP6 3
#define SO_PEEK_OFF 42
#define TIME_LT(x,y) ((ci_int32)((x)-(y)) < 0)
#define __LDBL_REDIR2_DECL(name) 
#define __FLT_MAX_10_EXP__ 38
#define CI_IP_SOCK_STATS_VAL_RXSLEEPTIME(ts,v) do { __CI_SOCK_STATS_VAL((ts), rx_sleep_time, (v)); } while(0)
#define OO_IOC_EP_FILTER_SET OO_IOC_W(EP_FILTER_SET, oo_tcp_filter_set_t)
#define _WCHAR_T_DECLARED 
#define CI_SOCK_AFLAG_NEED_SHUT_RD 0x2
#define MAP_SYNC 0x80000
#define MAP_SHARED 0x01
#define ETH_VLAN_HLEN 4
#define __feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)
#define CI_NETIF_ERROR_ASSERT 0x08
#define WNOWAIT 0x01000000
#define PRIXFAST8 "X"
#define CI_SOCK_FLAG_DONTROUTE 0x00000020
#define OO_MUST_CHECK_RET_IN_KERNEL 
#define _BITS_UNISTD_DECL_H 1
#define NLA_F_NET_BYTEORDER (1 << 14)
#define ELIBBAD 80
#define NETLINK_NETFILTER 12
#define AF_ALG PF_ALG
#define TTYDEF_OFLAG (OPOST | ONLCR | XTABS)
#define _SC_2_PBS _SC_2_PBS
#define AF_QIPCRTR PF_QIPCRTR
#define ONLOAD_DONT_ACCELERATE NULL
#define CI_EF_UDP_UL_POLL_M 0x00000070
#define __amd64__ 1
#define _FCNTL_H 1
#define IPV6_ADDR_PREFERENCES 72
#define __DBL_MAX_10_EXP__ 308
#define SCNoFAST16 __PRIPTR_PREFIX "o"
#define CI_IP_STATS_INC_IN6_DISCARDS(netif) __CI_IP_STATS_INC( (netif), in6_discards)
#define OO_SIGHANGLER_SEQ_SHIFT 4
#define AI_PASSIVE 0x0001
#define SO_ZEROCOPY 60
#define CI_UDPF_NO_UCAST_FILTER 0x00020000
#define S_IREAD S_IRUSR
#define CI_IP_TIMER_TCP_RTO 0x1
#define CI_CFG_BURST_CONTROL 1
#define __S16_TYPE short int
#define CI_PKT_FLAG_INDIRECT 0x0002
#define CI_CFG_OPTFILE_VERSION(version) 
#define __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
#define PRIXMAX __PRI64_PREFIX "X"
#define TCSETXF 0x5434
#define S_ISSOCK(mode) __S_ISTYPE((mode), __S_IFSOCK)
#define TCSETXW 0x5435
#define IFF_MASTER IFF_MASTER
#define IN6_IS_ADDR_MC_LINKLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x2))
#define CI_SOCK_FLAG_SW_FILTER_FULL 0x00001000
#define __FLT16_MAX__ 6.55040000000000000000000000000000000e+4F16
#define IN_CLASSC_NET 0xffffff00
#define SCNoFAST32 __PRIPTR_PREFIX "o"
#define __SIGRTMAX 64
#define ETH_FRAME_LEN 1514
#define ci_spinloop_pause() __asm__("pause")
#define SIGCLD SIGCHLD
#define TX_PKT_TTL(af,pkt) ipx_hdr_ttl(af, TX_PKT_IPX_HDR(af, pkt))
#define __FLT16_HAS_QUIET_NAN__ 1
#define IP_PMTUDISC_OMIT 5
#define IP_RECVORIGDSTADDR IP_ORIGDSTADDR
#define SCNuMAX __PRI64_PREFIX "u"
#define CI_HWPORT_ID_BAD_LICENSED ((ci_hwport_id_t) -2)
#define CI_TCP_EXT_STATS_INC_TCP_PURE_ACKS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_pure_acks )
#define _SC_NL_ARGMAX _SC_NL_ARGMAX
#define TIOCPKT_FLUSHWRITE 2
#define CI_TCP_EXT_STATS_INC_DELAYED_ACK(netif) __CI_TCP_EXT_STATS_INC( (netif), delayed_ack )
#define __gid_t_defined 
#define ifr_broadaddr ifr_ifru.ifru_broadaddr
#define ci_netif_pkt_rx_to_tx(ni,pkt) __ci_netif_pkt_rx_to_tx((ni), (pkt), __FUNCTION__)
#define IN_LOOPBACKNET 127
#define __aligned_le64 __le64 __attribute__((aligned(8)))
#define TIOCPKT_DATA 0
#define _SC_THREAD_PRIORITY_SCHEDULING _SC_THREAD_PRIORITY_SCHEDULING
#define _SC_REGEX_VERSION _SC_REGEX_VERSION
#define SO_DONTROUTE 5
#define __ptr_t void *
#define __DBL_MANT_DIG__ 53
#define ___int_size_t_h 
#define tcp_rttvar(ts) ((ts)->sv >> 2u)
#define __TIMER_T_TYPE void *
#define IPV6_DONTFRAG 62
#define NETIF_MAGIC 0xd
#define _POSIX_REALTIME_SIGNALS 200809L
#define _POSIX_V6_LP64_OFF64 1
#define TRY_AGAIN 2
#define __WIFCONTINUED(status) ((status) == __W_CONTINUED)
#define EF_EVENT_RX_DISCARD_Q_ID(e) ((e).rx_discard.q_id)
#define NLMSG_ALIGNTO 4U
#define SCNoFAST64 __PRI64_PREFIX "o"
#define __SIZEOF_FLOAT128__ 16
#define __BFLT16_MANT_DIG__ 8
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffL
#define CI_TRACE(exp,fmt) 
#define TCSETAF 0x5408
#define UINT_FAST64_MAX (__UINT64_C(18446744073709551615))
#define AF_ATMPVC PF_ATMPVC
#define ef_vi_transmitv_ctpio_fallback(vi,dma_iov,dma_iov_len,dma_id) (vi)->ops.transmitv_ctpio_fallback((vi), (dma_iov), (dma_iov_len), (dma_id))
#define __GLIBC_MINOR__ 39
#define __S_IFSOCK 0140000
#define IFF_AUTOMEDIA IFF_AUTOMEDIA
#define __UINT_LEAST32_TYPE__ unsigned int
#define ETH_DATA_LEN 1500
#define CI_CFG_TCP_MAX_WINDOW 0xffff
#define CI_TCP_FLAG_FIN 0x01
#define __SSE__ 1
#define _IOC_DIRMASK ((1 << _IOC_DIRBITS)-1)
#define TS_TCP(ts) S_TCP_HDR(&(ts)->s)
#define CLOCK_BOOTTIME 7
#define AF_ASH PF_ASH
#define FNDELAY O_NDELAY
#define IPPROTO_GRE IPPROTO_GRE
#define KERN_NOTICE "NOTICE>"
#define N_MASC 8
#define CI_UDP_PAYLEN(hdr) (CI_BSWAP_BE16((hdr)->udp_len_be16) - sizeof(ci_udp_hdr))
#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
#define sock_protocol(s) ipcache_protocol(&(s)->pkt)
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_ON_LINGER(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_on_linger )
#define TCP_RX_ERRNO(ts) (SOCK_RX_ERRNO(&(ts)->s))
#define _POSIX_VDISABLE '\0'
#define CITP_TCP_LOOPBACK_ALLOW_ALIEN_IN_ACCEPTQ 2
#define CI_EPLOCK_NETIF_MERGE_ATOMIC_COUNTERS 0x0400000000000000ULL
#define CP_ADDR_PREFIX_ARG(addr,prefix) CI_IP_PRINTF_ARGS(&addr), prefix - 96
#define EF_VI_CTPIO_CT_THRESHOLD_SNF 0xffff
#define CI_PKT_FLAG_IS_IP6 0x4000
#define FD_SETSIZE __FD_SETSIZE
#define IPV6_RECVPKTINFO 49
#define _SC_XBS5_ILP32_OFF32 _SC_XBS5_ILP32_OFF32
#define ETH_P_DSA 0x001B
#define SCNu32 "u"
#define stdout stdout
#define N_PRI_ARGS(n) NI_ID(n)
#define OO_SP_NULL -1
#define CI_ALLOC_OBJ(type) ((type*) ci_alloc(sizeof(type)))
#define CI_PKT_FLAG_UDP 0x0010
#define __struct_FILE_defined 1
#define CI_SOCK_FLAG_IP6_PMTU_DO 0x40000000
#define MADV_DONTNEED_LOCKED 24
#define IN6_IS_ADDR_MC_GLOBAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0xe))
#define oo_pkt_af_set(pkt,af) 
#define CI_CFG_STATS_NETIF 1
#define ci_assert_nflags(val,flags) _ci_assert_nflags(val, flags, __FILE__, __LINE__)
#define SOCK_RX_ERRNO(s) ((s)->rx_errno & 0x3fff)
#define __INT_LEAST8_MAX__ 0x7f
#define SIGUSR1 10
#define CI_TRACE_UINT32(integer) 
#define __CI_INTERNAL_IPID_H__ 
#define ci_icmp_send_error(ni,rx_pkt,type,code) __ci_icmp_send_error((ni), oo_pkt_af(rx_pkt), oo_ipx_hdr(rx_pkt), oo_ether_hdr(rx_pkt), (type), (code))
#define SIGUSR2 12
#define _IOC_READ 2U
#define __FLT32X_MAX_10_EXP__ 308
#define _IOW_BAD(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),sizeof(size))
#define ____mbstate_t_defined 1
#define TCP_CONG_PRI_ARG(ts) congstate_str(ts), (ts)->ssthresh, (ts)->cwnd, (ts)->cwnd_extra, (ts)->congrecover, (ts)->retrans_seq, (ts)->dup_acks
#define NDTPA_MAX (__NDTPA_MAX - 1)
#define SO_ATTACH_REUSEPORT_EBPF 52
#define CITP_SCALABLE_FILTERS_ENABLE_WORKER 2
#define MAP_GROWSDOWN 0x00100
#define tcp_snd_urg_off(ts,tcp) ( (ci_uint16) (tcp_snd_up(ts) - CI_BSWAP_BE32((tcp)->tcp_seq_be32)) )
#define CI_ETHERTYPE_JUMBO CI_BSWAPC_BE16(0x8870)
#define OO_VI_FLAGS_PIO_EN 0x1
#define __ONLOAD_PRIMITIVE_TYPES_H__ 
#define N_MOUSE 2
#define CI_UL_LOG_POLL 0x20
#define CI_CFG_POISON_BUFS 0
#define O_RDONLY 00
#define _SC_2_FORT_RUN _SC_2_FORT_RUN
#define OO_VI_FLAGS_TX_HW_TS_EN 0x8
#define SO_RCVBUFFORCE 33
#define SO_PEERPIDFD 77
#define SCNu64 __PRI64_PREFIX "u"
#define _BITS_SIGNUM_GENERIC_H 1
#define __CI_TOOLS_CPU_FEATURES_H__ 
#define IP_PMTUDISC 10
#define _ci_assert_flags(exp1,exp2,file,line) do{}while(0)
#define EMSGSIZE 90
#define CI_IP_TIMER_TCP_CORK 0xb
#define _SC_ATEXIT_MAX _SC_ATEXIT_MAX
#define ETH_P_SNAP 0x0005
#define __stub_stty 
#define __HAVE_FLOAT128_UNLIKE_LDBL (__HAVE_DISTINCT_FLOAT128 && __LDBL_MANT_DIG__ != 113)
#define OO_IOC_TCP_ENDPOINT_SHUTDOWN OO_IOC_W(TCP_ENDPOINT_SHUTDOWN, oo_tcp_endpoint_shutdown_t)
#define CI_TRACE_UINT64(integer) 
#define __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
#define _SIZET_ 
#define _SC_USER_GROUPS _SC_USER_GROUPS
#define _PC_ALLOC_SIZE_MIN _PC_ALLOC_SIZE_MIN
#define IPV6_DROP_MEMBERSHIP IPV6_LEAVE_GROUP
#define SIGPIPE 13
#define _LP64 1
#define CI_TCP_EXT_STATS_INC_LISTEN_DROPS(netif) __CI_TCP_EXT_STATS_INC( (netif), listen_drops )
#define __oo_pktq_put(ni,q,pkt,next) do { (pkt)->next = OO_PP_NULL; if( (q)->num != 0 ) PKT_CHK((ni), (q)->tail)->next = OO_PKT_P(pkt); else (q)->head = OO_PKT_P(pkt); (q)->tail = OO_PKT_P(pkt); ++(q)->num; } while(0)
#define POSIX_FADV_RANDOM 1
#define CI_MAGIC_CHECK(p,type) do { if (!CI_MAGIC_OKAY((p), (type))) ci_fail(("MAGIC CHECK FAIL: %p, %x, %x", (p), (p)->magic, CI_MAGIC((p),(type)))); } while(0)
#define ci_fifo2_contig_num(f) ci_fifo_min(ci_fifo2_num(f), (f)->fifo_mask + 1u - ci_fifo2_rd_i(f))
#define __UINT8_C(c) c
#define __CI_TOOLS_IPCSUM_H__ 
#define EFBIG 27
#define __FLT64_MAX_EXP__ 1024
#define __cookie_io_functions_t_defined 1
#define _NET_IF_H 1
#define CI_EPLOCK_NETIF_DL_CONTEXT_DEFER_MASK (CI_EPLOCK_NETIF_NEED_WAKE | CI_EPLOCK_NETIF_NEED_PKT_SET | CI_EPLOCK_NETIF_NEED_SOCK_BUFS | CI_EPLOCK_NETIF_CLOSE_ENDPOINT | CI_EPLOCK_NETIF_NEED_POLL)
#define CI_TCPT_FLAG_NO_ARP 0x200
#define PKT_IPX_RX_BUF_OFF(af,pkt) ((ci_uint32)(oo_offbuf_ptr(&(pkt)->buf) - CI_TCP_PAYLOAD(PKT_IPX_TCP_HDR(af, pkt))))
#define CI_MAGIC_SET(p,type) do { (p)->magic = CI_MAGIC((p), (type)); } while (0)
#define SCNdLEAST16 "hd"
#define __ASM_GENERIC_SOCKIOS_H 
#define SIOCDRARP 0x8960
#define MAP_HUGE_MASK 0x3f
#define ci_dllist_try_get ci_dllist_try_pop
#define int8_t ci_int8
#define ef_vi_receive_push(vi) (vi)->ops.receive_push((vi))
#define NTF_EXT_MANAGED (1 << 0)
#define __USE_POSIX_IMPLICITLY 1
#define EFRM_DO_DEBUG(expr) do {} while(0)
#define __UINT64_TYPE__ long unsigned int
#define LN_PRI_ARGS N_PRI_ARGS
#define CI_TRACE_HEX32(integer) 
#define _PTHREAD_H 1
#define SO_RCVTIMEO_NEW 66
#define CI_EPLOCK_NETIF_NEED_PKT_SET 0x0800000000000000ULL
#define PKT_RX_BUF_OFF(pkt) ((ci_uint32)(oo_offbuf_ptr(&(pkt)->buf) - CI_TCP_PAYLOAD(PKT_TCP_HDR(pkt))))
#define ci_netif_lock_fdi(epi) ci_netif_lock_id((epi)->sock.netif, SC_SP((epi)->sock.s))
#define __OO_DSHM_H__ 
#define CP_MIB_OFF_T ci_int32
#define NO_DATA 4
#define ci_vfree free
#define OO_PIPE_DEFAULT_SIZE (128 * OO_PIPE_BUF_MAX_SIZE)
#define RSS_HASH_MASK (RSS_HASH_SIZE - 1)
#define CI_IP_ALL_HOSTS 0x10000e0
#define __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW
#define __ILP32_OFF32_CFLAGS "-m32"
#define __attribute_alloc_align__(param) __attribute__ ((__alloc_align__ param))
#define CI_LIKELY(t) __builtin_expect(!!(t), 1)
#define SO_MEMINFO 55
#define CICP_FWD_FLAG_CHANGES_STARTED 0x2
#define _SC_IOV_MAX _SC_IOV_MAX
#define EF_EVENT_RX_PS_NEXT_BUFFER(e) ((e).rx_packed_stream.flags & EF_EVENT_FLAG_PS_NEXT_BUFFER)
#define _SC_PASS_MAX _SC_PASS_MAX
#define OO_SIGHANGLER_BUSY 3
#define __CI_TOOLS_IOVEC_H__ 
#define EF_VI_RECEIVE_BATCH 15
#define CI_TCP_FAST_PATH_WORD(hdr) (((ci_uint32*)(hdr))[3])
#define SCNiFAST8 "hhi"
#define __PRI64_PREFIX "l"
#define ci_cas_uintptr_succeed(p,o,n) ci_cas64u_succeed((volatile ci_uint64*) (p), (o), (n))
#define _SC_LONG_BIT _SC_LONG_BIT
#define SOCK_PACKET SOCK_PACKET
#define NTFS_FMT "%d:%d/"FD_FMT" %s "
#define FL_ID 0x400
#define __stack_t_defined 1
#define NTF_FMT "%d:%d/"FD_FMT" "
#define CI_SO_L5_DUMP_SOCK_STATS (__SO_L5_BASE+0x03)
#define _POSIX_MAPPED_FILES 200809L
#define MB_CUR_MAX (__ctype_get_mb_cur_max ())
#define SIGXCPU 24
#define __FLT128_HAS_QUIET_NAN__ 1
#define O_TRUNC 01000
#define CI_TCP_HDR_OPT_LEN(hdr) (CI_TCP_HDR_LEN(hdr)-sizeof(ci_tcp_hdr))
#define _SC_LEVEL1_DCACHE_LINESIZE _SC_LEVEL1_DCACHE_LINESIZE
#define ifc_req ifc_ifcu.ifcu_req
#define MSG_MORE MSG_MORE
#define CI_TRACE_HEX64(integer) 
#define ci_fifo2_not_full(f) (ci_fifo2_num(f) != ci_fifo2_capacity(f))
#define IPPROTO_IGMP IPPROTO_IGMP
#define __CI_SOCK_STATS_VAL(ts,Fld,v) 
#define _CI_CFG_BITFIELD12 :12
#define _CI_CFG_BITFIELD16 :16
#define _SC_MAPPED_FILES _SC_MAPPED_FILES
#define CICP_MAC_ROWID_ERROR ((cicp_mac_rowid_t)(-8))
#define _IOLBF 1
#define __struct_group_tag(TAG) TAG
#define PRIiMAX __PRI64_PREFIX "i"
#define OO_IOC_TCP_HANDOVER OO_IOC_RW(TCP_HANDOVER, ci_int32)
#define CI_IPX_ADDR_IS_ANY(a) (!CI_IP_ADDR_CMP((a).ip4, addr_any.ip4))
#define _STATBUF_ST_NSEC 
#define __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
#define _SC_AIO_MAX _SC_AIO_MAX
#define NETLINK_GET_STRICT_CHK 12
#define IP_ADD_SOURCE_MEMBERSHIP 39
#define WIFSIGNALED(status) __WIFSIGNALED (status)
#define CI_IPTIME_BUCKETS 256
#define ENOTCONN 107
#define CI_TCP_EXT_STATS_INC_TSO_MISSING(netif) __CI_TCP_EXT_STATS_INC( (netif), tso_missing )
#define CI_TP_LOG_URG 0x80000000
#define _POSIX_THREAD_ROBUST_PRIO_PROTECT -1
#define ETH_P_LINK_CTL 0x886c
#define ci_istack_peek_i(s,i) ((s)->istack_base[(s)->istack_ptr - 1 - (i)])
#define PRIi32 "i"
#define PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_JOINABLE
#define _IOC_DIR(nr) (((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)
#define S_IFLNK __S_IFLNK
#define ef_vi_stop_transmit_warm(vi,saved_state) (vi)->ops.stop_transmit_warm((vi), (saved_state))
#define P_tmpdir "/tmp"
#define __CI_TCP_EXT_STATS_INC(netif,Fld) __CI_NETIF_STATS_INC((netif), tcp_ext, Fld)
#define _PATH_NETWORKS "/etc/networks"
#define _SC_CHILD_MAX _SC_CHILD_MAX
#define _POSIX_MESSAGE_PASSING 200809L
#define __FILE_defined 1
#define __INT_LEAST16_TYPE__ short int
#define CI_CFG_STRIPE_DEFAULT_DUPACK_THRESHOLD 3
#define __WORDSIZE_TIME64_COMPAT32 1
#define CI_IPV6_DFLT_TCLASS 0
#define EPFNOSUPPORT 96
#define CI_CFG_STRIPE_DEFAULT_NETMASK 0xffffffff
#define ESRMNT 69
#define __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
#define IPV6_ROUTER_ALERT 22
#define INADDR_LOOPBACK ((in_addr_t) 0x7f000001)
#define MADV_RANDOM 1
#define CSUSP CTRL('z')
#define _CS_LFS64_LDFLAGS _CS_LFS64_LDFLAGS
#define PTHREAD_ONCE_INIT 0
#define __DBL_DECIMAL_DIG__ 17
#define CITP_MCAST_SEND_FLAG_EXT 2
#define CI_ZC_HANDLE_MAGIC 0xab00000000000000ull
#define ETH_P_IEEEPUP 0x0a00
#define __DEC_EVAL_METHOD__ 2
#define ECONNABORTED 103
#define ETH_P_AF_IUCV 0xFBFB
#define timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)
#define EFRM_NOTICE(fmt,...) EFRM_PRINTK(KERN_NOTICE, fmt, __VA_ARGS__)
#define ENOANO 55
#define _IO_ERR_SEEN 0x0020
#define E_FMT NSS_FMT
#define CI_DEBUG_SPINLOCK 0
#define CI_DLLINK_INITIALISER(prev,next) { (prev), (next) }
#define _SC_2_PBS_TRACK _SC_2_PBS_TRACK
#define _SC_NETWORKING _SC_NETWORKING
#define __DBL_NORM_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
#define alloca(size) __builtin_alloca (size)
#define LNTS_FMT LPF "%d:%d %s "
#define CI_SOCK_AFLAG_NEED_ACK_BIT 10u
#define CI_ACCESSED CI_BSWAPC_BE32(0xACCE55ED)
#define SOCK_STREAM SOCK_STREAM
#define CI_LOG_TIME 0x04
#define __CPLANE_IOCTL_H__ 
#define OO_IOC_WAITABLE_WAKE OO_IOC_W(WAITABLE_WAKE, oo_waitable_wake_t)
#define SIOCADDRT 0x890B
#define _SC_T_IOV_MAX _SC_T_IOV_MAX
#define CI_DECEASED CI_BSWAPC_BE32(0xDECEA5ED)
#define F_EXLCK 4
#define _SC_LEVEL2_CACHE_SIZE _SC_LEVEL2_CACHE_SIZE
#define __W_STOPCODE(sig) ((sig) << 8 | 0x7f)
#define IPPROTO_ICMPV6 IPPROTO_ICMPV6
#define IFF_UP IFF_UP
#define EF_MULTIARCH_DATAPATH_BOTH 2
#define _AC(X,Y) __AC(X,Y)
#define _AT(T,X) ((T)(X))
#define TX_PKT_IPX_TCP(af,pkt) ci_tx_pkt_ipx_tcp(af, pkt)
#define __ONLOAD_MMAP_BASE_H__ 
#define _SC_REALTIME_SIGNALS _SC_REALTIME_SIGNALS
#define SI_KERNEL SI_KERNEL
#define _BITS_TYPES_STRUCT_SCHED_PARAM 1
#define CI_TRACE_INT32(integer) 
#define CITP_TCP_LOOPBACK_SAMESTACK 1
#define PRIdFAST16 __PRIPTR_PREFIX "d"
#define CI_TCP_FLAG_SYN_BIT 1
#define __INTMAX_WIDTH__ 64
#define CI_EVMASK_PRI_ARG(m) (m & CI_EV_READ ? "RD ":""), (m & CI_EV_WRITE ? "WR ":""), (m & CI_EV_OOB ? "OB ":""), (m & CI_EV_ACCEPT ? "AC ":""), (m & CI_EV_CONNECT ? "CO ":""), (m & CI_EV_CLOSE ? "CL ":""), (m & CI_EV_CLOSED ? "CD ":"")
#define _CS_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS
#define TCP_STATE_FROM_LINK(lnk) CI_CONTAINER(ci_tcp_state, timeout_q_link, (lnk))
#define ci_fifo2_poke_i(f,i) ((f)->fifo[CI_FIFO2_M((f), (f)->fifo_wr_i+(i))])
#define __CI_DEBUG_OP_DUMP_SOCKETS__ (10)
#define OOF_IPCACHE_VALID "%s"
#define _POSIX_REENTRANT_FUNCTIONS 1
#define _SC_DEVICE_SPECIFIC _SC_DEVICE_SPECIFIC
#define __mode_t_defined 
#define ID_TO_foo(ni,id,foo) SP_TO_ ##foo((ni), OO_SP_FROM_INT((ni),(id)))
#define SIN6_LEN_RFC2133 24
#define __ORDER_BIG_ENDIAN__ 4321
#define _SC_AVPHYS_PAGES _SC_AVPHYS_PAGES
#define __ONLOAD_IOCTL_H__ 
#define PF_WANPIPE 25
#define IFF_DEBUG IFF_DEBUG
#define _IOT_ifreq _IOT(_IOTS(char),IFNAMSIZ,_IOTS(char),16,0,0)
#define OO_IOC_OOF_CP_LLAP_MOD OO_IOC_W(OOF_CP_LLAP_MOD, struct oo_op_cplane_llapmod)
#define ci_sscanf sscanf
#define IP_RECVFRAGSIZE 25
#define _IOC_SIZEBITS 14
#define PTHREAD_SCOPE_SYSTEM PTHREAD_SCOPE_SYSTEM
#define PRIdFAST32 __PRIPTR_PREFIX "d"
#define _POSIX2_VERSION __POSIX2_THIS_VERSION
#define ci_ctimer_frc32 ci_frc32
#define EISCONN 106
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define EAI_SYSTEM -11
#define CI_IP6_ADDR_CMP(addr1,addr2) memcmp((addr1), (addr2), sizeof(ci_ip6_addr_t))
#define _SC_LEVEL1_DCACHE_SIZE _SC_LEVEL1_DCACHE_SIZE
#define CI_SHUT_WR 0x4000
#define EAI_AGAIN -3
#define __CI_TOOLS_BYTEORDER_H__ 
#define _SC_C_LANG_SUPPORT _SC_C_LANG_SUPPORT
#define CI_TRACE_INT64(integer) 
#define SIGEV_THREAD SIGEV_THREAD
#define _ENDIAN_H 1
#define ef_vi_receive_init(vi,addr,dma_id) (vi)->ops.receive_init((vi), (addr), (dma_id))
#define CI_IP_QUEUE_UNLIMITED INT_MAX
#define CI_IPID_BLOCK_SHIFT 10
#define CI_TCP_DELACK_SOON_FLAG 0x8000
#define IP_NODEFRAG 22
#define NGREG __NGREG
#define ONLOAD_DELEGATED_SEND_FLAG_IGNORE_ARP 0x1
#define __ATOMIC_RELEASE 3
#define ef_timespec struct timespec
#define INTMAX_MIN (-__INT64_C(9223372036854775807)-1)
#define INADDR_BROADCAST ((in_addr_t) 0xffffffff)
#define AF_UNIX PF_UNIX
#define _SC_TRACE_INHERIT _SC_TRACE_INHERIT
#define IP_RECVRETOPTS IP_RETOPTS
#define _CS_LFS64_LIBS _CS_LFS64_LIBS
#define _BITS_SIGCONTEXT_H 1
#define CI_TCPT_FLAG_OPT_MASK 0x3f
#define IPPROTO_COMP IPPROTO_COMP
#define CI_BSWAP_32(v) ci_bswap32((ci_uint32) (v))
#define CI_EPLOCK_NETIF_UL_MASK CI_EPLOCK_NETIF_UL_COMMON_MASK
#define NUD_INCOMPLETE 0x01
#define _VA_LIST_T_H 
#define INT_FAST16_MAX (9223372036854775807L)
#define state_str(ts) ci_tcp_state_str((ts)->s.b.state)
#define __GLIBC_USE_C2X_STRTOL 0
#define __PIC__ 2
#define ci_netif_is_locked(ni) ef_eplock_is_locked(&(ni)->state->lock)
#define _CS_POSIX_V6_LP64_OFF64_LIBS _CS_POSIX_V6_LP64_OFF64_LIBS
#define CI_PRIu32 PRIu32
#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)
#define O_NOFOLLOW __O_NOFOLLOW
#define _SC_PAGE_SIZE _SC_PAGESIZE
#define ETH_P_AARP 0x80F3
#define POLL_ERR POLL_ERR
#define OO_MMAP_TYPE_WIDTH 2
#define PTHREAD_EXPLICIT_SCHED PTHREAD_EXPLICIT_SCHED
#define TIOCSETD 0x5423
#define SK_PRI_ARGS(sk) NI_ID((sk)->netif),SC_FMT((sk)->s)
#define __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define OO_IOC_FILE_MOVED OO_IOC_RW(FILE_MOVED, ci_int32)
#define SEQ_MAX(x,y) (SEQ_LE(x, y) ? (y) : (x))
#define AF_CAIF PF_CAIF
#define OO_P_NULL -1
#define CI_TCP_PREV_SEQ_IS_FREE(prev_seq) (CI_IPX_ADDR_IS_ANY((prev_seq).laddr))
#define _CS_POSIX_V7_LP64_OFF64_CFLAGS _CS_POSIX_V7_LP64_OFF64_CFLAGS
#define CI_MAGIC(p,type) (((unsigned int)(type) << 28) | (((unsigned int)(ci_ptr_arith_t)(p)) & 0x0fffffffu))
#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
#define EF_TCP_URG_MODE_IGNORE 1
#define PKTS_PER_SET (1u << CI_CFG_PKTS_PER_SET_S)
#define ci_fifo_is_full(f) (CI_FIFO_M((f),(f)->fifo_wr_i+1u)==(f)->fifo_rd_i)
#define __attr_dealloc_fclose __attr_dealloc (fclose, 1)
#define CI_SOCK_FLAG_FILTER 0x00000040
#define INT_FAST64_MAX (__INT64_C(9223372036854775807))
#define CI_BSWAP_64(v) ci_bswap64(v)
#define __ALIGN_KERNEL(x,a) __ALIGN_KERNEL_MASK(x, (__typeof__(x))(a) - 1)
#define CI_IS_ADDR_IP6(addr) 0
#define CI_ETHERTYPE_8021Q CI_BSWAPC_BE16(0x8100)
#define NTF_EXT_LOCKED (1 << 1)
#define SA_NOCLDWAIT 2
#define __va_list__ 
#define _SC_2_PBS_LOCATE _SC_2_PBS_LOCATE
#define SCM_TIMESTAMPNS SO_TIMESTAMPNS
#define OO_IOC_DEBUG_OP OO_IOC_RW(DEBUG_OP, ci_debug_onload_op_t)
#define SO_SNDLOWAT 19
#define ci_alloc malloc
#define CI_PRIu64 PRIu64
#define IPV6_PATHMTU 61
#define ef_vi_inline static inline
#define CI_TCP_DSACK 0x10000000
#define CI_TRACE_UINT(integer) 
#define _CI_CFG_BITFIELDA8 CI_ALIGN(8)
#define _POSIX2_CHAR_TERM 200809L
#define CI_ETHERTYPE_IP CI_BSWAPC_BE16(0x0800)
#define _POSIX_ASYNC_IO 1
#define ASSERT_VALID_PKT_MAYBE_NNL(ni,pkt,ni_locked) 
#define _SC_2_FORT_DEV _SC_2_FORT_DEV
#define _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
#define ERFKILL 132
#define CI_CFG_STACK_NAME_LEN 26
#define __INT32_TYPE__ int
#define CI_MAX_TIME_T 0x7fffffffffffffffLL
#define MAP_FIXED 0x10
#define PF_IEEE802154 36
#define ci_tcp_is_timeout_orphan(ts) (((ts)->s.b.state & CI_TCP_STATE_TIMEOUT_ORPHAN) && (((ts)->s.b.sb_aflags & CI_SB_AFLAG_ORPHAN) | ((ts)->s.b.sb_aflags & CI_SB_AFLAG_IN_CACHE)))
#define _SC_TRACE_EVENT_NAME_MAX _SC_TRACE_EVENT_NAME_MAX
#define __SIZEOF_DOUBLE__ 8
#define CI_SB_AFLAG_O_CLOEXEC_BIT 12u
#define CI_NETIF_FLAG_EVQ_KERNEL_PRIME_ONLY 0x100
#define TIOCGLCKTRMIOS 0x5456
#define OO_INTF_I_NUM (CI_CFG_MAX_INTERFACES+2)
#define CI_PKT_RX_FLAG_RECV_Q_CONSUMED 0x01
#define ci_netif_poll(ni) ci_netif_poll_n((ni), NI_OPTS(ni).evs_per_poll)
#define IPV6_PMTUDISC_WANT 1
#define PKT_IPX_RX_BUF_SEQ(af,pkt) (CI_BSWAP_BE32(PKT_IPX_TCP_HDR(af, pkt)->tcp_seq_be32) + PKT_IPX_RX_BUF_OFF(af, pkt))
#define PF_APPLETALK 5
#define TIOCGSOFTCAR 0x5419
#define CI_IP_SOCK_STATS_INC_DUPACK(ts) __CI_SOCK_STATS_INC( (ts), rx_dupack )
#define CI_INCLUDE_ASSERT_VALID 0
#define CI_LOG_PID 0x01
#define __SWORD_TYPE long int
#define MCL_CURRENT 1
#define OO_IOC_EP_FILTER_CLEAR OO_IOC_W(EP_FILTER_CLEAR, oo_tcp_filter_clear_t)
#define be16toh(x) __bswap_16 (x)
#define CI_TCP_AUX_TYPE_EPOLL 2
#define ci_bswap32(v) ((unsigned)__builtin_bswap32(v))
#define EL3HLT 46
#define CITP_EPOLL_KERNEL 0
#define _CS_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS
#define CI_SOCK_FLAG_BROADCAST 0x00000004
#define CI_TP_LOG_SV (CI_TP_LOG_TV|CI_TP_LOG_UV)
#define CI_TCP_LISTEN_BUCKET_SIZE (1 << CI_TCP_LISTEN_BUCKET_S)
#define ETH_P_CAN 0x000C
#define SO_GET_FILTER SO_ATTACH_FILTER
#define OO_IOC_CP_ARP_CONFIRM OO_IOC_W(CP_ARP_CONFIRM, cicp_verinfo_t)
#define MCAST_BLOCK_SOURCE 43
#define NLMSG_DONE 0x3
#define SIOCSIFDSTADDR 0x8918
#define __CI_TCP_COUNT_STATS_DEC(netif,Fld) __CI_NETIF_STATS_DEC((netif), tcp, Fld)
#define CI_TCP_EXT_STATS_INC_TCP_TS_REORDER(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_ts_reorder )
#define IN_CLASSA_NET 0xff000000
#define EF_VI_EVENT_POLL_MIN_EVS 2
#define _T_SIZE 
#define UINT8_C(c) c
#define IP_MULTICAST_IF 32
#define LOG_NT(x) LOG_FL(CI_TP_LOG_NT, x)
#define CI_IP_SOCK_STATS_INC_BADSYN(ts) __CI_SOCK_STATS_INC( (ts), rx_badsyn )
#define SO_MAX_PACING_RATE 47
#define OO_VI_FLAGS_TX_HW_LOOPBACK_EN 0x4
#define _____fpos64_t_defined 1
#define GROUP_FILTER_SIZE(numsrc) (sizeof (struct group_filter) - sizeof (struct sockaddr_storage) + ((numsrc) * sizeof (struct sockaddr_storage)))
#define __FLT32X_HAS_QUIET_NAN__ 1
#define _POSIX2_C_BIND __POSIX2_THIS_VERSION
#define va_end(v) __builtin_va_end(v)
#define CICP_MAC_ROWID_MAX 0x7fffffff
#define CI_IP_STATS_INC_IN6_HDR_ERRS(netif) __CI_IP_STATS_INC( (netif), in6_hdr_errs)
#define CI_PMTU_IMMEDIATE_TIMEOUT ((ci_iptime_t)1)
#define CI_NETIF_FLAG_SOCKCACHE_FORKED 0x4
#define OO_FDFLAG_SERVICE 0x100
#define EF_EVENT_RX_MULTI_SOP(e) ((e).rx_multi.flags & EF_EVENT_FLAG_SOP)
#define CP_FWD_KEY_SOURCELESS 0x08
#define FP_XSTATE_MAGIC1 0x46505853U
#define FP_XSTATE_MAGIC2 0x46505845U
#define TIOCVHANGUP 0x5437
#define __REDIRECT_FORTIFY_NTH __REDIRECT_NTH
#define __INT_FAST16_WIDTH__ 64
#define _SC_TRACE_SYS_MAX _SC_TRACE_SYS_MAX
#define OO_IOC_TCP_SOCK_LOCK OO_IOC_W(TCP_SOCK_LOCK, ci_int32)
#define CI_NEXTHDR_FRAGMENT 44
#define CI_TCP_PREV_SEQ_IS_TERMINAL(prev_seq) ((prev_seq).route_count == 0)
#define ci_fifo_peekp(f) ((f)->fifo + (f)->fifo_rd_i)
#define PRIiLEAST8 "i"
#define __ONLOAD_RINGBUFFER_H__ 
#define ci_cas_uintptr_fail(p,o,n) ci_cas64u_fail((volatile ci_uint64*) (p), (o), (n))
#define SP_TO_SOCK_CMN(ni,sp) SP_TO_foo((ni), (sp), ci_sock_cmn)
#define __getc_unlocked_body(_fp) (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
#define _CS_V7_ENV _CS_V7_ENV
#define ESTRPIPE 86
#define __CI_NETIF_STATS_INC(netif,Grp,Fld) do { (netif)->state->stats_snapshot.Grp.Fld++; } while(0)
#define __glibc_clang_prereq(maj,min) 0
#define PF_INET 2
#define _SC_SIGNALS _SC_SIGNALS
#define ETH_P_MVRP 0x88F5
#define ECONNREFUSED 111
#define si_call_addr _sifields._sigsys._call_addr
#define NETLINK_USERSOCK 2
#define CI_DEBUG_ARG(x) 
#define _POSIX2_C_DEV __POSIX2_THIS_VERSION
#define CI_SB_AFLAG_MOVED_AWAY_BIT 13u
#define _ASM_GENERIC_ERRNO_H 
#define EAGAIN 11
#define __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
#define CITP_RX_TIMESTAMPING_TRAILER_FORMAT_TTAG 1
#define CITP_TIMESTAMPING_RECORDING_FLAG_CHECK_SYNC 1
#define _RWLOCK_INTERNAL_H 
#define __CONST_SOCKADDR_ARG const struct sockaddr *
#define SEGV_ACCADI SEGV_ACCADI
#define ci_istack_poke(s) ((s)->istack_base[(s)->istack_ptr])
#define CI_TCP_SACK_MAX_BLOCKS 4
#define UINT16_MAX (65535)
#define __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
#define ci_fifo_wr_next(f) do{ (f)->fifo_wr_i = CI_FIFO_M((f), (f)->fifo_wr_i + 1u); }while(0)
#define IPV6_MINHOPCOUNT 73
#define _CS_LFS64_LINTFLAGS _CS_LFS64_LINTFLAGS
#define PF_MPLS 28
#define CI_TCP_FLAG_URG 0x20
#define NLMSG_NOOP 0x1
#define OO_IOC_CP_INIT_KERNEL_MIBS OO_IOC_R(CP_INIT_KERNEL_MIBS, ci_uint32)
#define _POSIX_TRACE_LOG -1
#define __INT16_C(c) c
#define ETH_P_CFM 0x8902
#define IPV6_FREEBIND 78
#define PF_RXRPC 33
#define TTYDEF_SPEED (B9600)
#define NETIF_INFO_UNLOCKED_NETIF 0
#define sock_ipx_laddr(s) ((s)->laddr)
#define _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
#define MS_INVALIDATE 2
#define SOL_AAL 265
#define ITIMER_VIRTUAL ITIMER_VIRTUAL
#define _SC_THREADS _SC_THREADS
#define __glibc_unsafe_len(__l,__s,__osz) (__glibc_unsigned_or_positive (__l) && __builtin_constant_p (__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz)) && !__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), __s, __osz))
#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)
#define SIG_IGN ((__sighandler_t) 1)
#define _CS_POSIX_V7_LP64_OFF64_LIBS _CS_POSIX_V7_LP64_OFF64_LIBS
#define CI_PMTU_TIMER_SET_RECOVER(ni,p) ci_pmtu_discover_timer((ni), (p), NI_CONF(ni).tconst_pmtu_discover_recover)
#define SIOCSIFHWBROADCAST 0x8937
#define ci_lock_thisthread (ci_lock_holder_t)pthread_self()
#define timersub(a,b,result) do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)
#define __STDC__ 1
#define CI_IP6_VERSION(ip) ((ip)->prio_version >> 4u)
#define CI_IPV4_STATS_INC_IN_RECVS(netif) __CI_IPV4_STATS_INC( (netif), in_recvs)
#define _NETINET_IN_H 1
#define EEXIST 17
#define CI_IPX_FRAG_HDR_SIZE(af) ( WITH_CI_CFG_IPV6( IS_AF_INET6(af) ? sizeof(ci_ip6_frag_hdr) : ) 0 )
#define __PTRDIFF_TYPE__ long int
#define CI_ATOMIC_INITIALISER(i) {(i)}
#define CI_PRIX32 PRIX32
#define IP_UNICAST_IF 50
#define __EFRM_BUILD_ASSERT_NAME(_x) __EFRM_BUILD_ASSERT_ILOATHECPP(_x)
#define errno (*__errno_location ())
#define LOG_ARP(x) LOG_FL(CI_TP_LOG_ARP, x)
#define __ASM_GENERIC_BITS_PER_LONG 
#define EADV 68
#define _UL(x) (_AC(x, UL))
#define __attribute_noinline__ __attribute__ ((__noinline__))
#define PF_ATMPVC 8
#define CI_EPLOCK_NETIF_FREE_READY_LIST 0x0008000000000000ULL
#define _BITS_STAT_H 1
#define NLM_F_MULTI 0x02
#define N_PPP 3
#define _SC_2_PBS_CHECKPOINT _SC_2_PBS_CHECKPOINT
#define __NCPUBITS (8 * sizeof (__cpu_mask))
#define tcp_raddr_be32(ts) sock_raddr_be32(&(ts)->s)
#define EAI_SERVICE -8
#define CI_SOCK_AFLAG_TCP_INHERITED (CI_SOCK_AFLAG_CORK | CI_SOCK_AFLAG_NODELAY)
#define ENOPKG 65
#define CICP_HASH_STATE_FLAGS_IS_TCP_UDP 0x2
#define __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
#define AF_X25 PF_X25
#define CI_SOCK_AFLAG_NEED_SHUT_WR 0x4
#define MADV_POPULATE_WRITE 23
#define ci_dllist_put ci_dllist_push_tail
#define CI_TCP_STATS_INC_OUT_RSTS(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_out_rsts)
#define CI_IPV6_CMSG_PKTINFO 0x0100
#define CI_PRIX64 PRIX64
#define CI_LOG_MAX_LINE 512
#define TIOCSERSWILD 0x5455
#define CLD_KILLED CLD_KILLED
#define CI_CFG_TCP_RECVMSG_MSGNAME 0
#define EP_BUF_PER_PAGE (CI_PAGE_SIZE / EP_BUF_SIZE)
#define EAI_NONAME -2
#define __bitwise__ __bitwise
#define ci_int32_ge(a,b) ci_seq_ge((a), (b), 32)
#define ETH_P_RARP 0x8035
#define EF_EVENT_FLAG_SOP 0x1
#define OO_IOC_CP_FWD_RESOLVE_COMPLETE OO_IOC_W(CP_FWD_RESOLVE_COMPLETE, ci_uint32)
#define SHUT_RD SHUT_RD
#define ci_int32_gt(a,b) ci_seq_gt((a), (b), 32)
#define __LDBL_MIN_10_EXP__ (-4931)
#define CI_TCP_PAYLOAD(hdr) ((char*)(hdr) + CI_TCP_HDR_LEN(hdr))
#define NETLINK_LIST_MEMBERSHIPS 9
#define __BITS_SOCKET_H 
#define _SC_V7_LPBIG_OFFBIG _SC_V7_LPBIG_OFFBIG
#define _K_SS_MAXSIZE 128
#define _SC_SPAWN _SC_SPAWN
#define NTF_USE (1 << 0)
#define SCNoLEAST64 __PRI64_PREFIX "o"
#define __counted_by(m) 
#define __stub_chflags 
#define NET_MAJOR 36
#define SIG_SETMASK 2
#define ci_fifo2_wr_adv(f,n) do{ (f)->fifo_wr_i += (n); }while(0)
#define AF_IPX PF_IPX
#define PRIo16 "o"
#define _SC_DEVICE_IO _SC_DEVICE_IO
#define NLM_F_REQUEST 0x01
#define CI_EPLOCK_NETIF_CLOSE_ENDPOINT 0x4000000000000000ULL
#define OO_IOC_OOF_CP_IP_MOD OO_IOC_W(OOF_CP_IP_MOD, struct oo_op_cplane_ipmod)
#define __attribute_nonnull__(params) __attribute__ ((__nonnull__ params))
#define CI_MAX_ETH_FRAME_LEN 9022
#define __FLT128_DECIMAL_DIG__ 36
#define ef_vi_transmitv_init(vi,iov,iov_len,dma_id) (vi)->ops.transmitv_init((vi), (iov), (iov_len), (dma_id))
#define SO_PASSCRED 16
#define CI_SB_FLAG_MOVED 0x10
#define ENOTUNIQ 76
#define CP_FWD_MULTIPATH_WEIGHT_NONE ((ci_uint32)-1)
#define NETLINK_BROADCAST_ERROR 4
#define _GETOPT_CORE_H 1
#define __FLT_DECIMAL_DIG__ 9
#define ci_addr_spc_id_set(p,v) ((*(p)) = (ci_addr_spc_id_t)(ci_uintptr_t) (v))
#define LOG_C(c,x) do{ if(c) do{x;}while(0); }while(0)
#define LOG_E(x) do{if(ci_tp_log&CI_TP_LOG_E )do{x;}while(0);}while(0)
#define TX_PKT_SET_DADDR(af,pkt,addr) ipx_hdr_set_daddr(af, TX_PKT_IPX_HDR(af, pkt), (addr))
#define LOG_S(x) LOG_FL(CI_TP_LOG_S , x)
#define LOG_U(x) LOG_FL(CI_TP_LOG_U , x)
#define LOG_W(x) LOG_E(x)
#define OO_DO_STACK_POLL 1
#define _SC_STREAMS _SC_STREAMS
#define CI_IP_SOCK_STATS_INC_DUPACKFREC(ts) __CI_SOCK_STATS_INC( (ts), rx_dupack_frec )
#define __WALL 0x40000000
#define EFRM_PRINTK_PREFIX "[sfc efrm] "
#define __LDBL_NORM_MAX__ 1.18973149535723176502126385303097021e+4932L
#define PRIoMAX __PRI64_PREFIX "o"
#define ci_int32_le(a,b) ci_seq_le((a), (b), 32)
#define ci_int32_lt(a,b) ci_seq_lt((a), (b), 32)
#define OO_WAITABLE_LK_LOCKED 0x10000000
#define ID_TO_SOCK(ni,id) ID_TO_foo((ni), (id), SOCK)
#define SOL_ALG 279
#define SHUT_WR SHUT_WR
#define CI_TCP_TCONST_RTO_MIN (1000/5)
#define _SC_CHAR_BIT _SC_CHAR_BIT
#define _ASM_GENERIC_TYPES_H 
#define _POSIX_THREAD_ATTR_STACKADDR 200809L
#define _SC_MONOTONIC_CLOCK _SC_MONOTONIC_CLOCK
#define __INT_LEAST64_WIDTH__ 64
#define INT_LEAST16_MAX (32767)
#define PRIoLEAST8 "o"
#define CI_BITS_N 32u
#define __glibc_likely(cond) __builtin_expect ((cond), 1)
#define _CS_POSIX_V6_ILP32_OFF32_LIBS _CS_POSIX_V6_ILP32_OFF32_LIBS
#define __UINT_FAST8_TYPE__ unsigned char
#define EOPNOTSUPP 95
#define SO_RCVTIMEO SO_RCVTIMEO_OLD
#define SCNi8 "hhi"
#define CI_SB_AFLAG_ORPHAN 0x1
#define __P(args) args
#define CI_UDP_ENCAP_ESPINUDP_NON_IKE 1
#define _POSIX_BARRIERS 200809L
#define PRIo64 __PRI64_PREFIX "o"
#define PRIXFAST16 __PRIPTR_PREFIX "X"
#define TCP_RCV_FMT "rcv=%08x-%08x-%08x wnd=%d q=%d+%d usr=%d"
#define EFRM_PRINTK(level,fmt,...) printk(level EFRM_PRINTK_PREFIX fmt "\n", __VA_ARGS__)
#define CI_SLEEP_NETIF_LOCKED 0x1
#define __ATOMIC_ACQ_REL 4
#define __U32_TYPE unsigned int
#define FEP_PRI_ARGS(e) __FUNCTION__, EP_PRI_ARGS(e)
#define OO_SP_TO_INT(p) (p)
#define _STDLIB_H 1
#define CI_SLEEP_NETIF_RQ 0x4
#define IP_RECVERR_RFC4884 26
#define si_upper _sifields._sigfault._bounds._addr_bnd._upper
#define CI_EPLOCK_NETIF_SWF_UPDATE 0x0200000000000000ULL
#define _BITS_FLOATN_COMMON_H 
#define IP_UNBLOCK_SOURCE 37
#define IPV6_RTHDR_TYPE_0 0
#define PRIXFAST32 __PRIPTR_PREFIX "X"
#define S_ISCHR(mode) __S_ISTYPE((mode), __S_IFCHR)
#define PKT_START(pkt) ((char*) oo_ether_hdr(pkt))
#define OO_SIGNAL_FLAG_HAVE_PENDING 0x1
#define _SC_XOPEN_UNIX _SC_XOPEN_UNIX
#define si_timerid _sifields._timer.si_tid
#define _BITS_SIGEVENT_CONSTS_H 1
#define __FLT32X_MAX_EXP__ 1024
#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS _CS_POSIX_V6_ILP32_OFFBIG_LIBS
#define PROT_NONE 0x0
#define CI_HAVE_COMPARE_AND_SWAP 
#define O_NOCTTY 0400
#define SCNo8 "hho"
#define CI_SOCKOPT_FLAG_IPV6_RECVERR 0x4
#define SP_TO_TCP(ni,sp) SP_TO_foo((ni), (sp), ci_tcp_state)
#define _POSIX_SHARED_MEMORY_OBJECTS 200809L
#define ci_netif_ep_ofs(ni) ((ni)->state->ep_ofs)
#define FIONBIO 0x5421
#define _IOC_SIZEMASK ((1 << _IOC_SIZEBITS)-1)
#define _STDBOOL_H 
#define ci_atomic_or(a,v) ci_atomic32_or ((ci_uint32*) &(a)->n, (v))
#define __ATOMIC_ACQUIRE 2
#define OO_IOC_TCP_LOOPBACK_CONNECT OO_IOC_RW(TCP_LOOPBACK_CONNECT, struct oo_op_loopback_connect)
#define CI_IPID_MIN 0x0400
#define OO_SIGHANGLER_USER 4
#define IP_DEFAULT_MULTICAST_TTL 1
#define sock_af_space(s) AF_SPACE_FLAG_IP4
#define PRIXFAST64 __PRI64_PREFIX "X"
#define ci_fifo_ctor(f,cap,prc) ci_fifo_ctor_wcast(f,cap,prc,)
#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
#define SEGV_MTEAERR SEGV_MTEAERR
#define __GCC_IEC_559_COMPLEX 2
#define ci_x86_sfence() __asm__ __volatile__ ("sfence")
#define EF_EVENT_TX_CTPIO(e) ((e).tx.flags & EF_EVENT_FLAG_CTPIO)
#define OO_DEFERRED_FLAG_FIRST 2
#define EF_VI_CTPIO_APERTURE_SIZE 4096
#define __uid_t_defined 
#define ci_istack_full(s) ((s)->istack_ptr == (s)->istack_size)
#define _SC_TIMEOUTS _SC_TIMEOUTS
#define __GLIBC_USE(F) __GLIBC_USE_ ## F
#define CI_SOCK_FLAG_SET_SNDBUF 0x00000400
#define __UINT_LEAST8_TYPE__ unsigned char
#define __SIZEOF_FLOAT80__ 16
#define EUNATCH 49
#define SOL_ATM 264
#define RCV_WND_FMT "rcv=%08x-%08x-%08x (cur=%08x) wnd_adv=%d"
#define __BFLT16_DENORM_MIN__ 9.18354961579912115600575419704879436e-41BF16
#define CI_TCP_CONG_OPEN 0x0
#define INT_LEAST16_MIN (-32767-1)
#define N_X25 6
#define __attribute_malloc__ __attribute__ ((__malloc__))
#define AF_RDS PF_RDS
#define __flexarr []
#define _SC_LINE_MAX _SC_LINE_MAX
#define _SCHED_H 1
#define OO_SCP_NO_MULTICAST 0x1
#define PKT_START_OFF_BAD ((ci_int16)0xffff)
#define _BITS_SETJMP_H 1
#define _POSIX_PRIORITIZED_IO 200809L
#define ETHERTYPE_ARP 0x0806
#define CI_TCP_EXT_STATS_INC_SYNCOOKIES_RECV(netif) __CI_TCP_EXT_STATS_INC( (netif), syncookies_recv )
#define __stub_fchflags 
#define CITP_SCALABLE_MODE_TPROXY_ACTIVE 0x2
#define CI_ADDR_FROM_ADDR_SH(addr) ({ ci_addr_t a = {}; a = CI_ADDR_FROM_IP4((addr).ip4); a; })
#define __INTMAX_C(c) c ## L
#define _SC_LEVEL4_CACHE_SIZE _SC_LEVEL4_CACHE_SIZE
#define NEXT_IP_ID(ni) (NI_IPID(ni)->base | (NI_IPID(ni)->next++ & CI_IPID_BLOCK_MASK))
#define PTHREAD_SCOPE_PROCESS PTHREAD_SCOPE_PROCESS
#define PRIX8 "X"
#define _BITS_TIME_H 1
#define IPV6_RECVFRAGSIZE 77
#define AF_IP_L3 AF_IP
#define TIOCM_CAR 0x040
#define __socklen_t_defined 
#define ef_receive_poll(evq,evs,evs_len) (evq)->ops.receive_poll((evq), (evs), (evs_len))
#define O_ACCMODE 0003
#define EFAB_NIC_DP_GET(DP,PARAM) (EFAB_NIC_DP_KNOWN(DP, PARAM) ? (DP).PARAM : EFAB_NIC_DP_DEFAULT(PARAM))
#define TIOCEXCL 0x540C
#define __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
#define TIOCPKT_IOCTL 64
#define IPV6_LEAVE_GROUP 21
#define SO_TXREHASH 74
#define FIOGETOWN 0x8903
#define EAFNOSUPPORT 97
#define _STDDEF_H_ 
#define IP_HDRINCL 3
#define FN_FMT "%s: "N_FMT
#define __UINT8_MAX__ 0xff
#define CI_SET_TCP_SO_ERROR(t,e) CI_SET_SO_ERROR(&(t)->s,(e))
#define _POSIX_CLOCK_SELECTION 200809L
#define EL3RST 47
#define _POSIX_TYPED_MEMORY_OBJECTS -1
#define SIOCADDDLCI 0x8980
#define _SC_TYPED_MEMORY_OBJECTS _SC_TYPED_MEMORY_OBJECTS
#define __S_ISUID 04000
#define IPV6_PMTUDISC_INTERFACE 4
#define CI_SB_AFLAG_IN_CACHE_NO_FD 0x800
#define ci_get_os_sock_fd(fd) ci_tcp_helper_get_sock_fd(fd)
#define FNTS_FMT "%s: "NTS_FMT
#define OO_IOC_EP_FILTER_MCAST_DEL OO_IOC_W(EP_FILTER_MCAST_DEL, oo_tcp_filter_mcast_t)
#define CI_UDPF_LAST_SEND_NOMAC 0x00040000
#define CI_TRY_EQ(exp,_want) do{ int _trc; int want = (int)(_want); _trc=(exp); if( CI_UNLIKELY(_trc < 0) ) ci_sys_fail(#exp, _trc); if( CI_UNLIKELY(_trc != (want)) ) ci_fail(("CI_TRY_EQ(('%s')%d != %d)", #exp, _trc, want)); }while(0)
#define INT16_C(c) c
#define __WINT_MAX__ 0xffffffffU
#define _SC_2_C_DEV _SC_2_C_DEV
#define __sigset_t_defined 1
#define __SIZEOF_PTHREAD_ATTR_T 56
#define __FLT32_MIN_EXP__ (-125)
#define OO_SIGHANGLER_STOP 1
#define TX_PKT_DPORT_BE16(pkt) (((ci_uint16*) oo_tx_ip_data(pkt))[1])
#define CI_SOCK_FLAGS_PRI_ARG(s) ((s)->s_aflags & CI_SOCK_AFLAG_CORK ? "CORK ":""), ((s)->s_aflags & CI_SOCK_AFLAG_NEED_SHUT_RD ? "SHUTRD ":""), ((s)->s_aflags & CI_SOCK_AFLAG_NEED_SHUT_WR ? "SHUTWR ":""), ((s)->s_aflags & CI_SOCK_AFLAG_NODELAY ? "TCP_NODELAY ":""), ((s)->s_aflags & CI_SOCK_AFLAG_NEED_ACK ? "ACK ":""), ((s)->s_flags & CI_SOCK_FLAG_REUSEADDR ? "REUSE ":""), ((s)->s_flags & CI_SOCK_FLAG_KALIVE ? "KALIVE ":""), ((s)->s_flags & CI_SOCK_FLAG_BROADCAST ? "BCAST ":""), ((s)->s_flags & CI_SOCK_FLAG_OOBINLINE ? "OOBIN ":""), ((s)->s_flags & CI_SOCK_FLAG_LINGER ? "LINGER ":""), ((s)->s_flags & CI_SOCK_FLAG_DONTROUTE ? "DONTROUTE ":""), ((s)->s_flags & CI_SOCK_FLAG_FILTER ? "FILTER ":""), ((s)->s_flags & CI_SOCK_FLAG_BOUND ? "BOUND ":""), ((s)->s_flags & CI_SOCK_FLAG_PORT_BOUND ? "PBOUND ":""), ((s)->s_flags & CI_SOCK_FLAG_SET_SNDBUF ? "SNDBUF ":""), ((s)->s_flags & CI_SOCK_FLAG_SET_RCVBUF ? "RCVBUF ":""), ((s)->s_flags & CI_SOCK_FLAG_SW_FILTER_FULL ? "SW_FILTER_FULL ":""), ((s)->s_flags & CI_SOCK_FLAG_TPROXY ? "TRANSPARENT ":""), ((s)->s_flags & CI_SOCK_FLAG_SCALACTIVE ? "SCALACTIVE ":""), ((s)->s_flags & CI_SOCK_FLAG_SCALPASSIVE ? "SCALPASSIVE ":""), ((s)->s_flags & CI_SOCK_FLAG_STACK_FILTER ? "STACK_FILTER ":""), ((s)->s_flags & CI_SOCK_FLAG_REUSEPORT ? "REUSEPORT ":""), ((s)->s_flags & CI_SOCK_FLAG_BOUND_ALIEN ? "BOUND_ALIEN ":""), ((s)->s_flags & CI_SOCK_FLAG_CONNECT_MUST_BIND ? "CONNECT_MUST_BIND ":""), ((s)->s_flags & CI_SOCK_FLAG_PMTU_DO ? "PMTU_DO ":""), ((s)->s_flags & CI_SOCK_FLAG_ALWAYS_DF ? "ALWAYS_DF ":""), ((s)->s_flags & CI_SOCK_FLAG_SET_IP_TTL ? "IP_TTL ":""), ((s)->s_flags & CI_SOCK_FLAG_DEFERRED_BIND ? "DEFERRED_BIND ":""), ((s)->s_flags & CI_SOCK_FLAG_V6ONLY ? "V6ONLY ":""), ((s)->s_flags & CI_SOCK_FLAG_DNAT ? "DNAT ":""), ((s)->cp.sock_cp_flags & OO_SCP_NO_MULTICAST ? "NOMCAST ":"")
#define INT8_MAX (127)
#define CLD_TRAPPED CLD_TRAPPED
#define UINT_LEAST64_MAX (__UINT64_C(18446744073709551615))
#define CI_UDPF_PEEK_FROM_OS 0x00000200
#define CI_TP_LOG_DU 0x8
#define _CS_LFS_LIBS _CS_LFS_LIBS
#define _GETOPT_POSIX_H 1
#define NETLINK_CRYPTO 21
#define S_TYPEISSEM(buf) __S_TYPEISSEM(buf)
#define __BFLT16_MIN_10_EXP__ (-37)
#define EILSEQ 84
#define CI_IP_SOCK_STATS_INC_OOO(ts) __CI_SOCK_STATS_INC( (ts), rx_ooo )
#define _SC_PII_SOCKET _SC_PII_SOCKET
#define ETH_P_ATMFATE 0x8884
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define ESPIPE 29
#define _LFS_ASYNCHRONOUS_IO 1
#define SCNxFAST8 "hhx"
#define SI_DETHREAD SI_DETHREAD
#define S_ISVTX __S_ISVTX
#define OO_IOC_CP_CHECK_VETH_ACCELERATION OO_IOC_W(CP_CHECK_VETH_ACCELERATION, ci_uint32)
#define __OFF_T_MATCHES_OFF64_T 1
#define __SIZE_MAX__ 0xffffffffffffffffUL
#define CI_SOCK_FLAG_CONNECTED 0x02000000
#define ENAMETOOLONG 36
#define TX_PKT_IPX_DPORT(af,pkt) (((ci_uint16*) oo_tx_ipx_data(af, pkt))[1])
#define CICP_MAC_ROWID_IS_VALID(id) ((cicp_mac_rowid_t)(id) >= 0)
#define OO_MMAP_TYPE_SHIFT CI_PAGE_SHIFT
#define ci_in_irq() 0
#define PRIdMAX __PRI64_PREFIX "d"
#define __WCHAR_MAX__ 0x7fffffff
#define AF_APPLETALK PF_APPLETALK
#define __LDBL_REDIR(name,proto) name proto
#define _SC_TTY_NAME_MAX _SC_TTY_NAME_MAX
#define FIOASYNC 0x5452
#define ci_rmb() ci_x86_mb()
#define SOL_PPPOL2TP 273
#define AF_IB PF_IB
#define _SC_LEVEL3_CACHE_LINESIZE _SC_LEVEL3_CACHE_LINESIZE
#define SO_NETNS_COOKIE 71
#define CI_DECLARE_FLEX_ARRAY(type,name) struct { struct { } __empty_ ## name; type name[]; }
#define INT16_MAX (32767)
#define AF_IP(ip) (ip)
#define ci_clflush(addr) do{}while(0)
#define CI_SB_AFLAG_O_NONBLOCK_BIT 6u
#define IPV6_NEXTHOP 9
#define _IOC_TYPE(nr) (((nr) >> _IOC_TYPESHIFT) & _IOC_TYPEMASK)
#define MADV_MERGEABLE 12
#define ETHERTYPE_IPV6 0x86dd
#define CI_SB_AFLAG_O_NONBLOCK 0x40
#define RET_WITH_ERRNO(_errno) do { int rc_; CI_SET_ERROR(rc_, _errno); return rc_; } while (0)
#define WIFEXITED(status) __WIFEXITED (status)
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define sock_raddr_be32(s) ((s)->pkt.ipx.ip4.ip_daddr_be32)
#define OOFA_IPCACHE_VALID(ni,ipc) (oo_cp_ipcache_is_valid((ni), (ipc)) ? "Valid" : "Old")
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define AF_MCTP PF_MCTP
#define __S_IREAD 0400
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define S_TYPEISSHM(buf) __S_TYPEISSHM(buf)
#define htons(x) __bswap_16 (x)
#define __GCC_IEC_559 2
#define SO_PEERCRED 17
#define CI_IF_DEBUG(y,n) (n)
#define CI_TCP_STATE_INVALID 0x400
#define udp_laddr_be32(us) (sock_laddr_be32(&us->s))
#define _IOFBF 0
#define CI_SB_AFLAG_O_NDELAY CI_SB_AFLAG_O_NONBLOCK
#define _POSIX_SPAWN 200809L
#define __FLT_EVAL_METHOD__ 0
#define FL_ARG_U 0x4
#define _SC_NPROCESSORS_CONF _SC_NPROCESSORS_CONF
#define __ASMNAME2(prefix,cname) __STRING (prefix) cname
#define KERN_DEBUG "DBG>"
#define _SC_SYSTEM_DATABASE _SC_SYSTEM_DATABASE
#define __TIMESIZE __WORDSIZE
#define CP_HWPORT_ROW_IN_USE 0x00000200u
#define _SC_XOPEN_STREAMS _SC_XOPEN_STREAMS
#define _SC_NPROCESSORS_ONLN _SC_NPROCESSORS_ONLN
#define __f64(x) x ##f64
#define SO_SELECT_ERR_QUEUE 45
#define _CS_POSIX_V7_ILP32_OFF32_CFLAGS _CS_POSIX_V7_ILP32_OFF32_CFLAGS
#define __FLT64_DECIMAL_DIG__ 17
#define __CET__ 3
#define TCP_URG_ARGS(ts) __FUNCTION__, (tcp_urg_data(ts) & CI_TCP_URG_COMING) ? "CI_TCP_URG_COMING " : "", (tcp_urg_data(ts) & CI_TCP_URG_IS_HERE) ? "CI_TCP_URG_IS_HERE " : "", (tcp_urg_data(ts) & CI_TCP_URG_PTR_VALID) ? "CI_TCP_URG_PTR_VALID " : "", tcp_urg_data(ts) & CI_TCP_URG_DATA_MASK
#define FL_ARG_X 0x8
#define FNS_PRI_ARGS(n,s) __FUNCTION__, NS_PRI_ARGS((n),(s))
#define EF_EVENT_SW_DATA(e) ((e).sw.data)
#define CI_IS_POW2(x) ((x) && ! ((x) & ((x) - 1)))
#define CI_TCP_CLOSE_WAIT (0x4000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SYNCHRONISED | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_RECVD_FIN | CI_TCP_STATE_TXQ_ACTIVE )
#define CI_CFG_PKT_BUF_SIZE 2048
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define ef_vi_transmit_alt_discard(vi,alt_id) (vi)->ops.transmit_alt_discard((vi), (alt_id))
#define CICP_ROWID_MAX 0x7fff
#define CP_LLAP_UP 0x00000001u
#define CI_MAX_ETH_DATA_LEN (CI_MAX_ETH_FRAME_LEN - ETH_HLEN)
#define AI_NUMERICSERV 0x0400
#define FNONBLOCK O_NONBLOCK
#define INT8_MIN (-128)
#define CI_CPU_HAS_IOSPACE 1
#define MSG_TRUNC MSG_TRUNC
#define _SC_2_CHAR_TERM _SC_2_CHAR_TERM
#define _SC_TRACE_USER_EVENT_MAX _SC_TRACE_USER_EVENT_MAX
#define CI_SOCK_FLAG_REUSEADDR 0x00000001
#define CI_CFG_FAST_RECOVER_PMTU_AT_MIN 0
#define _SYS_UN_H 1
#define LOG_IDO(x) LOG_FL(CI_TP_LOG_IDO, x)
#define ILL_BADIADDR ILL_BADIADDR
#define EF_EVENT_RX_MULTI_DISCARD_TYPE(e) ((e).rx_multi_discard.subtype)
#define CI_PFD_AFLAG_WRITER_SHIFT 4
#define __attribute_nonstring__ __attribute__ ((__nonstring__))
#define PKT_IPX_TCP_TSO_TSVAL(af,pkt) CI_BSWAP_BE32(*(ci_uint32*) (CI_TCP_HDR_OPTS(PKT_IPX_TCP_HDR(af, pkt)) + 4))
#define sock_lport_be16(s) ipcache_lport_be16(&(s)->pkt)
#define __CPUMASK(cpu) ((__cpu_mask) 1 << ((cpu) % __NCPUBITS))
#define CI_TCPT_FLAG_LIMITED_TRANSMIT 0x200000
#define udp_lport_be16(us) (sock_lport_be16(&us->s))
#define CI_SOCK_AFLAG_NODELAY 0x200
#define SOCK_TO_TCP __SOCK_TO_TCP
#define CI_UNIX_PIPE_ACCELERATE 1
#define TCSETSF 0x5404
#define IOC_IN (_IOC_WRITE << _IOC_DIRSHIFT)
#define __COMPAR_FN_T 
#define __GID_T_TYPE __U32_TYPE
#define CI_UL_LOG_VPT 0x80000000
#define POLL_MSG POLL_MSG
#define __STATFS_MATCHES_STATFS64 1
#define INT16_MIN (-32767-1)
#define CI_SIN6(sa) ((struct sockaddr_in6 *)(sa))
#define __FINITE_MATH_ONLY__ 0
#define __CI_INTERNAL_IP_STATS_H__ 
#define si_overrun _sifields._timer.si_overrun
#define ETH_P_CUST 0x6006
#define __id_t_defined 
#define _BITS_ERRNO_H 1
#define CI_TCP_TCONST_PAWS_IDLE (24*24*60*60*1000)
#define _SC_SCHAR_MAX _SC_SCHAR_MAX
#define CI_TCP_STATE_SYNCHRONISED 0x001
#define tcp_rcv_usr(ts) ((ts)->rcv_added - (ts)->rcv_delivered)
#define __sched_priority sched_priority
#define UDP_FLAGS(us) ((us)->udpflags)
#define CI_PMTU_PLATEAU_ENTRIES { 68, 296, 508, 1006, 1492, 2002, 4352, 8166, 32000, 65535 }
#define int32_t ci_int32
#define EF_EVENT_TX_WITH_TIMESTAMP_RQ_ID(e) ((e).tx_timestamp.rq_id)
#define EFRM_TRACE(fmt,...) do {} while(0)
#define CI_PKT_ALLOC_USE_NONB 2
#define OO_IOC_EP_INFO OO_IOC_R(EP_INFO, ci_ep_info_t)
#define EBADE 52
#define EBADF 9
#define _SC_XBS5_ILP32_OFFBIG _SC_XBS5_ILP32_OFFBIG
#define __ONLOAD_IOCTL_BASE_H__ 
#define EBADR 53
#define __SSE2__ 1
#define SIOCGIFHWADDR 0x8927
#define PRIxPTR __PRIPTR_PREFIX "x"
#define _SC_SHARED_MEMORY_OBJECTS _SC_SHARED_MEMORY_OBJECTS
#define __pid_t_defined 
#define EL2NSYNC 45
#define ERANGE 34
#define _PATH_HEQUIV "/etc/hosts.equiv"
#define ECANCELED 125
#define NFEA_MAX (__NFEA_MAX - 1)
#define SIGFPE 8
#define SOCK_SNDBUF_LOCK 1
#define ci_fifo_put(f,v) do{ ci_fifo_poke(f) = (v); ci_fifo_wr_next(f); }while(0)
#define OO_IOC_OS_SOCK_SENDMSG OO_IOC_W(OS_SOCK_SENDMSG, oo_os_sock_sendmsg_t)
#define ci_rel_os_sock_fd(fd) do { if(CI_IS_VALID_SOCKET(fd)) ci_tcp_helper_rel_sock_fd((fd)); } while(0)
#define ci_istack_is_empty(s) ((s)->istack_ptr == 0)
#define __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
#define _THREAD_MUTEX_INTERNAL_H 1
#define __ONLOAD_OFFBUF_H__ 
#define __LDBL_REDIR1(name,proto,alias) name proto
#define CI_ULCONST const
#define CITP_SCALABLE_LISTEN_BOUND 0
#define DESCRIPTOR_PRI_ARG(fd) fd
#define __size_t 
#define TIOCM_CTS 0x020
#define NLMSG_DATA(nlh) ((void *)(((char *)nlh) + NLMSG_HDRLEN))
#define EF_TCP_URG_MODE_ALLOW 0
#define SOCK_BUF_LOCK_MASK (SOCK_SNDBUF_LOCK | SOCK_RCVBUF_LOCK)
#define INT_FAST8_MAX (127)
#define __DEC64_MAX_EXP__ 385
#define CI_NETIF_ERRORS_FMT "%s%s%s%s"
#define ETXTBSY 26
#define CI_SOCK_AFLAG_SELECT_ERR_QUEUE_BIT 11u
#define __HAVE_FLOAT128X 0
#define __INT8_C(c) c
#define WCHAR_MAX __WCHAR_MAX
#define CI_UL_LOG_VVE 0x80000
#define CI_PMTU_TIMER_NOW(ni,p) ci_pmtu_discover_timer( (ni), (p), CI_PMTU_IMMEDIATE_TIMEOUT )
#define OO_IOC_CP_CHECK_VERSION OO_IOC_W(CP_CHECK_VERSION, oo_cp_version_check_t)
#define NSIG _NSIG
#define __INTMAX_TYPE__ long int
#define __oo_pktq_put_list(ni,q,head_id,tail_pkt,n,next) do { (tail_pkt)->next = OO_PP_NULL; if( (q)->num != 0 ) PKT_CHK((ni), (q)->tail)->next = head_id; else (q)->head = head_id; (q)->tail = OO_PKT_P(tail_pkt); (q)->num += (n); } while(0)
#define CI_NETIF_FLAG_DO_INJECT_TO_KERNEL 0x20
#define SO_INCOMING_NAPI_ID 56
#define MSG_PEEK MSG_PEEK
#define CI_LOG_V(x) x
#define CLOCKS_PER_SEC ((__clock_t) 1000000)
#define htobe16(x) __bswap_16 (x)
#define OO_SP_EQ(pa,pb) ((pa) == (pb))
#define _SC_BC_SCALE_MAX _SC_BC_SCALE_MAX
#define CI_IP_SOCK_STATS_INC_CONG(ts) __CI_SOCK_STATS_INC( (ts), cong )
#define CI_TCP_EXT_STATS_INC_TCP_FACK_REORDER(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_fack_reorder )
#define CI_PTR_ALIGN_FWD(p,align) ((char*) CI_ALIGN_FWD(((ci_ptr_arith_t)(p)), ((ci_ptr_arith_t)(align))))
#define __SHRT_MAX__ 0x7fff
#define O_CLOEXEC __O_CLOEXEC
#define __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
#define CI_TCP_EXT_STATS_INC_LISTEN_OVERFLOWS(netif) __CI_TCP_EXT_STATS_INC( (netif), listen_overflows )
#define ILL_ILLOPC ILL_ILLOPC
#define ERR_PTR(err) ((void*)(uintptr_t)(long)(err))
#define __FLT64X_MAX_10_EXP__ 4932
#define ci_lock_t ci_lock_i
#define SIGTTOU 22
#define CI_ILL_SET_NAME(l,name) 
#define CI_SLLIST_TRY_POP(c_type,lnk_mbr,list) ((list)->head ? CI_CONTAINER(c_type, lnk_mbr, ci_sllist_pop(list)) : NULL)
#define _SC_SCHAR_MIN _SC_SCHAR_MIN
#define __clockid_t_defined 1
#define __daddr_t_defined 
#define CI_CFG_IPV6 0
#define ETH_ALEN 6
#define __LDBL_IS_IEC_60559__ 1
#define SO_RCVTIMEO_OLD 20
#define CI_CFG_FAKE_IPV6 1
#define FP_XSTATE_MAGIC2_SIZE sizeof (FP_XSTATE_MAGIC2)
#define IPV6_HDRINCL 36
#define TF_PRI_ARGS(t,fd) S_FMT(t), FD_PRI_ARGS(fd)
#define CI_TCP_KEEPALIVE_PROBES 9
#define PRIu16 "u"
#define sigmask(sig) __glibc_macro_warning ("sigmask is deprecated") ((int)(1u << ((sig) - 1)))
#define __CI_TOOLS_MEMLEAK_DEBUG_H__ 
#define CI_PFD_AFLAG_WRITER_MASK 0x70
#define ALLPERMS (S_ISUID|S_ISGID|S_ISVTX|S_IRWXU|S_IRWXG|S_IRWXO)
#define LOG_IPP(x) LOG_FL(CI_TP_LOG_IPP, x)
#define NETIF_INFO_LOCKED_NETIF 2
#define ci_fifo2_rd_i(f) CI_FIFO2_M((f), (f)->fifo_rd_i)
#define IS_AF_INET6(af) 0
#define _CS_GNU_LIBPTHREAD_VERSION _CS_GNU_LIBPTHREAD_VERSION
#define ci_bit_for_each_set(bit,addr,size) for ((bit) = ci_bit_find_first((addr), (size)); (bit) < (size); (bit) = ci_bit_find_next((addr), (size), (bit) + 1))
#define SCM_TIMESTAMPING SO_TIMESTAMPING
#define __BFLT16_EPSILON__ 7.81250000000000000000000000000000000e-3BF16
#define MAP_EXECUTABLE 0x01000
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define IFNAMSIZ IF_NAMESIZE
#define _SC_THREAD_STACK_MIN _SC_THREAD_STACK_MIN
#define __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
#define ONLOAD_PRETTY_NAME_MAXLEN (CI_CFG_STACK_NAME_LEN + 8)
#define _SC_V6_LP64_OFF64 _SC_V6_LP64_OFF64
#define _ci_assert_le(exp1,exp2,file,line) do{}while(0)
#define _SC_JOB_CONTROL _SC_JOB_CONTROL
#define _ci_assert_lt(exp1,exp2,file,line) do{}while(0)
#define htobe64(x) __bswap_64 (x)
#define FPE_FLTRES FPE_FLTRES
#define CI_SB_FLAG_WAKE_RX (1u << CI_SB_FLAG_WAKE_RX_B)
#define EINPROGRESS 115
#define OO_IOC_W(XXX,t) _IOW(OO_LINUX_IOC_BASE, OO_OP_ ##XXX, t)
#define CI_TCP_HDR_LEN(hdr) (((hdr)->tcp_hdr_len_sl4 & 0xf0) >> 2u)
#define __HAVE_DISTINCT_FLOAT32X 0
#define _SC_SEM_VALUE_MAX _SC_SEM_VALUE_MAX
#define _PC_ASYNC_IO _PC_ASYNC_IO
#define SCM_TIMESTAMPING_OOEXT SO_TIMESTAMPING_OOEXT
#define INT_FAST8_MIN (-128)
#define __BFLT16_DECIMAL_DIG__ 4
#define _UNISTD_H 1
#define CI_TCP_EXT_STATS_INC_TCP_SACK_UNDO(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_sack_undo )
#define __SOCKADDR_COMMON(sa_prefix) sa_family_t sa_prefix ##family
#define CI_IP_CMSG_TIMESTAMP 0x20
#define CI_SOCK_FLAG_DNAT 0x10000000
#define __DEC32_EPSILON__ 1E-6DF
#define ci_ip_csum ci_ip_csum_c
#define WCHAR_MIN __WCHAR_MIN
#define OO_IOC_EP_REUSEPORT_BIND OO_IOC_W(EP_REUSEPORT_BIND, oo_tcp_reuseport_bind_t)
#define CI_SB_AFLAG_IN_CACHE_NO_FD_BIT 11u
#define __OPTIMIZE__ 1
#define LN_FMT LPF "%d "
#define congstate_str(ts) ci_tcp_congstate_str((ts)->congstate)
#define TX_PKT_PROTOCOL(af,pkt) ipx_hdr_protocol(af, TX_PKT_IPX_HDR(af, pkt))
#define ETH_P_AX25 0x0002
#define ETH_P_EDSA 0xDADA
#define SCNo16 "ho"
#define ____gwchar_t_defined 1
#define ETHERTYPE_PUP 0x0200
#define EF_CTPIO_MODE_CT 2
#define TX_PKT_DADDR(af,pkt) ipx_hdr_daddr(af, TX_PKT_IPX_HDR(af, pkt))
#define LOG_ITV(x) LOG_FL(CI_TP_LOG_ITV, x)
#define CP_FWD_TABLE_ID_INVALID CP_MAX_INSTANCES
#define __CI_INTERNAL_TRANSPORT_CONFIG_OPT_EXTRA_H__ 
#define CI_BSWAPC_BE16(v) ci_bswapc16(v)
#define OO_TIMEOUT_Q_FINWAIT 1
#define CI_UDP_MAX_PAYLOAD_BYTES(af) (0xffff - sizeof(ci_udp_hdr) - (IS_AF_INET6(af) ? 0 : sizeof(ci_ip4_hdr)))
#define OO_IOC_OS_SOCK_CREATE_AND_SET OO_IOC_W(OS_SOCK_CREATE_AND_SET, oo_tcp_create_set_t)
#define OO_IOC_PKT_BUF_MMAP OO_IOC_RW(PKT_BUF_MAP, oo_pkt_buf_map_t)
#define SO_WIFI_STATUS 41
#define PROT_GROWSDOWN 0x01000000
#define CI_UL_LOG_E 0x1
#define CI_CPU_OK (0)
#define NETDB_SUCCESS 0
#define MSG_ERRQUEUE MSG_ERRQUEUE
#define __LDBL_MAX_EXP__ 16384
#define SCNo32 "o"
#define CI_TP_LOG_AR 0x10000
#define CI_IP_ADDR_EQUAL(ipaddr_be32,ipa,ipb,ipc,ipd,mask) ( ((ipaddr_be32) & CI_BSWAP_BE32(mask)) == (CI_IP_ADDR(ipa, ipb, ipc, ipd) & CI_BSWAP_BE32(mask)) )
#define ENOTEMPTY 39
#define UINT_FAST16_MAX (18446744073709551615UL)
#define __THROW __attribute__ ((__nothrow__ __LEAF))
#define PKT_BUFSET_U_MMAPPED(ni,setid) ((ni)->pkt_bufs[setid] != NULL)
#define ENOTBLK 15
#define CI_BSWAPC_BE32 CI_BSWAP_BE32
#define __WINT_MIN__ 0U
#define OO_SIGNAL_MAX_PENDING 20
#define CI_NI_READY_LIST_FLAG_WAKE 1
#define EPROTOTYPE 91
#define _SC_SHELL _SC_SHELL
#define CI_EPOLL_SETS_PER_AUX_BUF 4
#define CI_IP_TIMER_PMTU_DISCOVER 0x7
#define __SIZEOF_PTHREAD_RWLOCKATTR_T 8
#define printk ci_log
#define CI_SLLIST_FOR_EACH(p_lnk,p_list) for( (p_lnk) = (p_list)->head; (p_lnk) != 0; (p_lnk) = (p_lnk)->next )
#define __CI_INTERNAL_SEQ_H__ 
#define __EFRM_BUILD_ASSERT_ILOATHECPP(_x) __EFRM_BUILD_ASSERT__ ##_x
#define _LINUX_SOCKET_H 
#define __linux__ 1
#define PRIu8 "u"
#define CI_IP_TIMER_NETIF_STATS 0xa
#define CITP_DETAILED_CHECKS(x) 
#define AF_NETROM PF_NETROM
#define CI_TP_LOG_DEFAULT (CI_TP_LOG_E|CI_TP_LOG_U|CI_TP_LOG_TE)
#define SIOCSIFPFLAGS 0x8934
#define SO_BPF_EXTENSIONS 48
#define CI_SB_AFLAG_NOT_READY_BIT 9u
#define __FLT128_MIN_10_EXP__ (-4931)
#define TCXONC 0x540A
#define __FLT32X_IS_IEC_60559__ 1
#define SCNo64 __PRI64_PREFIX "o"
#define CI_TP_LOG_DR 0x2000
#define CI_TP_LOG_DT 0x4000
#define htonl(x) __bswap_32 (x)
#define __itimerspec_defined 1
#define ci_ss_assert_eq(ni,x,y) ci_ss_assert2((ni), (x)==(y), x, y)
#define IPV6_MTU_DISCOVER 23
#define _IOR_BAD(type,nr,size) _IOC(_IOC_READ,(type),(nr),sizeof(size))
#define PF_IUCV 32
#define CI_BSWAPC_BE64 CI_BSWAP_BE64
#define CI_TCP_LISTENQ_MAX 256
#define _POSIX_SPIN_LOCKS 200809L
#define CI_IP_CMSG_TIMESTAMP_ANY (CI_IP_CMSG_TIMESTAMP | CI_IP_CMSG_TIMESTAMPNS | CI_IP_CMSG_TIMESTAMPING )
#define __FLT128_MANT_DIG__ 113
#define EALREADY 114
#define CI_TP_LOG_EP 0x8000
#define INT_LEAST64_MAX (__INT64_C(9223372036854775807))
#define IOC_INOUT ((_IOC_WRITE|_IOC_READ) << _IOC_DIRSHIFT)
#define IPTOS_RT_MASK (IPTOS_TOS_MASK & ~3)
#define CI_TCP_OPT_NOP 0x1
#define SO_REUSEADDR 2
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
#define CI_SOCK_FLAG_REUSEPORT 0x00020000
#define AF_VSOCK PF_VSOCK
#define _SC_MB_LEN_MAX _SC_MB_LEN_MAX
#define _POSIX_SYNCHRONIZED_IO 200809L
#define NWS_FMT "%d:%d %s "
#define oo_p_dllink_for_each_safe(ni,link,n,list) for( link = oo_p_dllink_statep(ni, list.l->next), n = oo_p_dllink_statep(ni, link.l->next); link.l != list.l; link = n, n = oo_p_dllink_statep(ni, link.l->next) )
#define CITP_SCALABLE_MODE_RSS 0x1
#define PTHREAD_COND_INITIALIZER { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }
#define SEQ_SUB(s1,s2) ((ci_int32)((s1) - (s2)))
#define PRIxLEAST8 "x"
#define __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct
#define NI_ID(ni) ((ni)->state->stack_id)
#define ci_istack_pop(s) ((s)->istack_base[--(s)->istack_ptr])
#define _CS_XBS5_LP64_OFF64_LDFLAGS _CS_XBS5_LP64_OFF64_LDFLAGS
#define SA_ONSTACK 0x08000000
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define CI_IP_SOCK_STATS_ADD_RXBYTE(ts,b) do { __CI_SOCK_STATS_INC((ts), rx_pkt); __CI_SOCK_STATS_ADD((ts), rx_byte, (b)); }while(0)
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define SOL_X25 262
#define ipcache_is_ipv6(ipcache) 0
#define SO_BINDTODEVICE 25
#define __ATOMIC_SEQ_CST 5
#define O_APPEND 02000
#define __REDIRECT_FORTIFY __REDIRECT
#define OO_TS_FLAG_ACCEPTABLE (1 << 7)
#define __ASM_X86_BITSPERLONG_H 
#define CI_IP_TIMER_TCP_ZWIN 0x3
#define SCM_RIGHTS SCM_RIGHTS
#define _FORTIFY_SOURCE 3
#define CI_USER_PTR_GET(p) ((void *)((ci_uintptr_t)((p).ptr)))
#define PKT_CHK_NNL(ni,id) __ci_pkt_chk((ni), (id), CI_FALSE, __FILE__, __LINE__)
#define CI_IPX_DFLT_TOS_TCLASS(af) (IS_AF_INET6(af) ? CI_IPV6_DFLT_TCLASS : CI_IP_DFLT_TOS)
#define CI_UNLIKELY(t) __builtin_expect((t), 0)
#define __INT8_MAX__ 0x7f
#define EFAB_NIC_DP_INITIALIZER {.known_size = sizeof(struct efab_nic_design_parameters)}
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_ON_DELEGATED_SEND(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_on_delegated_send )
#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
#define CP_FWD_MULTIPATH_FLAG_LAST 1
#define OO_P_IS_NULL(p) ((p) < 0)
#define _SC_2_C_BIND _SC_2_C_BIND
#define __GLIBC_USE_IEC_60559_TYPES_EXT 0
#define CI_IP6ID_BLOCK_MASK 0x3ffffff
#define __ldiv_t_defined 1
#define _IOT_ifreq_short _IOT(_IOTS(char),IFNAMSIZ,_IOTS(short),1,0,0)
#define AF_TIPC PF_TIPC
#define CI_TCP_AUX_TYPE_BUCKET 1
#define __CI_TOOLS_SPINLOCK_H__ 
#define OO_IOC_CLUSTER_DUMP OO_IOC_W(CLUSTER_DUMP, oo_cluster_dump_t)
#define CI_UL_LOG_V 0x8
#define CI_FD_BAD ((ci_fd_t)(-1))
#define UIO_MAXIOV __IOV_MAX
#define __CI_COMPAT_H__ 
#define SO_DEBUG 1
#define _SC_PII_OSI_CLTS _SC_PII_OSI_CLTS
#define _DEFAULT_SOURCE 1
#define CI_ROUND_DOWN(i,align) ((i) & ~((typeof(i))(align)-1u))
#define _LINUX_POSIX_TYPES_H 
#define SO_MARK 36
#define ci_wait_writable(fd,timeout) ci_select_1((fd), CI_SELECT_WRITABLE, 0, (timeout))
#define CI_CFG_NIC_RESET_SUPPORT 1
#define IPV6_IPSEC_POLICY 34
#define CI_TCP_EXT_STATS_INC_TCP_HP_ACKS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_hp_acks )
#define CI_EPLOCK_NETIF_HAS_DEFERRED_PKTS 0x0004000000000000ULL
#define __USE_EXTERN_INLINES 1
#define PRIuLEAST16 "u"
#define SIOCDELRT 0x890C
#define CI_IP4_IS_UNFRAG(ip) (((ip)->ip_frag_off_be16 & (CI_IP4_FRAG_MORE | CI_IP4_OFFSET_MASK))==0)
#define IN6_IS_ADDR_MULTICAST(a) (((const uint8_t *) (a))[0] == 0xff)
#define __LOCK_ALIGNMENT 
#define tcp_rcv_nxt(ts) (TS_IPX_TCP(ts)->tcp_ack_be32)
#define _XOPEN_REALTIME_THREADS 1
#define ci_netif_is_contention(ni) (ef_eplock_flags(&(ni)->state->lock) & (CI_EPLOCK_FL_NEED_WAKE | CI_EPLOCK_NETIF_SOCKET_LIST))
#define __CI_COMPAT_X86_64_H__ 
#define ETIMEDOUT 110
#define OOF_IPCACHE_DETAIL "if=%d mtu=%d intf_i=%d vlan=%d encap=%x verinfo %x-%x"
#define OO_IOC_PIPE_ATTACH OO_IOC_RW(PIPE_ATTACH, oo_pipe_attach_t)
#define _UCONTEXT_H 1
#define CP_FWD_KEY_REQ_WAIT 0x40
#define BUG() ci_assert(0)
#define SCHED_OTHER 0
#define __SI_ERRNO_THEN_CODE 1
#define __PTHREAD_RWLOCK_INITIALIZER(__flags) 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, __flags
#define ENODATA 61
#define PRIuLEAST32 "u"
#define ETHERTYPE_IP 0x0800
#define _ci_verify(exp,file,line) do { (void)(exp); } while (0)
#define __END_DECLS 
#define __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_ON_TIMEOUT(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_on_timeout )
#define _POSIX_V6_LPBIG_OFFBIG -1
#define __CONCAT(x,y) x ## y
#define __CI_TOOLS_SLLIST_H__ 
#define CI_UL_LOG_LIB 0x2000
#define CI_UDP_STATE_FLAGS_FMT "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
#define IPV6_RECVERR_RFC4884 31
#define CI_TP_LOG_NR 0x400
#define CI_TP_LOG_NT 0x800
#define CI_TP_LOG_NV 0x1000
#define MAX_LINKS 32
#define __STDC_HOSTED__ 1
#define _SC_GETPW_R_SIZE_MAX _SC_GETPW_R_SIZE_MAX
#define _ALLOCA_H 1
#define CI_IP6_FLOWLABEL_MASK CI_BSWAP_BE32(0x000FFFFF)
#define ef_vi_noinline __attribute__ ((noinline))
#define udp_frag_off_be16(us) (UDP_IP_HDR((us))->ip_frag_off_be16)
#define CI_CFG_TCP_BURST_CONTROL_LIMIT 0
#define CI_SOCKET_ERROR -1
#define CI_SB_AFLAG_O_ASYNC_BIT 5u
#define __aligned_be64 __be64 __attribute__((aligned(8)))
#define CITP_NETIF_DTOR_DEFAULT CITP_NETIF_DTOR_ONLY_SHARED
#define __BITS_PER_LONG 64
#define ci_noinline static __attribute__((__noinline__))
#define __SLONG32_TYPE int
#define SOCK_SEQPACKET SOCK_SEQPACKET
#define ci_netif_pkt_release_rx(ni,pkt) ci_netif_pkt_release(ni, pkt)
#define IFDOC(env) if( strlen(env) )
#define ETH_P_FCOE 0x8906
#define _SC_2_PBS_MESSAGE _SC_2_PBS_MESSAGE
#define _SYS_SELECT_H 1
#define POSIX_MADV_WILLNEED 3
#define PRIuLEAST64 __PRI64_PREFIX "u"
#define IPV6_2292HOPLIMIT 8
#define PF_ALG 38
#define CI_EF_UDP_UL_RECV_M 0x00000007
#define CI_EF_UDP_UL_RECV_S 0
#define tcp_ipx_outgoing_opts_len(af,ts) ((ts)->outgoing_hdrs_len - CI_IPX_HDR_SIZE(af) - sizeof(ci_tcp_hdr))
#define CI_AUX_MEM_SIZE 128
#define _XOPEN_ENH_I18N 1
#define ci_mb() ci_x86_mb()
#define si_lower _sifields._sigfault._bounds._addr_bnd._lower
#define IPTIMER_WHEEL0_MASK (IPTIMER_WHEEL1_MASK + (CI_IPTIME_BUCKETMASK << (CI_IPTIME_BUCKETBITS*1)))
#define __jmp_buf_tag_defined 1
#define _CI_CFG_BITFIELD2 :2
#define ef_vi_transmit_pio(vi,offset,len,dma_id) (vi)->ops.transmit_pio((vi), (offset), (len), (dma_id))
#define SIGURG 23
#define _SC_TZNAME_MAX _SC_TZNAME_MAX
#define IP_IPSEC_POLICY 16
#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
#define IPPROTO_PIM IPPROTO_PIM
#define ifr_bandwidth ifr_ifru.ifru_ivalue
#define OO_MUST_CHECK_RET __attribute__((warn_unused_result))
#define __DBL_DIG__ 15
#define TIME_UTC 1
#define CI_MAGIC_OKAY(p,type) ((p)->magic == CI_MAGIC((p), (type)))
#define CITP_SCALABLE_FILTERS_MIN CITP_SCALABLE_FILTERS_ALL
#define ETH_P_PHONET 0x00F5
#define EINTR 4
#define AF_PACKET PF_PACKET
#define AF_INET6 PF_INET6
#define CI_TCP_EXT_STATS_INC_RCV_PRUNED(netif) __CI_TCP_EXT_STATS_INC( (netif), rcv_pruned )
#define SOL_NETLINK 270
#define ipcache_rport_be16(ipcache) (((ci_uint16*) (&(ipcache)->ipx.ip4 + 1))[1])
#define CITP_SCALABLE_MODE_ACTIVE 0x8
#define CI_TCP_EXT_STATS_INC_DELAYED_ACK_LOCKED(netif) __CI_TCP_EXT_STATS_INC( (netif), delayed_ack_locked )
#define static_assert _Static_assert
#define _IO_EOF_SEEN 0x0010
#define CI_TP_LOG_SC (CI_TP_LOG_TC|CI_TP_LOG_UC)
#define ETHER_TYPE_LEN 2
#define OO_PKT_ID(pkt) ((int) (pkt)->pp)
#define __SHRT_WIDTH__ 16
#define SOCK_DGRAM SOCK_DGRAM
#define CI_TCP_STATE_TXQ_ACTIVE 0x020
#define ETHERTYPE_TRAIL 0x1000
#define CI_TCP_EXT_STATS_INC_TIME_WAIT_KILLED(netif) __CI_TCP_EXT_STATS_INC( (netif), time_wait_killed )
#define __f64x(x) x ##f64x
#define SO_LINGER 13
#define CI_CFG_UDP_RCVBUF_DEFAULT 212992
#define OO_HAS_POLL_IN_KERNEL 
#define CI_TP_LOG_TC 0x10
#define __CI_TOOLS_BUFRANGE_H__ 
#define CI_TP_LOG_TL 0x80
#define CI_TP_LOG_TO 0x8000000
#define TMP_MAX 238328
#define si_status _sifields._sigchld.si_status
#define CI_TP_LOG_TT 0x40
#define CI_TP_LOG_TV 0x100
#define PF_UNIX PF_LOCAL
#define PTHREAD_CANCEL_ASYNCHRONOUS PTHREAD_CANCEL_ASYNCHRONOUS
#define CI_NETIF_NIC_ERROR_REMAP 0x00000001u
#define LOG_SIG(x) LOG_FL(CI_TP_LOG_SIG, x)
#define OO_MEM_PRESSURE_LOW 0x1
#define ci_vsnprintf vsnprintf
#define OO_P_NOT_NULL(p) ((p) >= 0)
#define CI_TP_LOG_UC 0x200000
#define ETH_P_WCCP 0x883E
#define POSIX_MADV_DONTNEED 4
#define CI_TP_LOG_UT 0x800000
#define ILL_ILLADR ILL_ILLADR
#define __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
#define AF_UNSPEC PF_UNSPEC
#define ci_fifo2_rd_adv(f,n) do{ (f)->fifo_rd_i += (n); }while(0)
#define OO_P_INVALID -2
#define _SC_THREAD_ROBUST_PRIO_PROTECT _SC_THREAD_ROBUST_PRIO_PROTECT
#define _PC_NO_TRUNC _PC_NO_TRUNC
#define _SS_SIZE 128
#define TIOCMGET 0x5415
#define CI_TCP_ESTABLISHED (0x3000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SYNCHRONISED | CI_TCP_STATE_ACCEPT_DATA | CI_TCP_STATE_TXQ_ACTIVE )
#define NI_NOFQDN 4
#define CI_TCP_CONG_RTO 0x1
#define CI_IP_SOCK_STATS_INC_ZWIN(ts) __CI_SOCK_STATS_INC( (ts), rx_zwin )
#define CP_FWD_MULTIPATH_WEIGHT_ARG(w_) (w_)->val, (w_)->end, ((w_)->flag & CP_FWD_MULTIPATH_FLAG_LAST) ? " LAST" : ""
#define __glibc_safe_or_unknown_len(__l,__s,__osz) ((__builtin_constant_p (__osz) && (__osz) == (__SIZE_TYPE__) -1) || (__glibc_unsigned_or_positive (__l) && __builtin_constant_p (__glibc_safe_len_cond ((__SIZE_TYPE__) (__l), (__s), (__osz))) && __glibc_safe_len_cond ((__SIZE_TYPE__) (__l), (__s), (__osz))))
#define CI_TRACE_HEX(integer) 
#define EFHW_MAX_NR_DEVS 64
#define PF_CAIF 37
#define CI_TCP_FLAGS_FMT "%s%s%s%s%s%s%s%s"
#define OO_STACK_ID_INVALID ((ci_uint32)(-1))
#define TIOCGPTN _IOR('T', 0x30, unsigned int)
#define CI_PKT_RX_POISON 0xFFA0C09Bu
#define PF_ASH 18
#define ci_af2ethertype(af) CI_ETHERTYPE_IP
#define CI_READ_ONCE(x) OO_ACCESS_ONCE((x))
#define TS_QUEUE_RX_SET(ts,name) ((ts)->recv_off = CI_MEMBER_OFFSET(ci_tcp_state, name))
#define CI_CFG_EP_BUF_SIZE 1024
#define SIOCSIFFLAGS 0x8914
#define CI_TCP_EXT_STATS_INC_LISTEN_NO_PKTS(netif) __CI_TCP_EXT_STATS_INC( (netif), listen_no_pkts )
#define MADV_REMOVE 9
#define __WCOREDUMP(status) ((status) & __WCOREFLAG)
#define _WCHAR_T_ 
#define EAI_OVERFLOW -12
#define CI_PRIo32 PRIo32
#define CI_MAX_SAVE_CONTEXT_LEN 1024
#define CI_EPLOCK_NETIF_NEED_WAKE 0x8000000000000000ULL
#define OO_STACK_FOR_EACH_INTF_I(_ni,_intf_i) for( (_intf_i) = 0; (_intf_i) < oo_stack_intf_max(_ni); ++(_intf_i) )
#define EPERM 1
#define OO_SP_FMT(p) ((int) (p))
#define _STDDEF_H 
#define EAI_FAMILY -6
#define EF_EVENT_TX_WITH_TIMESTAMP_SYNC_FLAGS(e) ((e).tx_timestamp.ts_flags & EF_EVENT_TX_WITH_TIMESTAMP_SYNC_MASK)
#define INADDR_ALLRTRS_GROUP ((in_addr_t) 0xe0000002)
#define TIOCSLCKTRMIOS 0x5457
#define IPV6_RECVORIGDSTADDR IPV6_ORIGDSTADDR
#define CI_ZERO(p) memset((void*) (p), 0, sizeof(*(p)))
#define CITP_CLUSTER_RESTART_TERMINATE_ORPHANS 1
#define CI_MAX_ERRNO 1024
#define ci_lock_trylock_dbg(l,fl,ln) ci_lock_trylock_i(l)
#define OO_SIGHANGLER_IGN_BIT 0x8
#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
#define __SIZEOF_PTRDIFF_T__ 8
#define AF_BRIDGE PF_BRIDGE
#define SCNoLEAST16 "ho"
#define ci_fifo2_rd_next(f) do{ ++(f)->fifo_rd_i; }while(0)
#define CI_UL_LOG_VSC 0x200
#define _BITS_FLOATN_H 
#define SOL_XDP 283
#define __unix__ 1
#define FL_UDP 0x80
#define IPV6_RECVPATHMTU 60
#define __SIZEOF_LONG__ 8
#define _IONBF 2
#define IP_LOCAL_PORT_RANGE 51
#define __BFLT16_DIG__ 2
#define _SYS_UCONTEXT_H 1
#define SOCK_RCVBUF_LOCK 2
#define IPPROTO_BEETPH IPPROTO_BEETPH
#define ci_strtok_local(_ptr) char *_ptr
#define IS_VALID_SOCK_P(ni,sockp) IS_VALID_SOCK_ID((ni), OO_SP_TO_INT(sockp))
#define CI_NETIF_FLAG_USE_ALIEN_LADDRS 0x200
#define ci_fifo2_num(f) ((f)->fifo_wr_i - (f)->fifo_rd_i)
#define EF_LOG_CONN_DROP 2
#define ci_netif_lock_id(ni,id) ef_eplock_lock(ni)
#define NTFS_PRI_ARGS(n,t,fd) NI_ID(n), S_FMT(t), FD_PRI_ARGS(fd), state_str((t))
#define CI_PRIo64 PRIo64
#define CI_TCP_RST_COOLDOWN_MAP_SIZE (4)
#define CI_UDP_STATS_INC_IN_DGRAMS(netif) __CI_UDP_STATS_INC( (netif), udp_in_dgrams )
#define CI_SB_AFLAG_TCP_IN_ACCEPTQ 0x2
#define CI_UDPF_MCAST_FILTER 0x00010000
#define CI_IP_STATS_TYPE ci_uint32
#define MAP_PRIVATE 0x02
#define ETH_P_IPX 0x8137
#define __ONLOAD_DRV_DUMP_TO_USER_H__ 
#define SCNoLEAST32 "o"
#define CITP_TCP_FASTSTART(x) do{ x; }while(0)
#define IP_MULTICAST_LOOP 34
#define NI_NAMEREQD 8
#define MADV_PAGEOUT 21
#define si_syscall _sifields._sigsys._syscall
#define CI_UDPF_MCAST_LOOP 0x00000002
#define CI_SOCK_FLAG_PORT_BOUND 0x00000200
#define __CI_APP_TESTAPP_H__ 
#define AF_CAN PF_CAN
#define CI_NETIF_FLAGS_DTOR_PROTECTED 0x20
#define CI_DEADBEEF CI_BSWAPC_BE32(0xDEADBEEF)
#define PRIoFAST32 __PRIPTR_PREFIX "o"
#define O_WRONLY 01
#define OO_VI_FLAGS_TX_CTPIO_ONLY 0x40
#define __gnu_linux__ 1
#define O_EXCL 0200
#define OO_P_INIT(p,ni,off) ((p) = (off))
#define SOL_IP 0
#define LOG_SC(x) LOG_FL(CI_TP_LOG_SC, x)
#define IPPROTO_PUP IPPROTO_PUP
#define ETH_P_PPP_DISC 0x8863
#define __FLT_MAX_EXP__ 128
#define SIOCSIFLINK 0x8911
#define tcp_snd_nxt(ts) ((ts)->snd_nxt)
#define SO_RXQ_OVFL 40
#define SCNdLEAST32 "d"
#define ifr_qlen ifr_ifru.ifru_ivalue
#define ETH_P_DNA_DL 0x6001
#define CITP_SCALABLE_LISTEN_ACCELERATED_ONLY 1
#define ci_fifo2_get(f,pv) do{ *(pv) = ci_fifo2_peek(f); ci_fifo2_rd_next(f); }while(0)
#define __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
#define CI_CFG_UINT 3
#define IN6ADDR_LOOPBACK_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }
#define TIOCGPGRP 0x540F
#define CI_CFG_TAIL_DROP_PROBE 1
#define EBUSY 16
#define ENOSR 63
#define PRIoFAST64 __PRI64_PREFIX "o"
#define __USE_ISOC11 1
#define S_ISDIR(mode) __S_ISTYPE((mode), __S_IFDIR)
#define MADV_NORMAL 0
#define __HAVE_FLOAT64X 1
#define _SC_THREAD_PRIO_INHERIT _SC_THREAD_PRIO_INHERIT
#define CI_SOCK_ERR_INIT() 
#define CI_FIFO_M(f,x) ((x) % (f)->fifo_size)
#define __FLT16_MIN_EXP__ (-13)
#define CI_SB_FLAGS_PRI_ARG(sb) ((sb)->sb_flags & CI_SB_FLAG_WAKE_TX ? "WK_TX ":""), ((sb)->sb_flags & CI_SB_FLAG_WAKE_RX ? "WK_RX ":""), ((sb)->sb_flags & CI_SB_FLAG_TCP_POST_POLL ? "TCP_PP ":""), ((sb)->sb_aflags & CI_SB_AFLAG_ORPHAN ? "ORPH ":""), ((sb)->sb_aflags & CI_SB_AFLAG_TCP_IN_ACCEPTQ ? "ACCEPTQ ":""), ((sb)->sb_aflags & CI_SB_AFLAG_DEFERRED ? "DEFERRED ":""), ((sb)->sb_aflags & CI_SB_AFLAG_AVOID_INTERRUPTS ? "AVOID_INT ":""), ((sb)->sb_aflags & CI_SB_AFLAG_O_ASYNC ? "O_ASYNC ":""), ((sb)->sb_aflags & CI_SB_AFLAG_O_NONBLOCK ? "O_NONBLOCK ":""), ((sb)->sb_aflags & CI_SB_AFLAG_O_NDELAY ? "O_NDELAY ":""), ((sb)->sb_aflags & CI_SB_AFLAG_O_APPEND ? "O_APPEND ":""), ((sb)->sb_aflags & CI_SB_AFLAG_O_CLOEXEC ? "O_CLOEXEC ":""), ((sb)->sb_aflags & CI_SB_AFLAG_IN_CACHE ? "CACHE ":""), ((sb)->sb_aflags & CI_SB_AFLAG_IN_PASSIVE_CACHE ? "PASSIVE_CACHE ":""), ((sb)->sb_aflags & CI_SB_AFLAG_IN_CACHE_NO_FD ? "CACHE_NO_FD ":""), ((sb)->sb_aflags & CI_SB_AFLAG_OS_BACKED ? "OS_BACKED ":""), ((sb)->sb_aflags & CI_SB_AFLAG_O_NONBLOCK_UNSYNCED ? "NONB_UNSYNCED ":"")
#define PKT_TCP_RX_BUF_ASSERT_VALID(ni,pkt) OO_OFFBUF_ASSERT_VALID(&(pkt)->buf, PKT_START(pkt), (pkt) + CI_CFG_PKT_BUF_SIZE)
#define ifr_hwaddr ifr_ifru.ifru_hwaddr
#define _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
#define _BITS_STRING_FORTIFIED_H 1
#define __FLT64_MANT_DIG__ 53
#define IPPROTO_IDP IPPROTO_IDP
#define __TIME_TYPE__ ci_iptime_t
#define _SC_PII_INTERNET_DGRAM _SC_PII_INTERNET_DGRAM
#define CI_UNIX_FORK_NETIF_CHILD 1
#define PKT_DBG_FMT "[id=%d flgs=%x]"
#define CI_UDPF_NO_MCAST_FILTER 0x00080000
#define __SOCKADDR_ARG struct sockaddr *__restrict
#define CI_EVMASK_FMT "%s%s%s%s%s%s%s"
#define SP_TO_UDP(ni,sp) SP_TO_foo((ni), (sp), ci_udp_state)
#define SCNdLEAST64 __PRI64_PREFIX "d"
#define IPTIMER_WHEEL1_MASK (IPTIMER_WHEEL2_MASK + (CI_IPTIME_BUCKETMASK << (CI_IPTIME_BUCKETBITS*2)))
#define EFAB_NIC_DP_DEFAULT_timestamp_subnano_bits 2
#define OO_PP_FMT(pp) OO_PP_ID(pp)
#define __FLT64X_MANT_DIG__ 64
#define CI_PFD_AFLAG_READER_SHIFT 0
#define IPPROTO_IPIP IPPROTO_IPIP
#define OOF_IPXPORT OOF_IPX":"OOF_PORT
#define CI_UL_LOG_VVTC 0x40000000
#define _T_PTRDIFF 
#define CI_DBG_NETIF_INFO_GET_NEXT_NETIF 1
#define CI_PKT_FLAG_XDP_DROP 0x8000
#define OO_MMAP_TYPE(offset) (((offset) >> OO_MMAP_TYPE_SHIFT) & OO_MMAP_TYPE_MASK)
#define sched_priority sched_priority
#define OO_AF_FAMILY2SPACE(af) (IS_AF_INET6(af) ? AF_SPACE_FLAG_IP6 : AF_SPACE_FLAG_IP4)
#define N_STRIP 4
#define CI_ZC_HANDLE_MAGIC_MASK 0xff00000000000000ull
#define __pie__ 2
#define unsafe_memmove(dst,src,bytes,justification) memmove(dst, src, bytes)
#define IPV6_2292PKTOPTIONS 6
#define IN6_IS_ADDR_LINKLOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfe800000); }))
#define ci_istack_is_full(s) ((s)->istack_ptr == (s)->istack_size)
#define _LFS64_STDIO 1
#define OOFA_PORT(port) ((int) CI_BSWAP_BE16(port))
#define L_ctermid 9
#define _IOC_TYPEMASK ((1 << _IOC_TYPEBITS)-1)
#define pkt_sets_max(ni) (ni)->packets->sets_max
#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
#define ci_fifo2_pokep(f) ((f)->fifo + ci_fifo2_wr_i(f))
#define CI_SB_FLAGS_FMT "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)
#define __FLT_HAS_DENORM__ 1
#define __SIZEOF_LONG_DOUBLE__ 16
#define CI_PIO_BUDDY_MAX_ORDER (CI_PIO_BUF_ORDER - CI_CFG_MIN_PIO_BLOCK_ORDER)
#define NU_FMT "%d:%d "
#define __aligned_u64 __u64 __attribute__((aligned(8)))
#define CI_PMTU_STOP_TIMER ((ci_iptime_t)0)
#define CI_CFG_FN 6
#define OO_FDFLAG_STACK 0x01
#define UDP_IP_HDR(us) (&(us)->s.pkt.ipx.ip4)
#define _SC_ARG_MAX _SC_ARG_MAX
#define EF_VI_NIC_PAGE_SHIFT 12
#define __timeval_defined 1
#define INT_FAST16_MIN (-9223372036854775807L-1)
#define N_6PACK 7
#define ci_tcp_can_use_fast_path(ts) ((~ts->s.b.state & CI_TCP_STATE_SLOW_PATH) && ci_ip_queue_is_empty(&(ts)->rob) && tcp_rx_urg_fast_path(ts) && tcp_rcv_wnd_advertised(ts) )
#define CI_CFG_TCP_SOCK_STATS 0
#define ETHER_ADDR_LEN ETH_ALEN
#define WITH_CI_CFG_IPV6(x) 
#define ci_ss_assert2(ni,e,x,y) ci_ss_assertfl2((ni), e, x, y, __FILE__, __LINE__)
#define __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
#define ELNRNG 48
#define EAI_FAIL -4
#define CI_TCP_STATS_INC_CURR_ESTAB(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_curr_estab)
#define AF_ROUTE PF_ROUTE
#define ETHER_IS_VALID_LEN(foo) ((foo) >= ETHER_MIN_LEN && (foo) <= ETHER_MAX_LEN)
#define __CI_DEBUG_OP_STACK_TIME__ (18)
#define CI_TCP_STATS_DEC_OUT_SEGS(netif) __CI_TCP_COUNT_STATS_DEC( (netif), tcp_out_segs)
#define CI_DEBUG_ZERO_ARRAY(p,howmany) do{}while(0)
#define ETH_P_SCA 0x6007
#define __INTPTR_TYPE__ long int
#define LOCK_SH 1
#define __ONCE_ALIGNMENT 
#define CI_PTR_ALIGN_BACK(p,align) ((char*) CI_ALIGN_BACK(((ci_ptr_arith_t)(p)), ((ci_ptr_arith_t)(align))))
#define FNT_FMT "%s: "NT_FMT
#define __GLIBC_USE_DEPRECATED_SCANF 0
#define __SI_ALIGNMENT 
#define __NI_STRUCT__ struct ci_netif_s
#define __BFLT16_IS_IEC_60559__ 0
#define CI_DO_MAGIC_CHECKS 1
#define ci_ipcache_update_flowlabel(ni,s) 
#define CI_ALLOC_TABLE_BULKS 1024
#define _POSIX_CHOWN_RESTRICTED 0
#define __USE_ISOC95 1
#define _TIME_H 1
#define __USE_ISOC99 1
#define OO_IOC_TCP_BIND_OS_SOCK OO_IOC_RW(TCP_BIND_OS_SOCK, oo_tcp_bind_os_sock_t)
#define O_FSYNC O_SYNC
#define tcp_laddr_be32(ts) sock_laddr_be32(&(ts)->s)
#define MSG_DONTROUTE MSG_DONTROUTE
#define EF_EVENT_RX_DISCARD_RQ_ID(e) ((e).rx_discard.rq_id)
#define CI_TCP_STATE_AUXBUF (0xd000)
#define __FLT16_MAX_10_EXP__ 4
#define __GNUC_STDC_INLINE__ 1
#define tcp_snd_wnd(ts) SEQ_SUB((ts)->snd_max, (ts)->snd_una)
#define _SC_XOPEN_REALTIME_THREADS _SC_XOPEN_REALTIME_THREADS
#define OO_SCP_IP6_PMTU_PROBE 0x20
#define ____sigval_t_defined 
#define CI_CPU_OLD (-1)
#define FPE_FLTDIV FPE_FLTDIV
#define OO_TS_FLAG_CLOCK_SET EF_VI_SYNC_FLAG_CLOCK_SET
#define ci_lock_lock(l) ci_lock_lock_dbg(l, __FILE__, __LINE__)
#define __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
#define CI_AUTO_FLOWLABELS_DEFAULT 1
#define _BITS_STDINT_UINTN_H 1
#define EF_EVENT_RX_RQ_ID(e) ((e).rx.rq_id)
#define _CS_LFS64_CFLAGS _CS_LFS64_CFLAGS
#define tcp_ipx_laddr(ts) sock_ipx_laddr(&(ts)->s)
#define MAP_ANON MAP_ANONYMOUS
#define CI_EPLOCK_CALLBACK_FLAGS 0xffffffff8fffffffULL
#define CHECK_TEP_NNL(ep) 
#define CI_CFG_FDTABLE_CHECKS 0
#define NI_NUMERICHOST 1
#define __DBL_HAS_INFINITY__ 1
#define OO_IOC_CHECK_VERSION OO_IOC_W(CHECK_VERSION, oo_version_check_t)
#define __SI_CLOCK_T __clock_t
#define _PC_SYMLINK_MAX _PC_SYMLINK_MAX
#define OO_CMSG_FLAGS_PRI_ARG(v) ((v) & CI_IP_CMSG_PKTINFO ? "Pktinfo":""), ((v) & CI_IP_CMSG_TTL ? "Ttl":""), ((v) & CI_IP_CMSG_TOS ? "Tos":""), ((v) & CI_IP_CMSG_RECVOPTS ? "Recvopts":""), ((v) & CI_IP_CMSG_RETOPTS ? "Retopts":""), ((v) & CI_IP_CMSG_TIMESTAMP ? "Timestamp":""), ((v) & CI_IP_CMSG_TIMESTAMPNS ? "Timestampns":""), ((v) & CI_IP_CMSG_TIMESTAMPING ? "Timestamping":"")
#define CI_IPV4_STATS_COUNT_LEN (sizeof(ci_ip_stats_count)/sizeof( CI_IP_STATS_TYPE))
#define IPV6_PMTUDISC_OMIT 5
#define CI_IOVEC_LEN(i) ((i)->iov_len)
#define _CS_LFS_LDFLAGS _CS_LFS_LDFLAGS
#define TIOCSCTTY 0x540E
#define PF_NETROM 6
#define CI_SB_AFLAG_O_NONBLOCK_UNSYNCED_BIT 17u
#define CI_TCPT_FLAG_TSO 0x01
#define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))
#define stdin stdin
#define PRIi16 "i"
#define ETH_P_PUPAT 0x0201
#define SC_TO_EPS(ni,s) ID_TO_EPS(ni,SC_ID(s))
#define CICP_LLAP_TYPE_USES_HASH (CICP_LLAP_TYPE_XMIT_HASH_LAYER34 | CICP_LLAP_TYPE_XMIT_HASH_LAYER2 | CICP_LLAP_TYPE_XMIT_HASH_LAYER23 )
#define CI_LOG_MAX_MSG_LENGTH (CI_LOG_MAX_LINE-50)
#define __HAVE_SPECULATION_SAFE_VALUE 1
#define CI_CPU_OOS 0
#define CI_TCP_FLAG_MASK 0x3f
#define ipx_hdr_protocol(af,ipx) ((ipx)->ip4.ip_protocol)
#define _SC_CLK_TCK _SC_CLK_TCK
#define __DEC32_MIN_EXP__ (-94)
#define ETH_P_DNA_RT 0x6003
#define SCHED_FIFO 1
#define CI_TCP_EXT_STATS_INC_OFO_PRUNED(netif) __CI_TCP_EXT_STATS_INC( (netif), ofo_pruned )
#define _SC_EQUIV_CLASS_MAX _SC_EQUIV_CLASS_MAX
#define IPV6_ORIGDSTADDR 74
#define IPV6_RXHOPOPTS IPV6_HOPOPTS
#define ci_x86_lfence() __asm__ __volatile__ ("lfence")
#define _POSIX_THREAD_SPORADIC_SERVER -1
#define OO_PP_EQ(ppa,ppb) ((ppa) == (ppb))
#define ci_fail(x) do{ ci_log("FAIL at %s:%d", __FILE__, __LINE__); __ci_fail x; }while(0)
#define _CS_POSIX_V6_LP64_OFF64_CFLAGS _CS_POSIX_V6_LP64_OFF64_CFLAGS
#define CI_TCP_PAWS_FAILED 0x80000000
#define IPPROTO_IPV6 IPPROTO_IPV6
#define CI_TRY_RET(exp) do{ int _trc; _trc=(exp); if( CI_UNLIKELY(_trc < 0) ) { ci_log("%s returned %d at %s:%d", #exp, _trc, __FILE__, __LINE__); return _trc; } }while(0)
#define NLM_F_DUMP (NLM_F_ROOT|NLM_F_MATCH)
#define PTHREAD_CANCEL_ENABLE PTHREAD_CANCEL_ENABLE
#define be32toh(x) __bswap_32 (x)
#define MS_SYNC 4
#define CI_PTR_SIZE 8
#define IN6_IS_ADDR_UNSPECIFIED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == 0; }))
#define IPPROTO_SCTP IPPROTO_SCTP
#define CI_PFD_AFLAG_READER_MASK 0x07
#define SO_RCVMARK 75
#define _PC_REC_MAX_XFER_SIZE _PC_REC_MAX_XFER_SIZE
#define CI_CFG_UDP_SNDBUF_MAX 212992
#define __FLT32X_HAS_DENORM__ 1
#define CICPOS_RETRRC_RC(retrrc) ((retrrc) & 0x00FF)
#define __INT_FAST16_TYPE__ long int
#define SOCK_TXREHASH_DISABLED 0
#define __ONLOAD_ATOMICS_H__ 
#define OO_IOC_CP_WAIT_FOR_SERVER OO_IOC_W(CP_WAIT_FOR_SERVER, ci_uint32)
#define KERN_ERR "ERR>"
#define _SIZE_T_DEFINED 
#define CI_SOCK_AFLAG_NEED_SHUT_WR_BIT 2u
#define SO_SECURITY_ENCRYPTION_NETWORK 24
#define CI_TCP_SACKED 0x20000000
#define __MMX_WITH_SSE__ 1
#define _WCHAR_T_DEFINED_ 
#define CI_SOCK_ERR_ORIGIN_LOCAL 1
#define _BITUL(x) (_UL(1) << (x))
#define ECHILD 10
#define SCNdFAST8 "hhd"
#define _SC_V6_ILP32_OFF32 _SC_V6_ILP32_OFF32
#define PRIi64 __PRI64_PREFIX "i"
#define _POSIX_REGEXP 1
#define __FLT64_HAS_DENORM__ 1
#define ID_TO_TCP_LISTEN(ni,id) ID_TO_foo((ni), (id), TCP_LISTEN)
#define CI_NETIF_FLAG_DO_DROP_SHARED_LOCAL_PORTS CI_NETIF_FLAG_DO_ALLOCATE_SCALABLE_FILTERS_RSS
#define CI_IP4_IS_FIRST_FRAG(ip) (((ip)->ip_frag_off_be16 & (CI_IP4_FRAG_MORE | CI_IP4_OFFSET_MASK))==CI_IP4_FRAG_MORE)
#define _SC_ASYNCHRONOUS_IO _SC_ASYNCHRONOUS_IO
#define CI_IS_ADDR_SH_IP6(addr) (memcmp((addr).pad, ip4_addr_sh_any.pad, sizeof((addr).pad)))
#define __stub_setlogin 
#define _POSIX_SPORADIC_SERVER -1
#define __FLT128_HAS_INFINITY__ 1
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define CI_IP_TIMER_TCP_DELACK 0x2
#define TCP_URG_FMT "%s: %s%s%s[%u] "
#define ci_lock_lock_i(l) pthread_mutex_lock(l)
#define CI_TCP_EXT_STATS_INC_TCP_SACK_RENEGING(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_sack_reneging )
#define __O_DSYNC 010000
#define _IOC_NRSHIFT 0
#define ef_eventq_check_event_phase_bit(vi,look_ahead) ef_eventq_has_many_events((vi), (look_ahead))
#define _POSIX_MEMORY_PROTECTION 200809L
#define EFRM_WARN_LIMITED(fmt,...) EFRM_LIMITED(EFRM_WARN(fmt, __VA_ARGS__))
#define true 1
#define CI_TP_LOG_UV 0x1000000
#define SA_RESETHAND 0x80000000
#define TX_PKT_SPORT_BE16(pkt) (((ci_uint16*) oo_tx_ip_data(pkt))[0])
#define CI_DV __attribute__((visibility("default")))
#define CI_IDLLIST_LINK_ASSERT_VALID(ctx,l) do{ ci_assert_equal(CI_ILL_PTR((ctx), CI_ILL_ADDR((ctx), (l))), (l)); ci_assert(CI_ILL_ADDR_EQ(CI_ILL_PTR((ctx), (l)->prev)->next, CI_ILL_ADDR((ctx), (l)))); ci_assert(CI_ILL_ADDR_EQ(CI_ILL_PTR((ctx), (l)->next)->prev, CI_ILL_ADDR((ctx), (l)))); }while(0)
#define CICP_FWD_FLAG_MTU_EXPIRES 0x8
#define _SC_RAW_SOCKETS _SC_RAW_SOCKETS
#define __S32_TYPE int
#define IP_PKTOPTIONS 9
#define _POSIX2_LOCALEDEF __POSIX2_THIS_VERSION
#define TIOCPKT_STOP 4
#define CI_IP_SOCK_STATS_INC_TXSLOW(ts) __CI_SOCK_STATS_INC( (ts), tx_slowpath )
#define ci_check(exp) _ci_check(exp, __FILE__, __LINE__)
#define TCP_SND_FMT "snd=%08x-%08x-%08x sq=%d if=%d w=%d"
#define IPV6_ROUTER_ALERT_ISOLATE 30
#define __FLT64_MIN_10_EXP__ (-307)
#define SOL_SOCKET 1
#define CI_CFG_FLAG 1
#define CITP_TCP_LOOPBACK_TO_CONNSTACK 2
#define ID_TO_WAITABLE(ni,id) ID_TO_foo((ni), (id), WAITABLE)
#define CI_TCP_STATS_INC_ACTIVE_OPENS(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_active_opens)
#define MAP_LOCKED 0x02000
#define ci_ip_cache_init_common(ipcache,af) do { ci_ip_cache_invalidate(ipcache); (ipcache)->status = retrrc_noroute; (ipcache)->intf_i = -1; (ipcache)->hwport = CI_HWPORT_ID_BAD; (ipcache)->ether_type = ci_af2ethertype(af); (ipcache)->flags = 0; (ipcache)->nexthop = addr_any; ipcache_ttl(ipcache) = CI_IPX_DFLT_TTL_HOPLIMIT(af); } while (0)
#define __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
#define OO_VI_FLAGS_RX_HW_TS_EN 0x2
#define ASSERT_VALID_PKT_NNL(ni,pkt) 
#define IPTIMER_STATE(ni) (&(ni)->state->iptimer_state)
#define _CS_POSIX_V7_LP64_OFF64_LDFLAGS _CS_POSIX_V7_LP64_OFF64_LDFLAGS
#define __DEC128_EPSILON__ 1E-33DL
#define __CI_DEBUG_OP_NETIF_DUMP_EXTRA__ (9)
#define _POSIX_TIMERS 200809L
#define _BITS_PTHREADTYPES_ARCH_H 1
#define CI_TCP_STATE_SLOW_PATH 0x002
#define CINTR CTRL('c')
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define IPV6_ADDRFORM 1
#define EREMOTE 66
#define ci_strtok(_s,_delim,_ptrptr) strtok_r(_s, _delim, _ptrptr)
#define PF_ISDN 34
#define ETH_P_DNA_RC 0x6002
#define NT_FMT "%d:%d "
#define TFS_FMT "%d/"FD_FMT" %s "
#define _SC_STREAM_MAX _SC_STREAM_MAX
#define __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
#define CI_IPID_BLOCK_LENGTH 1024
#define CEOF CTRL('d')
#define __amd64 1
#define CEOL '\0'
#define CEOT CEOF
#define __glibc_unsigned_or_positive(__l) ((__typeof (__l)) 0 < (__typeof (__l)) -1 || (__builtin_constant_p (__l) && (__l) > 0))
#define CI_CFG_UDP_SNDBUF_MIN CI_SOCK_MIN_SNDBUF
#define CI_TRACE_ARP(arp_pkt) 
#define BUS_OBJERR BUS_OBJERR
#define CI_CFG_PKTS_AS_HUGE_PAGES 1
#define MADV_KEEPONFORK 19
#define OO_MMAP_TYPE_DSHM 2
#define TIOCM_DSR 0x100
#define IPPROTO_RSVP IPPROTO_RSVP
#define SEGV_MAPERR SEGV_MAPERR
#define __HAVE_FLOAT32 1
#define ipcache_raddr(ipcache) CI_ADDR_FROM_IP4((ipcache)->ipx.ip4.ip_daddr_be32)
#define CI_SOCK_FLAG_V6ONLY 0x01000000
#define CI_IP_SOCK_STATS_INC_SYNNONACK(ts) __CI_SOCK_STATS_INC( (ts), rx_synnonack )
#define _PTRDIFF_T_DECLARED 
#define CI_ADDR_SH_FROM_IP6(ip6_addr) ({ ci_addr_sh_t a = {}; memcpy(a.ip6, (ip6_addr), sizeof(ci_ip6_addr_t)); a; })
#define TIOCM_DTR 0x002
#define _BITS_STDIO_H 1
#define _BITS_ATOMIC_WIDE_COUNTER_H 
#define IP_PMTUDISC_PROBE 3
#define __glibc_objsize(__o) __builtin_dynamic_object_size (__o, 1)
#define CI_TCP_EXT_STATS_INC_TCP_LOSS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_loss )
#define ef_vi_transmit(vi,base,len,dma_id) (vi)->ops.transmit((vi), (base), (len), (dma_id))
#define CI_LOG_CPU 0x10
#define SEGV_BNDERR SEGV_BNDERR
#define FNS_FMT "%s: "NS_FMT
#define ETH_P_LAT 0x6004
#define NUM_ITEMS ( sizeof items / sizeof items[0])
#define CI_CFG_UINT64 9
#define CI_EPLOCK_NETIF_NEED_PRIME 0x1000000000000000ULL
#define CI_IP_DFLT_TTL 64
#define OO_SCP_TPROXY 0x8
#define NLM_F_DUMP_INTR 0x10
#define CI_SOCK_TYPE_ARGS(type) type_str(type), type & SOCK_CLOEXEC ? " | SOCK_CLOEXEC" : "", type & SOCK_NONBLOCK ? " | SOCK_NONBLOCK" : ""
#define __FLT32_HAS_QUIET_NAN__ 1
#define MCAST_EXCLUDE 0
#define __INO_T_TYPE __SYSCALL_ULONG_TYPE
#define IFF_POINTOPOINT IFF_POINTOPOINT
#define CRPRNT CREPRINT
#define IPPROTO_AH IPPROTO_AH
#define __SIZEOF_SIZE_T__ 8
#define CI_IP6_PRINTF_FORMAT "%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x:%02x%02x"
#define __WEXITSTATUS(status) (((status) & 0xff00) >> 8)
#define _WCHAR_T 
#define O_NONBLOCK 04000
#define SCNiPTR __PRIPTR_PREFIX "i"
#define __HAVE_FLOAT64 1
#define oo_ipx_data(af,pkt) ipx_hdr_data(af, oo_ipx_hdr(pkt))
#define _SIZE_T 
#define PTHREAD_MUTEX_INITIALIZER { { __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_TIMED_NP) } }
#define __DEC128_MANT_DIG__ 34
#define EF_EVENT_TX_WITH_TIMESTAMP_NSEC(e) ((e).tx_timestamp.ts_nsec)
#define OO_DEFERRED_FLAG_IS_IPV6 1
#define SIG_BLOCK 0
#define CI_SB_AFLAG_CACHE_PRESERVE (CI_SB_AFLAG_IN_CACHE | CI_SB_AFLAG_IN_PASSIVE_CACHE | CI_SB_AFLAG_IN_CACHE_NO_FD | CI_SB_AFLAG_O_NONBLOCK | CI_SB_AFLAG_O_NONBLOCK_UNSYNCED | CI_SB_AFLAG_O_CLOEXEC)
#define __FD_ZERO(s) do { unsigned int __i; fd_set *__arr = (s); for (__i = 0; __i < sizeof (fd_set) / sizeof (__fd_mask); ++__i) __FDS_BITS (__arr)[__i] = 0; } while (0)
#define EF_VI_TX_TS_FRAC_NS_BITS 4
#define EF_EVENT_RX_NO_DESC_TRUNC_Q_ID(e) ((e).rx_no_desc_trunc.q_id)
#define CI_TCP_PAYLEN(ip,tcp) (CI_BSWAP_BE16((ip)->ip_tot_len_be16) - CI_IP4_IHL(ip) - CI_TCP_HDR_LEN(tcp))
#define CI_CFG_EPOLL_MAX_STACKS 16
#define CI_TCP_FLAG_ACK 0x10
#define IPPROTO_ICMP IPPROTO_ICMP
#define __FLT64X_MIN_EXP__ (-16381)
#define INTMAX_MAX (__INT64_C(9223372036854775807))
#define SIZE_MAX (18446744073709551615UL)
#define NETLINK_DNRTMSG 14
#define PRIiLEAST32 "i"
#define _SC_BASE _SC_BASE
#define _PTRDIFF_T 
#define __osockaddr_defined 1
#define ci_xchg_uintptr(p,v) ci_xchg64((volatile ci_uint64*) (p), (v))
#define MSG_WAITFORONE MSG_WAITFORONE
#define UDP_SET_FLAG(us,f) ((us)->udpflags|=(f))
#define PF_UNSPEC 0
#define UINT64_C(c) c ## UL
#define __CI_TOOLS_DEBUG_H__ 
#define EFRM_ERR_LIMITED(fmt,...) EFRM_LIMITED(EFRM_ERR(fmt, __VA_ARGS__))
#define RX_PKT_SADDR(pkt) ipx_hdr_saddr(oo_pkt_af(pkt), RX_PKT_IPX_HDR(pkt))
#define ci_fifo2_is_empty(f) ((f)->fifo_rd_i == (f)->fifo_wr_i)
#define OO_FDFLAG_FMT "0x%x %s %s"
#define PRIiLEAST64 __PRI64_PREFIX "i"
#define _POSIX2_C_VERSION __POSIX2_THIS_VERSION
#define OO_IOC_SOCK_ATTACH OO_IOC_RW(SOCK_ATTACH, oo_sock_attach_t)
#define __fortified_attr_access(a,o,s) __attribute__ ((__access__ (a, o)))
#define _GCC_WCHAR_T 
#define __FLT32_MAX_EXP__ 128
#define _SC_FIFO _SC_FIFO
#define TIOCM_RI TIOCM_RNG
#define pthread_cleanup_push(routine,arg) do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int __not_first_call = __sigsetjmp_cancel (__cancel_buf.__cancel_jmp_buf, 0); if (__glibc_unlikely (__not_first_call)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel (&__cancel_buf); do {
#define S_IWUSR __S_IWRITE
#define PF_MCTP 45
#define PRIiFAST8 "i"
#define SF_PRI_ARGS(sk,fd) NI_ID((sk)->netif), SC_FMT((sk)->s), FD_PRI_ARGS(fd)
#define PF_X25 9
#define ci_prefetch __builtin_prefetch
#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))
#define NI_CONF(ni) ((ni)->state->conf)
#define MAP_TYPE 0x0f
#define SO_PASSSEC 34
#define SIOCATMARK 0x8905
#define __HAVE_FLOATN_NOT_TYPEDEF 1
#define __GCC_HAVE_DWARF2_CFI_ASM 1
#define CI_IP_TIMER_TCP_STATS 0x8
#define __GXX_ABI_VERSION 1018
#define si_uid _sifields._kill.si_uid
#define __CI_TOOLS_LOG_H__ 
#define __WTERMSIG(status) ((status) & 0x7f)
#define EF_VI_SYNC_FLAG_CLOCK_SET 1
#define _SC_PAGESIZE _SC_PAGESIZE
#define UINT_LEAST16_MAX (65535)
#define R_OK 4
#define F_UNLCK 2
#define INADDR_ANY ((in_addr_t) 0x00000000)
#define CI_ALIGN_BACK(p,align) ((p) & ~((typeof(p))(align)-1u))
#define TX_PKT_TCP(pkt) ((ci_tcp_hdr*) oo_tx_ipx_data(oo_pkt_af(pkt), pkt))
#define PF_BRIDGE 7
#define IP_PMTUDISC_DONT 0
#define tcp_ipx_raddr(ts) sock_ipx_raddr(&(ts)->s)
#define _SC_READER_WRITER_LOCKS _SC_READER_WRITER_LOCKS
#define __FD_CLR(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] &= ~__FD_MASK(d)))
#define UDP_IS_SHUT_RD(us) ((us)->s.rx_errno & CI_SHUT_RD)
#define OO_PP_ID_INVALID ((ci_int32) -2)
#define CITP_SCALABLE_MODE_TPROXY_ACTIVE_RSS (CITP_SCALABLE_MODE_TPROXY_ACTIVE | CITP_SCALABLE_MODE_RSS)
#define F_SHLCK 8
#define __useconds_t_defined 
#define CI_TCP_FAST_PATH_MASK CI_BSWAPC_BE32(0xf0f70000)
#define SOL_IUCV 277
#define ci_buddy_assert_valid(ba) 
#define CI_SOCK_FLAG_SET_RCVBUF 0x00000800
#define CI_TCP_OPT_TIMESTAMP 0x8
#define UINT32_MAX (4294967295U)
#define CI_HAVE_CTIMER 
#define ci_bit_mask_set(b,m) ci_atomic32_or((b), (m))
#define ci_assert_equal(exp1,exp2) _ci_assert_equal(exp1, exp2, __FILE__, __LINE__)
#define _POSIX_SHELL 1
#define WNOHANG 1
#define ipx_hdr_ptr(af,ipx) (&ipx->ip4)
#define _XOPEN_SHM 1
#define PF_IPX 4
#define EF_CTPIO_MODE_SF_NP 1
#define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )
#define SEGV_ACCERR SEGV_ACCERR
#define __PTRDIFF_T 
#define udp_rport_be16(us) (sock_rport_be16(&us->s))
#define ENOCSI 50
#define CI_IP_PROTOCOL_STR(p) ((p) == IPPROTO_IP ? "IP" : (p) == IPPROTO_ICMP ? "ICMP" : (p) == IPPROTO_IGMP ? "IGMP" : (p) == IPPROTO_TCP ? "TCP" : (p) == IPPROTO_UDP ? "UDP" : "<unknown-IP-protocol>")
#define _SC_WORD_BIT _SC_WORD_BIT
#define __pic__ 2
#define EFRM_WARN_ONCE(fmt,...) do { static bool warned = false; if (!warned) EFRM_PRINTK(KERN_WARNING, fmt, __VA_ARGS__); warned = true; } while(0)
#define __HAVE_GENERIC_SELECTION 1
#define F_GETFD 1
#define F_GETFL 3
#define ETH_P_TR_802_2 0x0011
#define IFF_NOARP IFF_NOARP
#define __attr_access_none(argno) __attribute__ ((__access__ (__none__, argno)))
#define CI_TCP_STATE_FREE (0xa000 | CI_TCP_STATE_NO_TIMERS)
#define F_LOCK 1
#define CI_CFG_TCP_SYNACK_RETRANS_MAX 10
#define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }
#define S_IRWXG (S_IRWXU >> 3)
#define __PTHREAD_MUTEX_INITIALIZER(__kind) 0, 0, 0, 0, __kind, 0, 0, { 0, 0 }
#define tcp_rcv_up(ts) ((ts)->rcv_up)
#define SCNuLEAST8 "hhu"
#define ci_trs_ep_get(trs,s) ci_netif_ep_get(&(trs)->netif, (s))
#define TIOCPKT_DOSTOP 32
#define LOG_UT(x) LOG_FL(CI_TP_LOG_UT, x)
#define CI_IP_SOCK_STATS_INC_SYNDUP(ts) __CI_SOCK_STATS_INC( (ts), rx_syndup )
#define CI_BIG_ENDIAN 1
#define _VA_LIST 
#define IPPROTO_MH IPPROTO_MH
#define __CPU_CLR_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] &= ~__CPUMASK (__cpu)) : 0; }))
#define OO_IOC_DBG_GET_STACK_INFO OO_IOC_RW(DBG_GET_STACK_INFO, ci_netif_info_t)
#define PRIx16 "x"
#define CI_PMTU_TIMER_SET_SLOW(ni,p) ci_pmtu_discover_timer((ni), (p), NI_CONF(ni).tconst_pmtu_discover_slow)
#define CI_ERRQ_TCP_ERR_MAX 4
#define CP_SVC_BACKEND_FROM_LINK(link_ptr) CI_CONTAINER(struct cp_svc_ep_dllist, u.backend.link, link_ptr)
#define OOF_IP_PROTO "%s"
#define __CI_INTERNAL_IP_SHARED_TYPES_H__ 
#define ci_dllist_iter(l) ((l) = (l)->next)
#define SIOCGIFFLAGS 0x8913
#define LOCK_NB 4
#define __O_PATH 010000000
#define IFF_BROADCAST IFF_BROADCAST
#define NLM_F_CREATE 0x400
#define CI_UDPF_EF_BIND 0x00000040
#define __ATOMIC_RELAXED 0
#define SEGV_MTESERR SEGV_MTESERR
#define _XOPEN_XPG3 1
#define _XOPEN_XPG4 1
#define __FLT64X_NORM_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define __SIZEOF_POINTER__ 8
#define CI_NETIF_LOCK_FMT "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
#define _CI_CFG_BITFIELD1 :1
#define _CI_CFG_BITFIELD3 :3
#define _CI_CFG_BITFIELD4 :4
#define EF_ADDRSPACE_LOCAL ((uint64_t)-1)
#define OO_FDFLAG_EP_TCP 0x02
#define NS_FMT "%d:%d "
#define __WCOREFLAG 0x80
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
#define ci_warn(x) do{ ci_log("WARN at %s:%d", __FILE__, __LINE__); }while(0)
#define ETH_P_MPLS_MC 0x8848
#define CI_SOCK_FLAG_AUTOFLOWLABEL_REQ 0x04000000
#define __O_DIRECTORY 0200000
#define CI_TCPT_FLAG_SYNCOOKIE 0x20
#define IPV6_MULTICAST_IF 17
#define CI_RANDOM_ERROR() (((ci_frc32_get() >> 4) % 4 ) == 0 )
#define CI_TCP_EXT_STATS_INC_TCP_FAST_RETRANS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_fast_retrans )
#define __restrict_arr __restrict
#define SO_SNDTIMEO SO_SNDTIMEO_OLD
#define __CI_COMPAT_UTILS_H__ 
#define _CI_CFG_BITFIELD 
#define __MODE_T_TYPE __U32_TYPE
#define F_SETLKW64 7
#define F_GETLK F_GETLK64
#define CI_IP4_VERSION(ip) ((ip)->ip_ihl_version >> 4u)
#define SIGTRAP 5
#define EISDIR 21
#define ci_assert_equiv(exp1,exp2) _ci_assert_equiv(exp1, exp2, __FILE__, __LINE__)
#define __nonnull(params) __attribute_nonnull__ (params)
#define _POSIX_THREAD_ATTR_STACKSIZE 200809L
#define SHUT_RDWR SHUT_RDWR
#define NLM_F_DUMP_FILTERED 0x20
#define TS_IPX_TCP(ts) TS_TCP(ts)
#define _SC_MINSIGSTKSZ _SC_MINSIGSTKSZ
#define __SI_BAND_TYPE long int
#define PRIx64 __PRI64_PREFIX "x"
#define FL_ARG_S 0x200
#define CI_CPU_HAS_SSE2 0
#define O_DSYNC __O_DSYNC
#define CI_EF_UDP_RECV_FAST_M 0x00000008
#define CI_LITTLE_ENDIAN 0
#define CI_RANDOM_OOM_JUMP(label) do { if (CI_RANDOM_ERROR()) { ci_log("%s: random oom jump=%s", __FUNCTION__, #label); goto fail ##label; } } while(0);
#define CI_PKT_FLAG_TX_CTPIO 0x1000
#define __CI_DEBUG_OP_TCP_STATS__ (14)
#define MAP_SHARED_VALIDATE 0x03
#define INT_LEAST8_MAX (127)
#define __S_IFLNK 0120000
#define __glibc_has_attribute(attr) __has_attribute (attr)
#define MAP_NORESERVE 0x04000
#define __CFLOAT64X _Complex _Float64x
#define AF_KCM PF_KCM
#define IPPROTO_TP IPPROTO_TP
#define INT8_C(c) c
#define ef_vi_transmit_alt_select_normal(vi) (vi)->ops.transmit_alt_select_default((vi))
#define INVALID_SOCKET (-1)
#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
#define __CI_DEBUG_OP_TCP_EXT_STATS__ (15)
#define CI_TCP_CLOSED (0x0000 | CI_TCP_STATE_TCP | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_NOT_CONNECTED | CI_TCP_STATE_NO_TIMERS)
#define SO_PROTOCOL 38
#define CI_TCPT_FLAG_LOOP_DEFERRED 0x800
#define SIOCSIFMETRIC 0x891e
#define MADV_HWPOISON 100
#define CP_FWD_KEY_ARGS(key) CI_IP_PRINTF_ARGS(&(key)->src.ip4), CI_IP_PRINTF_ARGS(&(key)->dst.ip4), (key)->iif_ifindex, (key)->ifindex, (key)->tos
#define si_pkey _sifields._sigfault._bounds._pkey
#define __FLT64X_DECIMAL_DIG__ 21
#define IPV6_RXDSTOPTS IPV6_DSTOPTS
#define TIOCGRS485 0x542E
#define __DEC128_MIN__ 1E-6143DL
#define ci_netif_lock(ni) ef_eplock_lock(ni)
#define CI_CFG_TCP_PAWS_ON_FASTPATH 1
#define __HAVE_DISTINCT_FLOAT64X 0
#define OO_IOC_GET_ONLOADFS_DEV OO_IOC_R(GET_ONLOADFS_DEV, ci_uint32)
#define OO_PP_ID_NULL ((ci_int32) -1)
#define __DBL_HAS_DENORM__ 1
#define INT_LEAST32_MAX (2147483647)
#define AF_KEY PF_KEY
#define oo_pkt_af(pkt) AF_INET
#define int16_t ci_int16
#define FPE_FLTSUB FPE_FLTSUB
#define ETHERTYPE_AT 0x809B
#define CI_CFG_MAX_HWPORTS 30
#define CI_SOCK_AFLAG_CORK_BIT 0u
#define ci_seq_gt(a,b,bits) ci_seq_lt((b), (a), (bits))
#define CI_SOCKCALL_FLAGS_PRI_ARG(x) (((x) & MSG_OOB ) ? "OOB " :""), (((x) & MSG_PEEK ) ? "PEEK " :""), (((x) & MSG_DONTROUTE ) ? "DONTROUTE " :""), (((x) & MSG_EOR ) ? "EOR " :""), (((x) & MSG_CTRUNC ) ? "CTRUNC " :""), (((x) & MSG_TRUNC ) ? "TRUNC " :""), (((x) & MSG_WAITALL ) ? "WAITALL " :""), (((x) & MSG_DONTWAIT ) ? "DONTWAIT " :""), (((x) & MSG_NOSIGNAL ) ? "NOSIGNAL " :""), (((x) & MSG_ERRQUEUE ) ? "ERRQUEUE " :""), (((x) & MSG_CONFIRM ) ? "CONFIRM " :"")
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS _CS_XBS5_ILP32_OFFBIG_LDFLAGS
#define __attribute_pure__ __attribute__ ((__pure__))
#define CSTATUS '\0'
#define CI_TCP_EXT_STATS_INC_TCP_SCHEDULER_FAILURES(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_scheduler_failures )
#define __HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X
#define OO_IOC_GET_CPU_KHZ OO_IOC_R(GET_CPU_KHZ, ci_uint32)
#define CI_TCP_TCONST_KEEPALIVE_TIME 7200000
#define OO_IOC_OS_POLLERR_CLEAR OO_IOC_W(OS_POLLERR_CLEAR, oo_sp)
#define __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
#define __UINT8_TYPE__ unsigned char
#define OO_SIGHANGLER_DFL_MAX 2
#define TIOCM_RNG 0x080
#define _SC_BC_BASE_MAX _SC_BC_BASE_MAX
#define OO_IOC_DBG_WAIT_STACKLIST_UPDATE OO_IOC_RW(DBG_WAIT_STACKLIST_UPDATE, struct oo_stacklist_update)
#define PF_XDP 44
#define __ILP32_OFF32_LDFLAGS "-m32"
#define _SIGNAL_H 
#define NETLINK_ECRYPTFS 19
#define ci_fifo_valid(f) ((f)->fifo_size > 1 && (f)->fifo_rd_i < (f)->fifo_size && (f)->fifo_wr_i < (f)->fifo_size)
#define MSG_RST MSG_RST
#define ci_fifo_init(f,cap) do{ (f)->fifo_rd_i=(f)->fifo_wr_i=0; (f)->fifo_size = (cap)+1; }while(0)
#define ci_irqlock_unlock_dbg(l,s,fl,ln) ci_irqlock_unlock_i((l),(s))
#define RX_PKT_IPX_HDR(pkt) oo_ipx_hdr(pkt)
#define TRUSTED_SOCK_ID(ni,id) __TRUSTED_SOCK_ID((ni), (id), __FILE__, __LINE__)
#define _SC_TRACE _SC_TRACE
#define S_ISLNK(mode) __S_ISTYPE((mode), __S_IFLNK)
#define OO_PIPE_INITIAL_BUFS OO_PIPE_MIN_BUFS
#define CI_PMTU_PLATEAU_ENTRY_MAX 9
#define PRIuMAX __PRI64_PREFIX "u"
#define __LDBL_DECIMAL_DIG__ 21
#define CI_TRACE_PTR(pointer) 
#define EF_EVENT_FLAG_MULTICAST 0x8
#define INT_LEAST8_MIN (-128)
#define SO_PASSPIDFD 76
#define ci_netif_unlock_fdi(epi) ci_netif_unlock((epi)->sock.netif)
#define CI_UNIX_PIPE_ACCELERATE_IF_NETIF 2
#define CTRL(x) (x&037)
#define EF_EVENT_RX_Q_ID(e) ((e).rx.q_id)
#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)
#define CI_IP_SOCK_STATS_INC_RETX(ts) __CI_SOCK_STATS_INC( (ts), tx_retrans_pkt )
#define NTF_MASTER (1 << 2)
#define IPPROTO_ETHERNET IPPROTO_ETHERNET
#define CI_IP_SOCK_STATS_ADD_TXBYTE(ts,b) do { __CI_SOCK_STATS_INC((ts), tx_pkt); __CI_SOCK_STATS_ADD((ts), tx_byte, (b)); }while(0)
#define _PTRDIFF_T_ 
#define SO_KEEPALIVE 9
#define CI_IP_SOCK_STATS_VAL_TXWSCL(ts,s) __CI_SOCK_STATS_VAL((ts), tx_wscl, (s))
#define CI_CFG_ASSUME_LISTEN_SOCKS 4
#define CI_TCP_STATS_INC_RETRAN_SEGS(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_retran_segs)
#define CI_ERRQ_UDP_ERR_MASK (CI_ERRQ_UDP_ERR_MAX-1)
#define SCNi16 "hi"
#define ci_irqlock_dtor_dbg(l,fl,ln) ci_irqlock_dtor_i(l)
#define CI_SHUT_RD 0x8000
#define ef_vi_transmit_alt_select(vi,alt_id) (vi)->ops.transmit_alt_select((vi), (alt_id))
#define NSS_PRI_ARGS(n,s) NI_ID(n), SC_FMT(s), ci_tcp_state_str((s)->b.state)
#define __stub___compat_bdflush 
#define CI_CFG_N_READY_LISTS CI_CFG_EPOLL1_SETS_PER_STACK
#define ci_fifo_peek(f) ((f)->fifo[(f)->fifo_rd_i])
#define __CI_EFHW_DEBUG_CI2LINUX_H__ 
#define MAX_TS 32
#define INT_LEAST32_MIN (-2147483647-1)
#define __PTHREAD_MUTEX_HAVE_PREV 1
#define ifr_slave ifr_ifru.ifru_slave
#define ci_fifo_space(f) CI_FIFO_M((f), (f)->fifo_rd_i+(f)->fifo_size-(f)->fifo_wr_i-1u)
#define __USE_XOPEN2K8 1
#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
#define _SC_NL_MSGMAX _SC_NL_MSGMAX
#define CMSG_FIRSTHDR(mhdr) ((size_t) (mhdr)->msg_controllen >= sizeof (struct cmsghdr) ? (struct cmsghdr *) (mhdr)->msg_control : (struct cmsghdr *) 0)
#define SCNi32 "i"
#define CICP_LLAP_TYPE_XMIT_HASH_LAYER4 CICP_LLAP_TYPE_XMIT_HASH_LAYER34
#define CI_IPV6_CMSG_TCLASS 0x0400
#define __WIFSTOPPED(status) (((status) & 0xff) == 0x7f)
#define CHECK_TLS(ni,ts) 
#define _IOWR_BAD(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),sizeof(size))
#define CI_SOCK_ERR(x) ((x) < 0)
#define __UQUAD_TYPE unsigned long int
#define ENETDOWN 100
#define CI_TCP_EXT_STATS_INC_TIME_WAITED(netif) __CI_TCP_EXT_STATS_INC( (netif), time_waited )
#define CI_SOCK_TRY_SOCK_RET(exp) do{ ci_sock_err_t _trc; _trc=(exp); if( CI_UNLIKELY(!ci_sock_errok(_trc)) ) { ci_log("%s returned %d at %s:%d", #exp, _trc.val, __FILE__, __LINE__); return _trc; } }while(0)
#define st_mtime st_mtim.tv_sec
#define __PID_T_TYPE __S32_TYPE
#define SIOCGIFMAP 0x8970
#define SK_FMT "%d:%d"
#define __STRING(x) #x
#define SO_OOBINLINE 10
#define IPV6_2292RTHDR 5
#define __F_GETOWN 9
#define SIGVTALRM 26
#define CI_TCP_EXT_STATS_INC_PAWS_ESTAB_REJECTED(netif) __CI_TCP_EXT_STATS_INC( (netif), paws_estab_rejected )
#define CI_TCPI_OPT_ECN 8
#define CI_SB_AFLAG_O_NDELAY_BIT CI_SB_AFLAG_O_NONBLOCK_BIT
#define ci_ip_cache_init(ipcache,af) ci_ip_cache_init_common(ipcache, af)
#define NETLINK_INET_DIAG NETLINK_SOCK_DIAG
#define ifa_broadaddr ifa_ifu.ifu_broadaddr
#define _LINUX_CONST_H 
#define CI_TCP_EXT_STATS_INC_DELAYED_ACK_LOST(netif) __CI_TCP_EXT_STATS_INC( (netif), delayed_ack_lost )
#define NDA_MAX (__NDA_MAX - 1)
#define TCP_SND_PRI_ARG(ts) tcp_snd_una(ts), tcp_snd_nxt(ts), (ts)->snd_max, SEQ_SUB(tcp_enq_nxt(ts), tcp_snd_nxt(ts)), ci_tcp_inflight(ts), tcp_snd_wnd(ts)
#define NL_MMAP_HDRLEN NL_MMAP_MSG_ALIGN(sizeof(struct nl_mmap_hdr))
#define CI_SOCK_FLAGS_FMT "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
#define CI_TCP_EXT_STATS_INC_SYNCOOKIES_FAILED(netif) __CI_TCP_EXT_STATS_INC( (netif), syncookies_failed )
#define __SI_PAD_SIZE ((__SI_MAX_SIZE / sizeof (int)) - 4)
#define __F_SETOWN_EX 15
#define SCNi64 __PRI64_PREFIX "i"
#define F_ULOCK 0
#define ETH_P_ECONET 0x0018
#define INADDR_UNSPEC_GROUP ((in_addr_t) 0xe0000000)
#define __CI_NETIF_STATS_DEC(netif,Grp,Fld) do { (netif)->state->stats_snapshot.Grp.Fld--; } while(0)
#define CI_IP_CMSG_PKTINFO 0x01
#define ci_lock_ctor(l) ci_lock_ctor_dbg(l, __FILE__, __LINE__)
#define __struct_tm_defined 1
#define OO_FDFLAG_EP_ALIEN 0x10
#define __ssize_t_defined 
#define EBADFD 77
#define PRIuLEAST8 "u"
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
#define ci_tcp_rto_set(ni,ts) ci_tcp_rto_set_with_timeout((ni), (ts), (ts)->rto)
#define IN6_IS_ADDR_V4COMPAT(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && ntohl (__a->__in6_u.__u6_addr32[3]) > 1; }))
#define _SC_FSYNC _SC_FSYNC
#define OO_IOC_AF_XDP_KICK OO_IOC_W(AF_XDP_KICK, ci_int32)
#define ETH_P_MACSEC 0x88E5
#define CI_TCP_CONG_RTO_RECOV 0x2
#define FPE_INTOVF FPE_INTOVF
#define TIOCPKT_START 8
#define __CI_INTERNAL_IP_TYPES_H__ 
#define NLM_F_ACK_TLVS 0x200
#define CI_READY_LIST_EACH(bitmask,tmp,i) ci_assert_lt((bitmask), 1u << CI_CFG_N_READY_LISTS); OO_FOR_EACH_BIT(bitmask, tmp, i)
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define SIGPROF 27
#define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0
#define IP_PMTUDISC_DO 2
#define SIOCGPGRP 0x8904
#define OO_HAS_ATOMIC_CONTEXT 0
#define _POSIX_THREAD_PROCESS_SHARED 200809L
#define __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
#define PF_TIPC 30
#define SCNoPTR __PRIPTR_PREFIX "o"
#define ipx_hdr_ttl(af,ipx) ((ipx)->ip4.ip_ttl)
#define OO_IOC_CLONE_FD OO_IOC_RW(CLONE_FD, ci_clone_fd_t)
#define CI_PMTU_TIMER_KILL(ni,p) ci_pmtu_discover_timer( (ni), (p), CI_PMTU_STOP_TIMER )
#define EF_LOG_MORE_CONFIG_WARNINGS 5
#define __CI_TOOLS_ISTACK_H__ 
#define _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
#define _SC_2_LOCALEDEF _SC_2_LOCALEDEF
#define SEEK_CUR 1
#define __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
#define SIG_ATOMIC_MAX (2147483647)
#define __CI_DEBUG_OP_STACK_STATS__ (11)
#define NLM_F_NONREC 0x100
#define SO_NOFCS 43
#define ETHER_CRC_LEN 4
#define ci_lock_check_locked_dbg(l,fl,ln) 
#define __CI_DEBUG_OP_STACK_MORE_STATS__ (12)
#define __nlink_t_defined 
#define CI_TCP_EXT_STATS_INC_TCP_RENO_RECOVERY_FAIL(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_reno_recovery_fail )
#define SCNoFAST8 "hho"
#define OO_SIGHANGLER_CORE 2
#define IPV6_TRANSPARENT 75
#define _SC_SHRT_MAX _SC_SHRT_MAX
#define CICP_FWD_RW_FLAG_ARP_NEED_REFRESH 0x1
#define AT_FDCWD -100
#define W_FMT(w) OO_SP_FMT(W_SP(w))
#define ETH_P_LOOPBACK 0x9000
#define _SC_MQ_PRIO_MAX _SC_MQ_PRIO_MAX
#define INT32_MAX (2147483647)
#define __USE_ATFILE 1
#define EOWNERDEAD 130
#define NT_PRI_ARGS(n,t) NI_ID(n), S_FMT(t)
#define _SC_THREAD_ATTR_STACKSIZE _SC_THREAD_ATTR_STACKSIZE
#define EF_MULTIARCH_DATAPATH_LLCT 1
#define CI_IP_CMSG_TIMESTAMPING 0x80
#define __PKT_BUF(ni,id) ((ni)->pkt_bufs[PKT_ID2SET(id)] + ((id) & PKTS_PER_SET_M) * CI_CFG_PKT_BUF_SIZE)
#define __glibc_macro_warning1(message) _Pragma (#message)
#define PRIX16 "X"
#define _SC_THREAD_ROBUST_PRIO_INHERIT _SC_THREAD_ROBUST_PRIO_INHERIT
#define _SC_BC_STRING_MAX _SC_BC_STRING_MAX
#define __STDC_IEC_559_COMPLEX__ 1
#define NI_MAXHOST 1025
#define CI_PKT_FLAG_NONB_POOL 0x0100
#define OO_SCP_UDP_WILD 0x2
#define SOMAXCONN 4096
#define CI_EPLOCK_NETIF_NEED_SOCK_BUFS 0x0002000000000000ULL
#define __CI_DEBUG_OP_UDP_STATS__ (16)
#define CI_TRACE_INT(integer) 
#define CI_IP_CMSG_RECVOPTS 0x08
#define CI_IP_TIMER_TCP_LISTEN 0x5
#define SO_INCOMING_CPU 49
#define SO_TIMESTAMPING SO_TIMESTAMPING_OLD
#define N_SYNC_PPP 14
#define ci_istack_capacity(s) ((s)->istack_size)
#define _PATH_HOSTS "/etc/hosts"
#define MADV_DODUMP 17
#define EF_EVENT_FLAG_CTPIO 0x1
#define ci_netif_lock_count(ni,stat_name) __ci_netif_lock_count((ni), &(ni)->state->stats.stat_name)
#define OO_P_DLLINK_ASSERT_EMPTY_SB(ni,sb,l) OO_P_DLLINK_ASSERT_EMPTY(ni, oo_p_dllink_sb(ni, sb, l))
#define IS_AF_SPACE_IP4(af_space) 1
#define IS_AF_SPACE_IP6(af_space) 0
#define CI_TCP_EXT_STATS_INC_TCP_SACK_RECOVERY(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_sack_recovery )
#define CI_TCP_URG_IS_HERE 0x0200
#define __FLT128_DIG__ 33
#define __SCHAR_WIDTH__ 8
#define printk_nl ""
#define CI_HAVE_X86INTRIN 
#define MADV_COLD 20
#define CI_SB_AFLAG_NOT_READY 0x200
#define ci_fifo_not_full(f) (CI_FIFO_M((f),(f)->fifo_wr_i+1u)!=(f)->fifo_rd_i)
#define __DEC128_MIN_EXP__ (-6142)
#define CP_LLAP_LICENSED_VERIFIED 0x00000004u
#define ci_lock_dtor_i(l) pthread_mutex_destroy(l)
#define IP_ADD_MEMBERSHIP 35
#define __FLT32_MAX_10_EXP__ 38
#define IS_VALID_PKT_ID(ni,pp) OO_PP_EQ((pp), VALID_PKT_ID((ni), (pp)))
#define __va_copy(d,s) __builtin_va_copy(d,s)
#define CMSG_DATA(cmsg) ((cmsg)->__cmsg_data)
#define IF_NAMESIZE 16
#define _SC_MESSAGE_PASSING _SC_MESSAGE_PASSING
#define CI_SOCK_AFLAG_NEED_ACK 0x400
#define _IOC_TYPEBITS 8
#define UTIME_OMIT ((1l << 30) - 2l)
#define __INT_FAST32_TYPE__ long int
#define _SYS_TTYDEFAULTS_H_ 
#define bool _Bool
#define EFRM_ASSERT(cond) do {} while(0)
#define S_IWGRP (S_IWUSR >> 3)
#define __CI_COMPAT_GCC_X86_H__ 
#define SIG_DFL ((__sighandler_t) 0)
#define _CS_POSIX_V7_ILP32_OFF32_LDFLAGS _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
#define ci_add_carry32(sum,v) __asm__("addl %1, %0 ;" "adcl $0, %0 ;" : "=r" (sum) : "g" ((ci_uint32) v), "0" (sum))
#define MADV_DONTFORK 10
#define SIG_ATOMIC_MIN (-2147483647-1)
#define F_OK 0
#define ETH_P_CAIF 0x00F7
#define _PC_PATH_MAX _PC_PATH_MAX
#define TRUSTED_SOCK_ID_FROM_P(ni,sockp) TRUSTED_SOCK_ID((ni), OO_SP_TO_INT(sockp))
#define FD_PRI_ARGS(fd) fd
#define CI_TCP_FLAG_PSH 0x08
#define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 0
#define CI_IPX_IS_MULTICAST(addr) CI_IP_IS_MULTICAST((addr).ip4)
#define ifr_dstaddr ifr_ifru.ifru_dstaddr
#define FL_TCPA 0x20
#define OOFA_IPCACHE_STATUS(s) ((s) == retrrc_success ? "Onloaded" : (s) == retrrc_nomac ? "NoMac" : (s) == retrrc_noroute ? "NoRoute" : (s) == retrrc_alienroute ? "ViaOs" : (s) == retrrc_localroute ? "Local" : "MacFail")
#define FL_TCPC 0x40
#define _SC_SHRT_MIN _SC_SHRT_MIN
#define __attr_dealloc(dealloc,argno) __attribute__ ((__malloc__ (dealloc, argno)))
#define CI_HAVE_FRC32 
#define SCNdFAST32 __PRIPTR_PREFIX "d"
#define CI_VMALLOC_ARRAY(type,howmany) ((type*) ci_vmalloc((howmany) * sizeof(type)))
#define _PC_LINK_MAX _PC_LINK_MAX
#define __bswap_constant_64(x) ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56))
#define CI_PTR_ALIGN_NEEDED(p,align) CI_ALIGN_NEEDED(((ci_ptr_arith_t)(p)), ((ci_ptr_arith_t)(align)), ci_ptr_arith_t)
#define EF_REQUEST_ID_MASK 0xffffffff
#define ESHUTDOWN 108
#define ci_netif_trylock(ni) ef_eplock_trylock(&(ni)->state->lock)
#define INT32_MIN (-2147483647-1)
#define _SC_TIMER_MAX _SC_TIMER_MAX
#define SO_SNDTIMEO_NEW 67
#define _SC_2_C_VERSION _SC_2_C_VERSION
#define MAP_STACK 0x20000
#define CI_TCPT_FLAG_ECN 0x08
#define __va_arg_pack_len() __builtin_va_arg_pack_len ()
#define _SIZE_T_DECLARED 
#define UINT_FAST32_MAX (18446744073709551615UL)
#define _POSIX_THREADS 200809L
#define F_SETOWN __F_SETOWN
#define __CI_APP_NET_H__ 
#define __INT_FAST64_MAX__ 0x7fffffffffffffffL
#define ETHERTYPE_SPRITE 0x0500
#define SO_LOCK_FILTER 44
#define IP_BIND_ADDRESS_NO_PORT 24
#define SIGONLOAD (SIGRTMAX-10)
#define __FLT64X_DIG__ 18
#define ef_vi_transmit_ctpio_fallback(vi,dma_addr,len,dma_id) (vi)->ops.transmit_ctpio_fallback((vi), (dma_addr), (len), (dma_id))
#define _SC_SINGLE_PROCESS _SC_SINGLE_PROCESS
#define TX_PKT_IPX_HDR(af,pkt) ((ci_ipx_hdr_t*) (oo_tx_ipx_hdr(af, pkt)))
#define MADV_POPULATE_READ 22
#define CI_HAVE_FRC64 
#define __INT8_TYPE__ signed char
#define SIOCDIFADDR 0x8936
#define TIOCGPKT _IOR('T', 0x38, int)
#define SIGSTKSZ 8192
#define ETH_P_8021Q 0x8100
#define __CI_EFHW_EFAB_CONFIG_H__ 
#define CI_TCP_STATE_ACTIVE_WILD (0xe000)
#define SIOCGIFMEM 0x891f
#define _ASM_GENERIC_INT_LL64_H 
#define __ELF__ 1
#define CI_IP_SOCK_STATS_VAL_RXWIN_SCL(ts,w,s) do { __CI_SOCK_STATS_VAL((ts), rx_win, (w)); __CI_SOCK_STATS_VAL((ts), rx_wscl, (s)); } while(0)
#define __CI_INTERNAL_IP_SHARED_OPS_H__ 
#define __GCC_ASM_FLAG_OUTPUTS__ 1
#define CI_SOCK_MIN_SNDBUF 2048
#define ETH_P_TEB 0x6558
#define __UAPI_DEF_ETHHDR 1
#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS _CS_POSIX_V6_ILP32_OFF32_CFLAGS
#define CLNEXT CTRL('v')
#define CI_SB_AFLAG_ORPHAN_BIT 0u
#define SIOCGIFMTU 0x8921
#define CI_CFG_TCP_SNDBUF_MAX 4194304
#define CI_EPLOCK_NETIF_IS_PKT_WAITER 0x80000000ULL
#define LOG_PMTU(x) LOG_IPP(x)
#define PRIxMAX __PRI64_PREFIX "x"
#define OO_SIGNAL_FLAG_NEED_RESTART 0x2
#define _BITS_BYTESWAP_H 1
#define __ID_T_TYPE __U32_TYPE
#define __CI_APP_STATS_H__ 
#define CI_IP_TIMER_TCP_KALIVE 0x4
#define ETH_P_NCSI 0x88F8
#define ELIBSCN 81
#define F_TLOCK 2
#define SEQ(s) ((unsigned) (s))
#define CI_IP_SOCK_STATS_VAL_TXSLEEP(ts,v) do { __CI_SOCK_STATS_VAL((ts), tx_sleep, (v)); } while(0)
#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS
#define CI_TCPT_FLAG_ACTIVE_WILD 0x8000
#define ci_fifo_rd_adv(f,n) do{ (f)->fifo_rd_i = CI_FIFO_M((f), (f)->fifo_rd_i + (n)); }while(0)
#define SOL_RAW 255
#define CI_CFG_DYNAMIC_ACK_RATE 1
#define ITIMER_REAL ITIMER_REAL
#define __ONLOAD_STATE_P_H__ 
#define _IOC_NRBITS 8
#define SP_TO_WAITABLE_OBJ(ni,sp) SP_TO_foo((ni), (sp), citp_waitable_obj)
#define __FLT_RADIX__ 2
#define SO_REUSEPORT 15
#define SA_NOMASK SA_NODEFER
#define SOCK_TYPE_MASK 0xf
#define LNTF_FMT LPF "%d:%d/"FD_FMT" "
#define __stub_sigreturn 
#define _BITS_TIME64_H 1
#define ifa_dstaddr ifa_ifu.ifu_dstaddr
#define CI_PRIi32 PRIi32
#define CI_TCPT_SYN_FLAGS (CI_TCPT_FLAG_WSCL | CI_TCPT_FLAG_TSO | CI_TCPT_FLAG_SACK)
#define SCNdPTR __PRIPTR_PREFIX "d"
#define __CI_TOOLS_STACKS_H__ 
#define CI_TCP_EXT_STATS_INC_TCP_SACK_REORDER(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_sack_reorder )
#define CI_HAVE_SDCI 0
#define EAI_BADFLAGS -1
#define _IOWR(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))
#define SCNxLEAST16 "hx"
#define _SC_LEVEL3_CACHE_ASSOC _SC_LEVEL3_CACHE_ASSOC
#define _T_WCHAR 
#define MADV_DOFORK 11
#define TS_QUEUE_RX(ts) ((ci_ip_pkt_queue*) ((ci_uintptr_t) (ts) + (ts)->recv_off))
#define MADV_WILLNEED 3
#define BUS_ADRALN BUS_ADRALN
#define AF_ATMSVC PF_ATMSVC
#define ci_realloc(ptr,oldsize,newsize) realloc((ptr), (newsize))
#define SOL_RDS 276
#define __SIZEOF_PTHREAD_BARRIERATTR_T 4
#define CI_SOCKOPT_FLAG_SO_DEBUG 0x1
#define SCNx16 "hx"
#define CLOCK_MONOTONIC_RAW 4
#define CI_TCP_CLOSING (0x8000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SYNCHRONISED | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_NOT_CONNECTED | CI_TCP_STATE_RECVD_FIN | CI_TCP_STATE_TXQ_ACTIVE | CI_TCP_STATE_TIMEOUT_ORPHAN )
#define IP_DEFAULT_MULTICAST_LOOP 1
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define CI_PRINTF_LIKE(a,b) __attribute__((format(printf,a,b)))
#define CI_NETIF_FLAGS_SHARED 0x10
#define OO_OS_STATUS_TX 2
#define _SC_FD_MGMT _SC_FD_MGMT
#define F_TEST 3
#define CI_TCP_EXT_STATS_INC_HP_HITS_TO_USER(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_hp_hits_to_user )
#define CI_SOCK_NOT_BOUND(s) (!sock_lport_be16((s)))
#define W_ID(w) OO_SP_TO_INT(W_SP(w))
#define SCNxLEAST32 "x"
#define EF_VI_NIC_PAGE_SIZE (1<<EF_VI_NIC_PAGE_SHIFT)
#define CI_PRIi64 PRIi64
#define OO_PKT_FMT(pkt) OO_PP_FMT((pkt)->pp)
#define CI_PIO_BUF_ORDER 12
#define IRQLOCK_CYCLES 500000
#define SO_PREFER_BUSY_POLL 69
#define EFAB_NIC_DP_DEFAULT_tx_aperture_bytes 4096
#define NETLINK_FIREWALL 3
#define CITP_TCP_ISN_2MSL_DEFAULT 240
#define _BITS_SIGSTACK_H 1
#define CI_SOCK_ERR_ORIGIN_NONE 0
#define _POSIX_TIMEOUTS 200809L
#define SCNx32 "x"
#define EOVERFLOW 75
#define ETHER_HDR_LEN ETH_HLEN
#define __CI_TCP_COUNT_STATS_INC(netif,Fld) __CI_NETIF_STATS_INC((netif), tcp, Fld)
#define S_IRUSR __S_IREAD
#define IPPROTO_IP IPPROTO_IP
#define CHECK_FREEPKTS(ni) 
#define CITP_NETIF_DTOR_ONLY_SHARED 1
#define CI_IPV6_CMSG_HOPLIMIT 0x0200
#define CI_SA6(sa) ((struct sockaddr *)(sa))
#define CI_SOCK_TRY(exp) do{ ci_sock_err_t _trc; _trc=(exp); if( CI_UNLIKELY(!ci_sock_errok(_trc)) ) ci_sys_fail(#exp, _trc.val); }while(0)
#define _SC_THREAD_PROCESS_SHARED _SC_THREAD_PROCESS_SHARED
#define OO_IOC_TCP_CLOSE_OS_SOCK OO_IOC_W(TCP_CLOSE_OS_SOCK, oo_sp)
#define __SIZEOF_PTHREAD_COND_T 48
#define SEEK_SET 0
#define _ci_assert_nequal(exp1,exp2,file,line) do{}while(0)
#define CI_CFG_TCP_SNDBUF_MIN CI_SOCK_MIN_SNDBUF
#define CI_SOCK_FLAG_BOUND_ALIEN 0x00002000
#define CI_FIFO2_M(f,x) ((x) & ((f)->fifo_mask))
#define CI_IP_SOCK_STATS_VAL_TXSLEEPTIME(ts,v) do { __CI_SOCK_STATS_VAL((ts), tx_sleep_time, (v)); } while(0)
#define CI_AUX_HEADER_SIZE CI_CACHE_LINE_SIZE
#define AF_IEEE802154 PF_IEEE802154
#define ci_lock_unlock(l) ci_lock_unlock_dbg(l, __FILE__, __LINE__)
#define CICPOS_RETRRC_RCSTR(rc) ((rc) == retrrc_success? "success": (rc) == retrrc_nomac? "MAC currently unknown": (rc) == retrrc_noroute? "no route known to IP address": (rc) == retrrc_alienroute? "non-EtherFabric route": (rc) == retrrc_localroute? "loopback route": "<unknown forwarding return code>")
#define SCNxLEAST64 __PRI64_PREFIX "x"
#define _BITS_TYPES_H 1
#define ETH_P_IEEE802154 0x00F6
#define __sig_atomic_t_defined 1
#define ETH_P_PAUSE 0x8808
#define CI_IP_CMSG_TOS 0x04
#define SO_TIMESTAMP SO_TIMESTAMP_OLD
#define SO_TXTIME 61
#define oo_sockp_to_ptr_safe(ni,sockp) oo_sockp_to_ptr((ni), TRUSTED_SOCK_P((ni), (sockp)))
#define __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
#define TF_FMT "%d/"FD_FMT" "
#define NLA_ALIGN(len) (((len) + NLA_ALIGNTO - 1) & ~(NLA_ALIGNTO - 1))
#define MADV_DONTNEED 4
#define CI_SOCK_FLAG_IP6_ALWAYS_DF 0x80000000
#define __FLT32X_MANT_DIG__ 53
#define SCNx64 __PRI64_PREFIX "x"
#define CLOCK_TAI 11
#define CI_TCP_OPT_SACK_PERM 0x4
#define OO_IOC_EFCT_SUPERBUF_CONFIG_REFRESH OO_IOC_W(EFCT_SUPERBUF_CONFIG_REFRESH, oo_efct_superbuf_config_refresh_t)
#define EUCLEAN 117
#define _POSIX_IPV6 200809L
#define OO_IOC_CP_SELECT_INSTANCE OO_IOC_W(CP_SELECT_INSTANCE, ci_uint32)
#define ci_restrict __restrict__
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_ON_DATA(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_on_data )
#define tcp_rcv_wnd_current(ts) CI_MIN((ts)->rcv_window_max, (ts)->s.so.rcvbuf - tcp_rcv_usr(ts))
#define IP_MSFILTER 41
#define _EXTERN_INLINE __extern_inline
#define CI_CFG_PIO 1
#define ETH_P_ATMMPOA 0x884c
#define _SC_XBS5_LPBIG_OFFBIG _SC_XBS5_LPBIG_OFFBIG
#define CI_IP_TO_IP6_MAPPED(ip6_p,ip_be32) do { ((ci_uint32 *)(ip6_p))[0] = ((ci_uint32 *)(ip6_p))[1] = 0; if (ip_be32 != 0) { ((ci_uint32 *)(ip6_p))[2] = CI_BSWAPC_BE32(0xffff); ((ci_uint32 *)(ip6_p))[3] = ip_be32; } else { ((ci_uint32 *)(ip6_p))[2] = ((ci_uint32 *)(ip6_p))[3] = 0; } } while (0)
#define IP_BLOCK_SOURCE 38
#define __S_IEXEC 0100
#define _SC_V7_ILP32_OFFBIG _SC_V7_ILP32_OFFBIG
#define W_OK 2
#define PROT_READ 0x1
#define CI_TCP_TCONST_DELACK 50
#define __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
#define __x86_64__ 1
#define _SIZE_T_ 
#define CI_TP_LOG_IPP 0x2000000
#define __FLT16_IS_IEC_60559__ 1
#define __FLT16_MAX_EXP__ 16
#define CI_CFG_CONGESTION_WINDOW_VALIDATION 0
#define CI_CFG_MAX_INTERFACES 30
#define CI_TCP_STATE_TIMEOUT_ORPHAN 0x080
#define O_CREAT 0100
#define __S_IWRITE 0200
#define _WCHAR_T_H 
#define IP_RETOPTS 7
#define EPROTO 71
#define ENODEV 19
#define CP_LLAP_ALIEN 0x00000002u
#define CI_UL_LOG_EP 0x400
#define __stub_revoke 
#define ipx_hdr_daddr(af,hdr) ({ struct { ci_addr_t a[1]; } a = {}; a.a[0] = IS_AF_INET6(af) ? CI_ADDR_FROM_IP6((hdr)->ip6.daddr) : CI_ADDR_FROM_IP4((hdr)->ip4.ip_daddr_be32); a;}).a[0]
#define __S_IFDIR 0040000
#define BUG_ON(cond) ci_assert((cond) == 0)
#define _CS_POSIX_V7_LPBIG_OFFBIG_LIBS _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
#define CI_IP_CMSG_TTL 0x02
#define PKT_ID2SET(id) ((id) >> CI_CFG_PKTS_PER_SET_S)
#define POLL_OUT POLL_OUT
#define sock_tos_tclass(af,cp) ( WITH_CI_CFG_IPV6( IS_AF_INET6(af) ? (cp)->tclass : ) (cp)->ip_tos )
#define TIOCSERCONFIG 0x5453
#define CI_UL_LOG_S 0x4
#define CHECK_US(ni,ts) 
#define _POSIX_MONOTONIC_CLOCK 0
#define CICP_FWD_FLAG_OCCUPIED 0x80
#define EKEYEXPIRED 127
#define OO_IOC_TCP_MORE_SOCKS OO_IOC_NONE(TCP_MORE_SOCKS)
#define CI_ALLOC_ARRAY(type,howmany) ((type*) ci_alloc((howmany) * sizeof(type)))
#define ci_assert_gt(exp1,exp2) _ci_assert_gt(exp1, exp2, __FILE__, __LINE__)
#define _SC_2_PBS_ACCOUNTING _SC_2_PBS_ACCOUNTING
#define UDP_TX_ERRNO(us) (SOCK_TX_ERRNO(&(us)->s))
#define OO_IOC_ALLOC_ACTIVE_WILD OO_IOC_W(ALLOC_ACTIVE_WILD, oo_alloc_active_wild_t)
#define _SC_XBS5_LP64_OFF64 _SC_XBS5_LP64_OFF64
#define EF_EVENT_RX_DISCARD_CONT(e) ((e).rx_discard.flags&EF_EVENT_FLAG_CONT)
#define CI_TCP_STATS_INC_PASSIVE_OPENS(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_passive_opens)
#define __UINT_FAST32_MAX__ 0xffffffffffffffffUL
#define CI_UL_LOG_VPOLL 0x40
#define CI_IP4_IS_FIRST_OR_ONLY_FRAG(ip) (CI_IP4_IS_FIRST_FRAG(ip) | CI_IP4_IS_UNFRAG(ip))
#define __UINT_LEAST64_TYPE__ long unsigned int
#define PRId64 __PRI64_PREFIX "d"
#define CI_SIN(sa) ((struct sockaddr_in *)(sa))
#define MINSIGSTKSZ 2048
#define W_SP(w) ((w)->bufid)
#define __FLT16_EPSILON__ 9.76562500000000000000000000000000000e-4F16
#define CI_SB_AFLAG_MOVED_AWAY_IN_EPOLL_BIT 14u
#define CI_TP_LOG_ITV 0x40000
#define ETH_P_MAP 0x00F9
#define __FLT_HAS_QUIET_NAN__ 1
#define IP_RECVOPTS 6
#define _SC_THREAD_ATTR_STACKADDR _SC_THREAD_ATTR_STACKADDR
#define _SC_PII_INTERNET_STREAM _SC_PII_INTERNET_STREAM
#define _POSIX_TRACE_INHERIT -1
#define __FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))
#define AI_ADDRCONFIG 0x0020
#define ef_vi_transmit_pio_warm(vi) (vi)->ops.transmit_pio_warm((vi))
#define SO_CNX_ADVICE 53
#define CI_UDP_STATS_COUNT_LEN (sizeof(ci_udp_stats_count)/sizeof( CI_IP_STATS_TYPE))
#define _SC_HOST_NAME_MAX _SC_HOST_NAME_MAX
#define CI_TCP_EXT_STATS_INC_HP_HITS(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_hp_hits )
#define CI_UDP_STATE_FLAGS_PRI_ARG(ts) (UDP_FLAGS(ts) & CI_UDPF_FILTERED ? "FILT ":""), (UDP_FLAGS(ts) & CI_UDPF_MCAST_LOOP ? "MCAST_LOOP ":""), (UDP_FLAGS(ts) & CI_UDPF_IMPLICIT_BIND? "IMP_BIND ":""), (UDP_FLAGS(ts) & CI_UDPF_EF_SEND ? "EFSND ":""), (UDP_FLAGS(ts) & CI_UDPF_LAST_RECV_ON ? "LAST_RCV_ON ":""), (UDP_FLAGS(ts) & CI_UDPF_EF_BIND ? "BIND ":""), (UDP_FLAGS(ts) & CI_UDPF_MCAST_B2D ? "MC_B2D ":""), (UDP_FLAGS(ts) & CI_UDPF_NO_MCAST_B2D ? "NO_MC_B2D ":""), (UDP_FLAGS(ts) & CI_UDPF_PEEK_FROM_OS ? "PEEKOS ":""), (UDP_FLAGS(ts) & CI_UDPF_SO_TIMESTAMP ? "SO_TS ":""), (UDP_FLAGS(ts) & CI_UDPF_MCAST_JOIN ? "MC ":""), (UDP_FLAGS(ts) & CI_UDPF_MCAST_FILTER ? "MC_FILT ":""), (UDP_FLAGS(ts) & CI_UDPF_NO_UCAST_FILTER ? "NO_UC_FILT ":""), (UDP_FLAGS(ts) & CI_UDPF_LAST_SEND_NOMAC ? "LAST_SEND_NOMAC":""), (UDP_FLAGS(ts) & CI_UDPF_NO_MCAST_FILTER ? "NO_MC_FILT ":"")
#define CI_SOCK_FLAG_SCALACTIVE 0x00400000
#define CI_DEBUG(x) 
#define __FLT64X_HAS_DENORM__ 1
#define _PC_SYNC_IO _PC_SYNC_IO
#define SIGWINCH 28
#define va_copy(d,s) __builtin_va_copy(d,s)
#define EHWPOISON 133
#define _SC_SEM_NSEMS_MAX _SC_SEM_NSEMS_MAX
#define __FLT_HAS_INFINITY__ 1
#define ci_sock_set_raddr(s,addr) ci_ipcache_set_daddr(&(s)->pkt, addr)
#define SO_SNDBUF 7
#define __WSTOPSIG(status) __WEXITSTATUS(status)
#define CI_BSWAP_BE16(v) CI_BSWAP_16(v)
#define CI_FREE_OBJ(ptr) do { CI_DEBUG_ZERO(ptr); ci_free(ptr); }while(0)
#define CI_SOCK_ERR_PUT() 
#define __UINTPTR_TYPE__ long unsigned int
#define NETLINK_RDMA 20
#define _CS_XBS5_ILP32_OFF32_LIBS _CS_XBS5_ILP32_OFF32_LIBS
#define _BSD_PTRDIFF_T_ 
#define PRIXPTR __PRIPTR_PREFIX "X"
#define CI_IPX_IS_LINKLOCAL(addr) 0
#define EFCT_FUTURE_VALID_BYTES 62
#define SCNx8 "hhx"
#define SIGXFSZ 25
#define MCAST_JOIN_SOURCE_GROUP 46
#define ci_ss_assert_le(ni,x,y) ci_ss_assert2((ni), (x)<=(y), x, y)
#define SIGHUP 1
#define CICP_FWD_FLAG_STALE 0x1
#define CICP_FWD_DATA_FLAG_FMT "arp %s"
#define EF_EVENT_TX_ALT_ALT_ID(e) ((e).tx_alt.alt_id)
#define ef_vi_transmit_copy_pio(vi,pio_offset,src_buf,len,dma_id) (vi)->ops.transmit_copy_pio((vi), (pio_offset), (src_buf), (len), (dma_id))
#define NULL ((void *)0)
#define OOF_IPX IPX_FMT
#define AF_IRDA PF_IRDA
#define __SYSCALL_WORDSIZE 64
#define __CHAR16_TYPE__ short unsigned int
#define __COLD __attribute__ ((__cold__))
#define AT_SYMLINK_NOFOLLOW 0x100
#define SCNuPTR __PRIPTR_PREFIX "u"
#define E2BIG 7
#define TX_PKT_SET_FLOWLABEL(af,pkt,flowlabel) ipx_hdr_set_flowlabel(af, TX_PKT_IPX_HDR(af, pkt), (flowlabel))
#define SIGRTMAX (__libc_current_sigrtmax ())
#define BIG_ENDIAN __BIG_ENDIAN
#define __CI_TOOLS_BUFFER_H__ 
#define CI_IP_SOCK_STATS_INC_RXSLEEP(ts) __CI_SOCK_STATS_INC( (ts), rx_sleep )
#define IPTOS_TOS_MASK 0x1E
#define PF_PPPOX 24
#define __W_CONTINUED 0xffff
#define O_ASYNC 020000
#define CFLUSH CDISCARD
#define CI_TCP_EXT_STATS_INC_TCP_ABORT_FAILED(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_abort_failed )
#define __WINT_WIDTH__ 32
#define CI_TCP_RETRANSMIT_THRESHOLD 15
#define SO_TIMESTAMPNS_NEW 64
#define __CI_NET_ETHERNET_H__ 
#define IPX_FMT CI_IP_PRINTF_FORMAT
#define ci_inline static inline
#define __FLT16_NORM_MAX__ 6.55040000000000000000000000000000000e+4F16
#define __LP64_OFF64_LDFLAGS "-m64"
#define ETHERTYPE_LOOPBACK 0x9000
#define __LITTLE_ENDIAN 1234
#define PRIo32 "o"
#define IPV6_XFRM_POLICY 35
#define CI_IPV6_DFLT_MCASTHOPS 1
#define __UINT_LEAST32_MAX__ 0xffffffffU
#define IN6_IS_ADDR_MC_NODELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x1))
#define _SC_LEVEL4_CACHE_LINESIZE _SC_LEVEL4_CACHE_LINESIZE
#define _PC_REC_XFER_ALIGN _PC_REC_XFER_ALIGN
#define PF_QIPCRTR 42
#define ONLOADFS_MAGIC 0xefab010d
#define __GCC_DESTRUCTIVE_SIZE 64
#define CI_CFG_DUMPQUEUE_LEN 128
#define _SC_MEMORY_PROTECTION _SC_MEMORY_PROTECTION
#define IPV6_AUTHHDR 10
#define ci_ul_iowb() ((void)0)
#define SI_TKILL SI_TKILL
#define IN_CLASSB_NET 0xffff0000
#define SIOCGARP 0x8954
#define CI_SB_AFLAG_IN_CACHE 0x400
#define SOL_KCM 281
#define EF_EVENT_FLAG_CONT 0x2
#define CI_BSWAPM_LE16(v) ((ci_uint16) (v))
#define CI_NETIF_PKT_TRY_TO_FREE_MAX_DESP 2
#define OO_PIPE_MIN_BUFS (OO_PIPE_SIZE_TO_BUFS(OO_PIPE_MIN_SIZE) + 1)
#define __STDC_VERSION__ 201710L
#define CI_UL_LOG_PT 0x10000
#define __CPU_OP_S(setsize,destset,srcset1,srcset2,op) (__extension__ ({ cpu_set_t *__dest = (destset); const __cpu_mask *__arr1 = (srcset1)->__bits; const __cpu_mask *__arr2 = (srcset2)->__bits; size_t __imax = (setsize) / sizeof (__cpu_mask); size_t __i; for (__i = 0; __i < __imax; ++__i) ((__cpu_mask *) __dest->__bits)[__i] = __arr1[__i] op __arr2[__i]; __dest; }))
#define CICP_HASH_STATE_FLAGS_IS_FRAG 0x4
#define EF_EVENT_RX_MULTI_Q_ID(e) ((e).rx_multi.q_id)
#define ENOTDIR 20
#define EFAB_NIC_DP_DEFAULT_unsol_credit_seq_mask 0x7f
#define __DEC32_MAX_EXP__ 97
#define TX_PKT_UDP(pkt) ((ci_udp_hdr*) oo_tx_ipx_data(oo_pkt_af(pkt), pkt))
#define OO_IOC_OOF_CP_DNAT_ADD OO_IOC_W(OOF_CP_DNAT_ADD, struct oo_op_cplane_dnat_add)
#define TIOCGICOUNT 0x545D
#define TIMER_ABSTIME 1
#define _SC_UIO_MAXIOV _SC_UIO_MAXIOV
#define CI_TCPT_FLAG_MSG_WARM 0x10000
#define SCM_TIMESTAMPING_PKTINFO 58
#define CI_CFG_HANDLE_ICMP 1
#define CI_ARG_LINUX(x) ,x
#define ILL_BADSTK ILL_BADSTK
#define CI_TCP_CONG_COOLING 0x8
#define __PMT(args) args
#define CITP_VFORK_USE_FORK 0
#define CI_BSWAPM_LE32(v) ((ci_uint32) (v))
#define IFF_LOOPBACK IFF_LOOPBACK
#define AF_SMC PF_SMC
#define AF_NETBEUI PF_NETBEUI
#define ECONNRESET 104
#define CP_FWD_KEY_FMT "from "CI_IP_PRINTF_FORMAT" to "CI_IP_PRINTF_FORMAT" from %d via %d tos %d"
#define __ASSERT_VALID_PKT_ID(ni,id,file,line) ci_ss_assertfl((ni), IS_VALID_PKT_ID((ni), (id)), file, line)
#define ETH_MIN_MTU 68
#define AF_SNA PF_SNA
#define _SC_2_VERSION _SC_2_VERSION
#define UDP_CLR_FLAG(us,f) ((us)->udpflags&=~(f))
#define NETIF_INFO_MAX_EPS_PER_THREAD 4
#define SIGSTOP 19
#define __FLT32_DIG__ 6
#define _SC_LEVEL3_CACHE_SIZE _SC_LEVEL3_CACHE_SIZE
#define OO_MMAP_TYPE_MASK 0x3
#define ENXIO 6
#define _SC_THREAD_CPUTIME _SC_THREAD_CPUTIME
#define MAP_FIXED_NOREPLACE 0x100000
#define ID_TO_EPS(ni,id) (&(ni)->eps[id])
#define CI_NETIF_FLAG_DEBUG 0x1
#define SCNuFAST16 __PRIPTR_PREFIX "u"
#define CLOCK_MONOTONIC 1
#define CI_CFG_CONG_AVOID_SCALE_BACK 1
#define IPV6_RTHDR_LOOSE 0
#define CI_CFG_MIN_PIO_BLOCK_ORDER 7
#define __oo_pktq_next(ni,q,head_pkt,next) do { ci_assert(OO_PP_EQ((q)->head, OO_PKT_P(head_pkt))); ci_assert((q)->num > 0); (q)->head = (head_pkt)->next; --(q)->num; } while(0)
#define __FLT64_HAS_QUIET_NAN__ 1
#define IS_ERR(ptr) CI_UNLIKELY((uintptr_t)(ptr) >= (uintptr_t)-CI_MAX_ERRNO)
#define tcp_urg_data(ts) ((ts)->urg_data)
#define ifr_ifindex ifr_ifru.ifru_ivalue
#define SIGRTMIN (__libc_current_sigrtmin ())
#define CP_FWD_KEY_TRANSPARENT 0x20
#define F_GETLK64 5
#define CI_TCP_STATS_INC_OUT_SEGS(netif) __CI_TCP_COUNT_STATS_INC( (netif), tcp_out_segs)
#define CI_TCP_EXT_STATS_INC_TCP_DSACK_OLD_SENT(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_dsack_old_sent )
#define PKT_TCP_TX_SEQ_SPACE(pkt) (SEQ_SUB((pkt)->pf.tcp_tx.end_seq, (pkt)->pf.tcp_tx.start_seq))
#define CI_SOCKCALL_FLAGS_FMT "%s%s%s%s%s%s%s%s%s%s%s"
#define __POSIX2_THIS_VERSION 200809L
#define CI_EPLOCK_NETIF_UL_COMMON_MASK (CI_EPLOCK_NETIF_IS_PKT_WAITER | CI_EPLOCK_NETIF_NEED_POLL | CI_EPLOCK_NETIF_HAS_DEFERRED_PKTS | CI_EPLOCK_NETIF_MERGE_ATOMIC_COUNTERS | CI_EPLOCK_NETIF_PRIME_IF_IDLE)
#define L_XTND 2
#define CITP_SCALABLE_MODE_PASSIVE_ACTIVE_RSS (CITP_SCALABLE_MODE_ACTIVE | CITP_SCALABLE_MODE_PASSIVE | CITP_SCALABLE_MODE_RSS)
#define CI_IP_CMSG_RETOPTS 0x10
#define CI_CFG_EPOLL2 1
#define CI_CFG_EPOLL3 1
#define SCNuFAST32 __PRIPTR_PREFIX "u"
#define ETH_P_AOE 0x88A2
#define h_errno (*__h_errno_location ())
#define MCAST_JOIN_GROUP 42
#define CI_UNUSED __attribute__((__unused__))
#define CI_PRIx32 PRIx32
#define INET6_ADDRSTRLEN 46
#define _SC_MEMLOCK_RANGE _SC_MEMLOCK_RANGE
#define CI_IP6_TCLASS_SHIFT 20
#define __SIGEV_MAX_SIZE 64
#define ipx_hdr_af(ipx) AF_INET
#define NLMSG_OVERRUN 0x4
#define CI_CFG_HW_TIMER 1
#define __KEY_T_TYPE __S32_TYPE
#define CI_UL_LOG_VE 0x40000
#define FAPPEND O_APPEND
#define CI_SOCK_FLAG_SCALPASSIVE 0x00800000
#define CI_IP_STATS_OUTPUT_DEFAULT CI_IP_STATS_OUTPUT_NONE
#define __F_SETSIG 10
#define CI_TCP_EXT_STATS_INC_SYNCOOKIES_SENT(netif) __CI_TCP_EXT_STATS_INC( (netif), syncookies_sent )
#define TCP_RCV_PRI_ARG(ts) tcp_rcv_nxt(ts), tcp_rcv_wnd_right_edge_sent(ts), tcp_rcv_nxt(ts)+tcp_rcv_wnd_current(ts), tcp_rcv_wnd_current(ts), ts->recv1.num, ts->recv2.num, tcp_rcv_usr(ts)
#define CI_ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))
#define CI_TCP_OOB_FLAGS (CI_TCP_FLAG_SYN|CI_TCP_FLAG_FIN| CI_TCP_FLAG_RST|CI_TCP_FLAG_ECE| CI_TCP_FLAG_CWR)
#define PF_CAN 29
#define CI_IP4_MAKE_OFFSET(off) (CI_BSWAP_BE16((off)>>3) & CI_IP4_OFFSET_MASK)
#define NLM_F_ACK 0x04
#define __BEGIN_DECLS 
#define ETH_P_TSN 0x22F0
#define __LDBL_MANT_DIG__ 64
#define ___int_ptrdiff_t_h 
#define N_PROFIBUS_FDL 10
#define SEGV_PKUERR SEGV_PKUERR
#define S_IFSOCK __S_IFSOCK
#define __SIZEOF_PTHREAD_MUTEXATTR_T 4
#define OO_FDFLAG_EP_UDP 0x04
#define CI_CACHE_LINE_SIZE 64
#define NU_PRI_ARGS(n,u) NI_ID(n), S_FMT(u)
#define OO_IOC_CP_DUMP_HWPORTS OO_IOC_W(CP_DUMP_HWPORTS, ci_ifid_t)
#define __OPEN_NEEDS_MODE(oflag) (((oflag) & O_CREAT) != 0 || ((oflag) & __O_TMPFILE) == __O_TMPFILE)
#define MAP_FILE 0
#define SIOCSRARP 0x8962
#define SCNuFAST64 __PRI64_PREFIX "u"
#define CI_NETIF_ERROR_UDP_SEND_PKTS_LIST 0x04
#define __FLT64_HAS_INFINITY__ 1
#define CI_PRIx64 PRIx64
#define TRANSPORT_CONFIG_OPT_HDR <ci/internal/transport_config_opt_extra.h>
#define CI_SOCK_MIN_RCVBUF 256
#define CI_EPLOCK_NETIF_UNLOCK_FLAGS 0xff3b800000000000ULL
#define false 0
#define IPV6_JOIN_GROUP 20
#define POLL_HUP POLL_HUP
#define ETH_P_MRP 0x88E3
#define ID_TO_TCP(ni,id) ID_TO_foo((ni), (id), TCP)
#define _STRING_H 1
#define CI_IP6_PRIORITY(ip) ((ip)->prio_version & 0xf)
#define __GNUC_VA_LIST 
#define _GCC_MAX_ALIGN_T 
#define __SI_ASYNCIO_AFTER_SIGIO 1
#define ci_ip_csum_copy_aligned ci_ip_csum_copy_aligned_c
#define CI_IP_SOCK_STATS_INC_PAWSERR(ts) __CI_SOCK_STATS_INC( (ts), rx_pawserr )
#define WSTOPPED 2
#define OO_INTF_I_SEND_VIA_OS CI_CFG_MAX_INTERFACES
#define CI_SB_AFLAG_IN_PASSIVE_CACHE_BIT 15u
#define FEP_FMT "%s: "EP_FMT" "
#define _XOPEN_REALTIME 1
#define ci_fifo2_capacity(f) ((f)->fifo_mask + 1u)
#define CI_TCP_EXT_STATS_INC_TCP_LOSS_UNDO(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_loss_undo )
#define assert(expr) (__ASSERT_VOID_CAST (0))
#define _BITS_CPU_SET_H 1
#define LINUX_VERSION_SUBLEVEL 12
#define ETH_P_MCTP 0x00FA
#define ETH_P_DSA_A5PSW 0xE001
#define FILENAME_MAX 4096
#define SOL_RXRPC 272
#define tcp_protocol(ts) sock_protocol(&(ts)->s)
#define _SC_PII_INTERNET _SC_PII_INTERNET
#define CITP_SCALABLE_MODE_PASSIVE 0x4
#define IPPROTO_RAW IPPROTO_RAW
#define __ino_t_defined 
#define CI_IP_CACHE_IS_LOCALROUTE 1
#define __k8__ 1
#define CI_CFG_TCP_OUT_OF_WINDOW_ACK_RATELIMIT 500
#define IP_DROP_SOURCE_MEMBERSHIP 40
#define __UINT16_TYPE__ short unsigned int
#define __CLOCKID_T_TYPE __S32_TYPE
#define ci_unreachable __builtin_unreachable
#define _LINUX_IOCTL_H 
#define S_TCP_HDR(s) ((ci_tcp_hdr*) (&(s)->pkt.ipx.ip4 + 1))
#define SOL_MPTCP 284
#define OO_P_DLLINK_ASSERT_EMPTY(ni,l) oo_p_dllink_assert_empty(ni, l, __FILE__, __LINE__)
#define PRIiPTR __PRIPTR_PREFIX "i"
#define _POSIX_MEMLOCK_RANGE 200809L
#define CI_TCP_EXT_STATS_INC_TCP_SACK_FAILURES(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_sack_failures )
#define FNT_PRI_ARGS(n,t) __FUNCTION__, NT_PRI_ARGS((n),(t))
#define S_IEXEC S_IXUSR
#define CI_UNIX_FORK_NETIF_BOTH 3
#define ELIBEXEC 83
#define CI_TCP_SYN_SENT (0x2000 | CI_TCP_STATE_TCP | CI_TCP_STATE_TCP_CONN | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_NOT_CONNECTED | CI_TCP_STATE_TXQ_ACTIVE)
#define NETLINK_DROP_MEMBERSHIP 2
#define CICP_ROWID_IS_VALID(id) ((cicp_rowid_t)(id) >= 0)
#define _ULL(x) (_AC(x, ULL))
#define CI_ILL_NAME_DECLARE 
#define __UINTPTR_MAX__ 0xffffffffffffffffUL
#define __INT_FAST64_WIDTH__ 64
#define OOFA_IPCACHE_DETAIL(ipc) (ipc)->ifindex, (ipc)->mtu, (ipc)->intf_i, (ipc)->encap.vlan_id, (ipc)->encap.type, (ipc)->fwd_ver.id, (ipc)->fwd_ver.version
#define N_R3964 9
#define CI_MEMBER_OFFSET __builtin_offsetof
#define CI_CFG_CLUSTER_NAME_LEN (CI_CFG_STACK_NAME_LEN >> 1)
#define _SC_CLOCK_SELECTION _SC_CLOCK_SELECTION
#define INT_LEAST64_MIN (-__INT64_C(9223372036854775807)-1)
#define __CI_NET_IPVX_H__ 
#define SI_ASYNCIO SI_ASYNCIO
#define NL_MMAP_MSG_ALIGN(sz) __ALIGN_KERNEL(sz, NL_MMAP_MSG_ALIGNMENT)
#define OO_PKT_PP_INIT(pkt,iid) ((pkt)->pp = (ci_int32) (iid))
#define __BYTE_ORDER __LITTLE_ENDIAN
#define _BITS_UIO_LIM_H 1
#define CI_NETIF_FLAG_DO_ALLOCATE_SCALABLE_FILTERS_RSS 0x2
#define _STDINT_H 1
#define CI_IP_SOCK_STATS_VAL_TXWIN(ts,w) __CI_SOCK_STATS_VAL((ts), tx_win, (w))
#define EADDRNOTAVAIL 99
#define ETIME 62
#define _NETDB_H 1
#define ETH_P_ARCNET 0x001A
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define EF_EVENT_TX_ERROR_TYPE(e) ((e).tx_error.subtype)
#define __FLT_DIG__ 6
#define __FSID_T_TYPE struct { int __val[2]; }
#define __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F
#define ci_assert_ge(exp1,exp2) _ci_assert_ge(exp1, exp2, __FILE__, __LINE__)
#define INT_FAST32_MAX (9223372036854775807L)
#define MCL_FUTURE 2
#define CI_PKT_FLAGS_PRI_ARG(pkt) __CI_PKT_FLAGS_PRI_ARG((pkt)->flags)
#define ETH_P_PPPTALK 0x0010
#define CHECK_UEP(ep) 
#define _SC_NL_SETMAX _SC_NL_SETMAX
#define __FLT64X_MAX_EXP__ 16384
#define _SC_SS_REPL_MAX _SC_SS_REPL_MAX
#define __UINT_FAST64_TYPE__ long unsigned int
#define ETHER_MIN_LEN (ETH_ZLEN + ETHER_CRC_LEN)
#define TIOCSPTLCK _IOW('T', 0x31, int)
#define CI_CFG_MAX_LOCAL_IPADDRS 256
#define ci_ss_assertfl(netif,x,file,line) _ci_assert(x, file, line)
#define EF_CTPIO_MODE_SF 0
#define NTF_PRI_ARGS(n,t,fd) NI_ID(n), S_FMT(t), FD_PRI_ARGS(fd)
#define CI_TCP_SOCKET_FLAGS_FMT "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
#define __LDBL_REDIR_DECL(name) 
#define CI_IPX_ADDR_PTR(af,addr) ((af) == AF_INET6 ? NULL : (void*)(&(addr).ip4))
#define _BITS_STDINT_LEAST_H 1
#define RX_PKT_TTL(pkt) ipx_hdr_ttl(oo_pkt_af(pkt), RX_PKT_IPX_HDR(pkt))
#define IPPROTO_MPTCP IPPROTO_MPTCP
#define STDIN_FILENO 0
#define __GCC_CONSTRUCTIVE_SIZE 64
#define __BFLT16_MIN_EXP__ (-125)
#define __INT_MAX__ 0x7fffffff
#define S_IXUSR __S_IEXEC
#define _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
#define _POSIX_ADVISORY_INFO 200809L
#define CI_IP_ADDR(ipa,ipb,ipc,ipd) (((ipa) | ((ipb) << 8) | ((ipc) << 16) | ((ipd) << 24)))
#define S_IWOTH (S_IWGRP >> 3)
#define si_band _sifields._sigpoll.si_band
#define UINT8_MAX (255)
#define LOG_STATS(x) LOG_FL(CI_TP_LOG_STATS, x)
#define _BITS_SIGACTION_H 1
#define _GCC_SIZE_T 
#define CI_CFG_TEAMING 1
#define IPV6_RTHDR 57
#define ETH_P_DEC 0x6000
#define SOCK_CLOEXEC SOCK_CLOEXEC
#define CI_PKT_FLAG_TX_TIMESTAMPED 0x0400
#define SEQ_EQ(s1,s2) ((ci_uint32)((s1) - (s2)) == 0u)
#define _T_SIZE_ 
#define __ALIGN_KERNEL_MASK(x,mask) (((x) + (mask)) & ~(mask))
#define __CPU_SETSIZE 1024
#define ENOTRECOVERABLE 131
#define ETH_P_FIP 0x8914
#define UINT_FAST8_MAX (255)
#define PF_ATMSVC 20
#define CI_BSWAP_LE16(v) (v)
#define ETH_P_802_2 0x0004
#define ETH_P_802_3 0x0001
#define __FD_SET(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] |= __FD_MASK(d)))
#define TIOCMIWAIT 0x545C
#define LOG_AR(x) LOG_FL(CI_TP_LOG_AR, x)
#define LOG_AT(x) LOG_FL(CI_TP_LOG_AT, x)
#define CI_NORETURN __attribute__((noreturn)) void
#define CI_CFG_TCP_RCVBUF_DEFAULT 87380
#define NLMSG_ERROR 0x2
#define __WNOTHREAD 0x20000000
#define ci_fifo2_is_full(f) (ci_fifo2_num(f) == ci_fifo2_capacity(f))
#define AF_LLC PF_LLC
#define IFF_PROMISC IFF_PROMISC
#define __INT64_TYPE__ long int
#define CI_SOCKOPT_FLAG_IP_RECVERR 0x2
#define ci_assert_lt(exp1,exp2) _ci_assert_lt(exp1, exp2, __FILE__, __LINE__)
#define EIO 5
#define SIOCGIFNETMASK 0x891b
#define ETH_P_LLDP 0x88CC
#define CLOCK_PROCESS_CPUTIME_ID 2
#define oo_pktq_not_empty(q) ((q)->num)
#define SEQ_GE(s1,s2) ((ci_int32)((s1) - (s2)) >= 0)
#define CI_TCP_LISTEN (0x1000 | CI_TCP_STATE_TCP | CI_TCP_STATE_SLOW_PATH | CI_TCP_STATE_NOT_CONNECTED | CI_TCP_STATE_NO_TIMERS)
#define _SC_AIO_PRIO_DELTA_MAX _SC_AIO_PRIO_DELTA_MAX
#define __glibc_unlikely(cond) __builtin_expect ((cond), 0)
#define ENETUNREACH 101
#define EXDEV 18
#define SEQ_GT(s1,s2) ((ci_int32)((s1) - (s2)) > 0)
#define _SC_PHYS_PAGES _SC_PHYS_PAGES
#define CI_IPTIME_WHEELSIZE (CI_IPTIME_WHEELS*CI_IPTIME_BUCKETS)
#define CI_BSWAP_LE32(v) (v)
#define _SC_ADVISORY_INFO _SC_ADVISORY_INFO
#define UINT32_C(c) c ## U
#define CI_CFG_PROC_PATH "/proc/sys/"
#define TIOCPKT 0x5420
#define TTYDEF_LFLAG (ECHO | ICANON | ISIG | IEXTEN | ECHOE|ECHOKE|ECHOCTL)
#define ci_fifo_wr_retreat(f,n) do{(f)->fifo_wr_i=CI_FIFO_M((f),(f)->fifo_wr_i+(f)->fifo_size-(n));}while(0)
#define TIME_GE(x,y) ((ci_int32)((x)-(y)) >= 0)
#define ETH_P_1588 0x88F7
#define CMIN 1
#define PF_PACKET 17
#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE
#define MSG_SYN MSG_SYN
#define __INO64_T_TYPE __UQUAD_TYPE
#define ci_irqlock_ctor_i(l) pthread_mutex_init(l, 0)
#define LOG_DR(x) LOG_FL(CI_TP_LOG_DR, x)
#define LOG_DU(x) LOG_DC((ci_tp_log&CI_TP_LOG_DU)&& !(ci_tp_log&CI_TP_LOG_DR), x)
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define _POSIX_TRACE -1
#define OO_IOC_INSTALL_STACK_BY_ID OO_IOC_W(INSTALL_STACK_BY_ID, oo_stack_lookup_and_attach_t)
#define ESRCH 3
#define PF_ROUTE PF_NETLINK
#define INT_FAST32_MIN (-9223372036854775807L-1)
#define __WINT_TYPE__ unsigned int
#define LNTF_PRI_ARGS NTF_PRI_ARGS
#define _POSIX_FSYNC 200809L
#define SIOCSIFNAME 0x8923
#define STDOUT_FILENO 1
#define CI_SLEEP_SOCK_RQ 0x8
#define OO_STRINGIFY(x) OO_STRINGIFY1(x)
#define CI_IP_SOCK_STATS_INC_SYNBADACK(ts) __CI_SOCK_STATS_INC( (ts), rx_synbadack )
#define __intptr_t_defined 
#define CITP_SCALABLE_MODE_NONE 0x0
#define NLMSG_NEXT(nlh,len) ((len) -= NLMSG_ALIGN((nlh)->nlmsg_len), (struct nlmsghdr *)(((char *)(nlh)) + NLMSG_ALIGN((nlh)->nlmsg_len)))
#define SOL_PACKET 263
#define ETHERTYPE_IPX 0x8137
#define EP_FMT "%d:%d"
#define ipcache_protocol(ipcache) ((ipcache)->ipx.ip4.ip_protocol)
#define CI_BSWAP_LE64(v) (v)
#define ci_seq_neq(a,b,bits) (((a) - (b)) & ((1u << (bits)) - 1))
#define CI_SB_AFLAG_DEFERRED 0x4
#define CI_ILL_END -1
#define ETH_P_ETHERCAT 0x88A4
#define EREMOTEIO 121
#define CI_HAVE_ADDC32 
#define CI_MEMBER_SIZE(c_type,mbr_name) sizeof(((c_type*)0)->mbr_name)
#define CI_PMTU_TIMER_SET_FAST(ni,p) ci_pmtu_discover_timer((ni), (p), NI_CONF(ni).tconst_pmtu_discover_fast)
#define ENOEXEC 8
#define SEQ_LT(s1,s2) ((ci_int32)((s1) - (s2)) < 0)
#define N_HDLC 13
#define __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL
#define _POSIX_THREAD_PRIO_INHERIT 200809L
#define OOFA_IPXPORT(ip,port) OOFA_IPX(ip), OOFA_PORT(port)
#define EOF (-1)
#define __extern_inline extern __inline __attribute__ ((__gnu_inline__))
#define OO_FDFLAG_EP_PASSTHROUGH 0x08
#define SO_RCVBUF 8
#define __CI_TOOLS_CONFIG_H__ 
#define CI_SOCK_FLAG_TCP_INHERITED (CI_SOCK_FLAG_KALIVE | CI_SOCK_FLAG_OOBINLINE | CI_SOCK_FLAG_LINGER | CI_SOCK_FLAG_PMTU_DO | CI_SOCK_FLAG_ALWAYS_DF | CI_SOCK_FLAG_BROADCAST | CI_SOCK_FLAG_SET_SNDBUF | CI_SOCK_FLAG_SET_RCVBUF | CI_SOCK_FLAG_AUTOFLOWLABEL_REQ | CI_SOCK_FLAG_AUTOFLOWLABEL_OPT | CI_SOCK_FLAG_IP6_PMTU_DO | CI_SOCK_FLAG_IP6_ALWAYS_DF)
#define TCSBRKP 0x5425
#define CI_IP_SOCK_STATS_VAL_RTT_SRTT_RTO(ts,r,s,o) do { __CI_SOCK_STATS_VAL((ts), rtt, (r)); __CI_SOCK_STATS_VAL((ts), srtt, (s)); __CI_SOCK_STATS_VAL((ts), rto, (o)); } while(0)
#define OO_IOC_MOVE_FD OO_IOC_W(MOVE_FD, ci_fixed_descriptor_t)
#define __INT_LEAST32_TYPE__ int
#define TIOCM_CD TIOCM_CAR
#define NI_IPID(ni) (&(ni)->state->ipid)
#define CI_TCP_RETRANSMIT_THRESHOLD_ORPHAN 8
#define ONLOAD_MSG_ONEPKT 0x20000
#define ci_fifo2_put(f,v) do{ ci_fifo2_poke(f) = (v); ci_fifo2_wr_next(f); }while(0)
#define __SIZEOF_INT128__ 16
#define SOL_CAIF 278
#define __FLT16_MIN__ 6.10351562500000000000000000000000000e-5F16
#define SOF_TIMESTAMPING_OOEXT_LAST (1U << 31)
#define __CI_COMPAT_PRIMITIVE_H__ 
#define __BLKCNT64_T_TYPE __SQUAD_TYPE
#define CI_IP4_SET_FRAG_OFFSET(ip,off) do { (ip)->ip_frag_off_be16 = ((ip)->ip_frag_off_be16 & ~CI_IP4_OFFSET_MASK) | ( CI_BSWAP_BE16((off)) & CI_IP4_FRAG_OFFSET); } while(0)
#define __LDBL_MAX_10_EXP__ 4932
#define _POSIX_SEMAPHORES 200809L
#define CI_IP6_OFFSET 0xFFF8
#define __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
#define MADV_NOHUGEPAGE 15
#define __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
#define CHECK_TS(ni,ts) 
#define PTHREAD_PROCESS_PRIVATE PTHREAD_PROCESS_PRIVATE
#define SA_ONESHOT SA_RESETHAND
#define ci_ss_assert_gt(ni,x,y) ci_ss_assert2((ni), (x)> (y), x, y)
#define SCM_TIMESTAMPING_OPT_STATS 54
#define le16toh(x) __uint16_identity (x)
#define EDOM 33
#define SO_PEERGROUPS 59
#define ci_lock_ctor_i(l) pthread_mutex_init(l, 0)
#define SIOCSIFBR 0x8941
#define ENOSTR 60
#define to_fixed_descriptor(desc) ((ci_fixed_descriptor_t)(ci_uintptr_t)(desc))
#define EFRM_VERIFY_EQ(expr,val) expr
#define OO_OS_STATUS_ERR 4
#define SIOCSPGRP 0x8902
#define ci_calloc calloc
#define INADDR_NONE ((in_addr_t) 0xffffffff)
#define CMSG_SPACE(len) (CMSG_ALIGN (len) + CMSG_ALIGN (sizeof (struct cmsghdr)))
#define NI_PKT_SET(ni) ((ni)->packets->id)
#define ipcache_laddr(ipcache) CI_ADDR_FROM_IP4((ipcache)->ipx.ip4.ip_saddr_be32)
#define _SC_THREAD_SPORADIC_SERVER _SC_THREAD_SPORADIC_SERVER
#define SIGKILL 9
#define ci_irqlock_check_locked_dbg(l,fl,ln) 
#define CICP_ROWID_BAD ((cicp_rowid_t)(-1))
#define OO_MMAP_TYPE_NETIF 0
#define IPPROTO_DSTOPTS IPPROTO_DSTOPTS
#define __CI_NET_SOCKOPTS_H__ 
#define CI_UL_LOG_VV 0x20000
#define CWERASE CTRL('w')
#define ECHRNG 44
#define _SC_REGEXP _SC_REGEXP
#define EHOSTDOWN 112
#define CI_SELECT_EXCEPT 0x4
#define _LFS_LARGEFILE 1
#define CI_TCP_WSCL_MAX 14
#define EFAB_NIC_DP_DEFAULT_rx_frame_offset 64
#define __wchar_t__ 
#define SIOCGIFCONF 0x8912
#define SEEK_END 2
#define __SIZEOF_WCHAR_T__ 4
#define SP_TO_PIPE(ni,sp) SP_TO_foo((ni), (sp), struct oo_pipe)
#define OO_INTF_I_DUMP_NO_MATCH 2
#define CI_CFG_PROC_PATH_LEN_MAX 70
#define __GNUC_PATCHLEVEL__ 0
#define LOG_NR(x) LOG_FL(CI_TP_LOG_NR, x)
#define SCNiFAST16 __PRIPTR_PREFIX "i"
#define LOG_NV(x) LOG_FL(CI_TP_LOG_NV, x)
#define ENOLCK 37
#define CI_CFG_DETAILED_CHECKS 0
#define NI_LOG(ni,lg,...) do { if( NI_OPTS(ni).log_category & 1 << (EF_LOG_ ## lg) ) ci_log(__VA_ARGS__); } while( 0 );
#define ENFILE 23
#define MSG_DONTWAIT MSG_DONTWAIT
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS _CS_XBS5_ILP32_OFFBIG_CFLAGS
#define oo_pktq_init(q) do { (q)->head = (q)->tail = OO_PP_NULL; (q)->num = 0; } while(0)
#define __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define CI_SOCK_AFLAG_NODELAY_BIT 9u
#define CI_CFG_FD_CACHING 1
#define ef_vi_transmit_copy_pio_warm(vi,pio_offset,src_buf,len) (vi)->ops.transmit_copy_pio_warm((vi), (pio_offset), (src_buf), (len))
#define ci_atomic_add(a,v) ci_atomic32_add((ci_uint32*) &(a)->n, (v))
#define __CPU_ZERO_S(setsize,cpusetp) do __builtin_memset (cpusetp, '\0', setsize); while (0)
#define sock_ipx_raddr(s) ipcache_raddr(&(s)->pkt)
#define _XOPEN_UNIX 1
#define EF_EVENT_TX_ALT_Q_ID(e) ((e).tx_alt.q_id)
#define SCNiFAST32 __PRIPTR_PREFIX "i"
#define CI_UL_LOG_VSS 0x100
#define S_FMT(ss) OO_SP_FMT(S_SP(ss))
#define TCSBRK 0x5409
#define be64toh(x) __bswap_64 (x)
#define CI_CFG_TCP_MINIMUM_MSS 64
#define ENOSYS 38
#define _SC_LOGIN_NAME_MAX _SC_LOGIN_NAME_MAX
#define SA_RESTART 0x10000000
#define TIOCSERGWILD 0x5454
#define sock_cp_ttl_hoplimit(af,cp) ( WITH_CI_CFG_IPV6( IS_AF_INET6(af) ? (cp)->hop_limit : ) (cp)->ip_ttl )
#define MADV_SEQUENTIAL 2
#define UDP_RX_ERRNO(us) (SOCK_RX_ERRNO(&(us)->s))
#define __ONLOAD_IOCTL__DSHM_H__ 
#define ci_lock_unlock_dbg(l,fl,ln) ci_lock_unlock_i(l)
#define __INT_FAST8_TYPE__ signed char
#define CICP_FWD_DATA_FLAG_ARG(flags) ((flags) & CICP_FWD_DATA_FLAG_ARP_VALID) ? "valid" : ((flags) & CICP_FWD_DATA_FLAG_ARP_FAILED) ? "failed" : "invalid"
#define PF_RDS 21
#define FIONCLEX 0x5450
#define TIOCM_LE 0x001
#define OO_FDFLAG_EP_MASK 0x7e
#define ci_istack_valid(s) ((s) && (s)->istack_base && (s)->istack_size >= 0 && (s)->istack_ptr >= 0 && (s)->istack_ptr <= (s)->istack_size )
#define ETH_P_SLOW 0x8809
#define CI_SELECT_READABLE 0x1
#define __EFAB_INTERNAL_H__ 
#define __ASM_GENERIC_IOCTLS_H 
#define va_arg(v,l) __builtin_va_arg(v,l)
#define OO_IOC_TCP_ACCEPT_SOCK_ATTACH OO_IOC_RW(TCP_ACCEPT_SOCK_ATTACH, oo_tcp_accept_sock_attach_t)
#define PTR_ERR_OR_ZERO(ptr) (IS_ERR(ptr) ? PTR_ERR(ptr) : 0)
#define __ONLOAD_EXTENSIONS_H__ 
#define OO_IOC_DESIGN_PARAMETERS OO_IOC_RW(DESIGN_PARAMETERS, oo_design_parameters_t)
#define AT_REMOVEDIR 0x200
#define SCNiFAST64 __PRI64_PREFIX "i"
#define __GLIBC_USE_ISOC2X 0
#define __f128(x) x ##f128
#define _SS_PADSIZE (_SS_SIZE - __SOCKADDR_COMMON_SIZE - sizeof (__ss_aligntype))
#define __UINT32_C(c) c ## U
#define SCNxMAX __PRI64_PREFIX "x"
#define SO_BUF_LOCK 72
#define NLA_F_NESTED (1 << 15)
#define OO_IOC_CP_LINK OO_IOC_NONE(CP_LINK)
#define __ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)
#define _POSIX_SAVED_IDS 1
#define ci_phys_addr_fmt "%lx"
#define TIOCOUTQ 0x5411
#define __CI_NET_IPV6_H__ 
#define CI_PKT_FLAG_RX 0x0200
#define LOG_TE(x) LOG_FL(CI_TP_LOG_TE, x)
#define LOG_TL(x) LOG_FL(CI_TP_LOG_TL, x)
#define LOG_TO(x) LOG_FL(CI_TP_LOG_TO, x)
#define LOG_TR(x) LOG_FL(CI_TP_LOG_TR, x)
#define LOG_TT(x) LOG_FL(CI_TP_LOG_TT, x)
#define LOG_TV(x) LOG_FL(CI_TP_LOG_TV, x)
#define __HAVE_DISTINCT_FLOAT32 0
#define ci_fifo_capacity(f) ((f)->fifo_size - 1u)
#define ENOTSUP EOPNOTSUPP
#define IP_CHECKSUM 23
#define CI_RLLOG(LIMIT,...) do { static int rate_limit = LIMIT; ci_rllog(&rate_limit, __VA_ARGS__); } while(0)
#define __kernel_old_uid_t __kernel_old_uid_t
#define CI_CFG_NETIF_MAX_ENDPOINTS_MAX (1<<21)
#define LOG_UC(x) LOG_FL(CI_TP_LOG_UC, x)
#define _BITS_SIGTHREAD_H 1
#define LTF_FMT LPF "%d/"FD_FMT" "
#define CI_TCPT_FLAG_STRIPE 0x10
#define LTFS_PRI_ARGS TFS_PRI_ARGS
#define CI_TCP_EXT_STATS_INC_TCP_PARTIAL_UNDO(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_partial_undo )
#define __FLT16_HAS_DENORM__ 1
#define _BITS_TYPES___LOCALE_T_H 1
#define LOG_UR(x) LOG_FL(CI_TP_LOG_UR, x)
#define __STDC_UTF_32__ 1
#define _BITS_STDIO_LIM_H 1
#define LOG_UV(x) LOG_FL(CI_TP_LOG_UV, x)
#define __INT_FAST8_WIDTH__ 8
#define CI_UDP_PAYLOAD(hdr) ((char*) &(hdr)->udp_check_be16 + 2)
#define __FXSR__ 1
#define EDEADLOCK EDEADLK
#define CLD_DUMPED CLD_DUMPED
#define __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define SIGEV_SIGNAL SIGEV_SIGNAL
#define PRIxFAST8 "x"
#define WEXITSTATUS(status) __WEXITSTATUS (status)
#define __ULONG32_TYPE unsigned int
#define __ONLOAD_DEBUG_INTF_H__ 
#define TIOCSERSETMULTI 0x545B
#define ETH_P_TIPC 0x88CA
#define IN6_IS_ADDR_SITELOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfec00000); }))
#define CI_CFG_CTPIO 1
#define EFAB_NIC_DP_DEFAULT_md_location 0
#define CI_UDPF_NO_MCAST_B2D 0x00000100
#define CI_CFG_CONG_AVOID_NOTIFIED 0
#define OO_TS_FLAG_CLOCK_IN_SYNC EF_VI_SYNC_FLAG_CLOCK_IN_SYNC
#define FOPEN_MAX 16
#define __CI_TOOLS_LOG2_H__ 
#define ci_irqlock_dtor_i(l) pthread_mutex_destroy(l)
#define __S_TYPEISMQ(buf) ((buf)->st_mode - (buf)->st_mode)
#define __suseconds_t_defined 
#define IOCSIZE_SHIFT (_IOC_SIZESHIFT)
#define __INDIRECT_RETURN __attribute__ ((__indirect_return__))
#define CSTART CTRL('q')
#define __off_t_defined 
#define CI_EF_UDP_UL_POLL_S 4
#define CI_PKT_FLAG_RTQ_RETRANS 0x0004
#define IP_MTU_DISCOVER 10
#define NLMSG_MIN_TYPE 0x10
#define ci_istack_space(s) ((s)->istack_size - (s)->istack_ptr)
#define IPPROTO_FRAGMENT IPPROTO_FRAGMENT
#define NTS_PRI_ARGS(n,t) NI_ID(n), S_FMT(t), ci_tcp_state_str((t)->s.b.state)
#define _SC_LEVEL1_DCACHE_ASSOC _SC_LEVEL1_DCACHE_ASSOC
#define CITP_EPOLL_UL_SCALE 3
#define __CI_SOCK_STATS_ADD(ts,Fld,v) 
#define SIGPWR 30
#define _BITS_TYPESIZES_H 1
#define TIOCM_SR 0x010
#define TIOCM_ST 0x008
#define CICP_FWD_FLAG_DATA_VALID 0x40
#define CI_BITS_DECLARE(name,n) ci_bits name[((n) + CI_BITS_N - 1u) / CI_BITS_N]
#define __SO_L5_BASE 0x55500
#define ci_atomic_and(a,v) ci_atomic32_and((ci_uint32*) &(a)->n, (v))
#define __CPU_ALLOC(count) __sched_cpualloc (count)
#define ETH_P_IPV6 0x86DD
#define ETH_P_BATMAN 0x4305
#define _POSIX_THREAD_PRIO_PROTECT 200809L
#define CI_SO_L5_DUMP_NETIF_STATS (__SO_L5_BASE+0x04)
#define TIOCINQ FIONREAD
#define UDP_IS_SHUT_WR(us) ((us)->s.rx_errno & CI_SHUT_WR)
#define __U64_TYPE unsigned long int
#define L_SET 0
#define NLA_TYPE_MASK ~(NLA_F_NESTED | NLA_F_NET_BYTEORDER)
#define LNT_PRI_ARGS NT_PRI_ARGS
#define OO_P_FMT(p) ((int) (p))
#define SO_SNDTIMEO_OLD 21
#define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))
#define CI_TEST_ETHPKT_MIN_LEN (sizeof(ci_test_ethpkt_t) + 4)
#define __INTMAX_MAX__ 0x7fffffffffffffffL
#define _XOPEN_XCU_VERSION 4
#define _SC_INT_MAX _SC_INT_MAX
#define __size_t__ 
#define __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
#define OO_PP_NOT_NULL(pp) ((pp) >= 0)
#define __CI_TOOLS_PLATFORM_UL_COMMON_H__ 
#define CI_SLLIST_FOR_EACH2(c_type,p_c,lnk_mbr,p_list) for( (p_c) = (p_list)->head ? CI_CONTAINER(c_type, lnk_mbr, (p_list)->head) : 0; (p_c) != 0; (p_c) = ((p_c)->lnk_mbr).next ? CI_CONTAINER(c_type, lnk_mbr, ((p_c)->lnk_mbr).next) : 0 )
#define MAP_HUGETLB 0x40000
#define ci_lock_dtor(l) ci_lock_dtor_dbg(l, __FILE__, __LINE__)
#define CI_BSWAP_16(v) ci_bswap16((ci_uint16) (v))
#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
#define CI_IP4_SET_FRAG_MORE(ip) (ip)->ip_frag_off_be16 |= CI_IP4_FRAG_MORE
#define LOG_SSA(x) LOG_E(x)
#define PRIoPTR __PRIPTR_PREFIX "o"
#define TX_PKT_SET_SADDR(af,pkt,addr) ipx_hdr_set_saddr(af, TX_PKT_IPX_HDR(af, pkt), (addr))
#define SIOCGSTAMPNS_OLD 0x8907
#define IP_MINTTL 21
#define __TIME64_T_TYPE __TIME_T_TYPE
#define __POSIX_FADV_DONTNEED 4
#define TIOCMBIS 0x5416
#define ci_assert_impl(exp1,exp2) _ci_assert_impl(exp1, exp2, __FILE__, __LINE__)
#define from_fixed_descriptor(desc) ((ci_uintptr_t)(desc))
#define CI_IP6_PRINTF_ARGS(ip) ip[0], ip[1], ip[2], ip[3], ip[4], ip[5], ip[6], ip[7], ip[8], ip[9], ip[10], ip[11], ip[12], ip[13], ip[14], ip[15]
#define _SC_SYNCHRONIZED_IO _SC_SYNCHRONIZED_IO
#define RCV_WND_ARGS(ts) tcp_rcv_nxt(ts), ts->ack_trigger, tcp_rcv_nxt(ts)+tcp_rcv_wnd_advertised(ts), tcp_rcv_nxt(ts)+tcp_rcv_wnd_current(ts), tcp_rcv_wnd_advertised(ts)
#define _ci_assert_nflags(exp1,exp2,file,line) do{}while(0)
#define CI_TCP_STATS_DEC_CURR_ESTAB(netif) __CI_TCP_COUNT_STATS_DEC( (netif), tcp_curr_estab)
#define NUD_STALE 0x04
#define CI_DLLIST_FOR_EACH(p_lnk,p_list) for( (p_lnk) = ci_dllist_start(p_list); ((p_lnk) != ci_dllist_end(p_list)) || ((p_lnk) = 0,0); ci_dllist_iter(p_lnk) )
#define SO_TIMESTAMP_NEW 63
#define SF_FMT "%d:%d/"FD_FMT
#define CP_LLAP_LICENSED_ONLOAD_ULL 0x00000040u
#define _CS_XBS5_LPBIG_OFFBIG_LIBS _CS_XBS5_LPBIG_OFFBIG_LIBS
#define _PATH_PROTOCOLS "/etc/protocols"
#define AF_DECnet PF_DECnet
#define _SC_LEVEL4_CACHE_ASSOC _SC_LEVEL4_CACHE_ASSOC
#define ci_tcp_time_ms2ticks(ni,x) ci_ip_time_ms2ticks(ni, (x))
#define _SC_XOPEN_SHM _SC_XOPEN_SHM
#define __LONG_WIDTH__ 64
#define __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
#define __STDLIB_MB_LEN_MAX 16
#define CI_TCPI_OPT_TIMESTAMPS 1
#define MAP_ABOVE4G 0x80
#define sock_laddr_be32(s) ((s)->laddr.ip4)
#define CI_UL_LOG_VTC 0x20000000
#define __attribute_returns_twice__ __attribute__ ((__returns_twice__))
#define SIG_ERR ((__sighandler_t) -1)
#define AI_NUMERICHOST 0x0004
#define __S_IFIFO 0010000
#define CI_CFG_TCP_INVALID_OPT_RST 1
#define SCM_SRCRT IPV6_RXSRCRT
#define CI_IP_TIME_MAX_FRCSHIFT 31u
#define __INO_T_MATCHES_INO64_T 1
#define __BFLT16_MAX_10_EXP__ 38
#define _LINUX_IF_ETHER_H 
#define udp_ipx_raddr(us) sock_ipx_raddr(&(us)->s)
#define __POSIX_FADV_NOREUSE 5
#define __CHAR32_TYPE__ unsigned int
#define ENOPROTOOPT 92
#define TIOCCONS 0x541D
#define EF_LOG_USAGE_WARNINGS 4
#define CI_CFG_TIME_WAIT_ASSASSINATE 1
#define SO_ATTACH_BPF 50
#define CI_CFG_PROC_LINE_LEN_MAX 1025
#define CONFIG_LOG(opts,lg,...) do { if( (opts)->log_category & 1 << (EF_LOG_ ## lg) ) ci_log(__VA_ARGS__); } while( 0 );
#define __GLIBC_USE_IEC_60559_EXT 0
#define CTIME 0
#define OO_IOC_VI_STATS_QUERY OO_IOC_RW(VI_STATS_QUERY, ci_vi_stats_query_t)
#define EPROTONOSUPPORT 93
#define __blkcnt_t_defined 
#define __HAVE_FLOAT128 1
#define FIONREAD 0x541B
#define ECOMM 70
#define UINT_LEAST32_MAX (4294967295U)
#define __FLT16_DIG__ 3
#define EMFILE 24
#define CI_TCPI_OPT_WSCALE 4
#define CDSUSP CTRL('y')
#define EBADRQC 56
#define SO_BUSY_POLL_BUDGET 70
#define OO_IOC_TCP_LISTEN_OS_SOCK OO_IOC_W(TCP_LISTEN_OS_SOCK, ci_int32)
#define CI_CFG_SUPPORT_STATS_COLLECTION 1
#define OO_TIMEOUT_Q_MAX 2
#define CI_IP_TIMER_DEBUG_HOOK 0x9
#define CI_EPLOCK_NETIF_KERNEL_PACKETS 0x0020000000000000ULL
#define SCNxLEAST8 "hhx"
#define OO_FDFLAG_EP_PIPE_WRITE 0x40
#define SA_NODEFER 0x40000000
#define CI_DBG_NETIF_INFO_GET_ENDPOINT_STATE 2
#define __EFAB_PIO_H__ 
#define CI_CFG_TIMESTAMPING 1
#define __lldiv_t_defined 1
#define POLL_PRI POLL_PRI
#define CICPOS_RETRRC_REQS(retrrc) ((retrrc) & 0xFF00)
#define EF_EVENT_TX_WITH_TIMESTAMP_SYNC_MASK (EF_VI_SYNC_FLAG_CLOCK_SET | EF_VI_SYNC_FLAG_CLOCK_IN_SYNC)
#define SIGILL 4
#define EF_XDP_MODE_DISABLED 0
#define MSG_EOR MSG_EOR
#define ci_fifo2_not_empty(f) ((f)->fifo_rd_i != (f)->fifo_wr_i)
#define N_SLIP 1
#define __STRINGS_FORTIFIED 1
#define PTHREAD_CANCEL_DISABLE PTHREAD_CANCEL_DISABLE
#define _ASSERT_H 1
#define ENOBUFS 105
#define CITP_VFORK_USE_FORK_WITH_PIPE 1
#define CI_IP_STATS_INC_IN6_RECVS(netif) __CI_IP_STATS_INC( (netif), in6_recvs)
#define __FLT_MIN_10_EXP__ (-37)
#define PRId8 "d"
#define CI_CFG_PKTS_PER_SET_S 10u
#define __time_t_defined 1
#define ef_vi_transmitv_ctpio(vi,frame_len,frame_iov,frame_iov_len,ct_threshold) (vi)->ops.transmitv_ctpio((vi), (frame_len), (frame_iov), (frame_iov_len), (ct_threshold))
#define SIOCGIFNAME 0x8910
#define _SC_INT_MIN _SC_INT_MIN
#define OO_IOC_TCP_PKT_WAIT OO_IOC_W(TCP_PKT_WAIT, ci_int32)
#define __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
#define IN_MULTICAST(a) IN_CLASSD(a)
#define NLMSG_OK(nlh,len) ((len) >= (int)sizeof(struct nlmsghdr) && (nlh)->nlmsg_len >= sizeof(struct nlmsghdr) && (nlh)->nlmsg_len <= (len))
#define CI_INET6_ADDRSTRLEN 48
#define NLM_F_ATOMIC 0x400
#define IPPROTO_DCCP IPPROTO_DCCP
#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))
#define SIGINT 2
#define O_DIRECTORY __O_DIRECTORY
#define CI_PKT_FLAG_MSG_WARM 0x0800
#define MSG_FASTOPEN MSG_FASTOPEN
#define _SC_V6_LPBIG_OFFBIG _SC_V6_LPBIG_OFFBIG
#define PKT_RX_BUF_SEQ(pkt) (CI_BSWAP_BE32(PKT_TCP_HDR(pkt)->tcp_seq_be32) + PKT_RX_BUF_OFF(pkt))
#define PF_KCM 41
#define CITP_NETIF_DTOR_NONE 0
#define CI_TCP_ACKS_PENDING_MASK 0x7fff
#define TIOCSER_TEMT 0x01
#define SIGIOT SIGABRT
#define CI_NETIF_ERROR_LOOP_PKTS_LIST 0x02
#define SOL_SMC 286
#define CI_TCP_EXT_STATS_INC_OUT_OF_WINDOW_ICMPS(netif) __CI_TCP_EXT_STATS_INC( (netif), out_of_window_icmps )
#define ETH_P_ERSPAN2 0x22EB
#define SCM_TIMESTAMP SO_TIMESTAMP
#define EWOULDBLOCK EAGAIN
#define S_ISREG(mode) __S_ISTYPE((mode), __S_IFREG)
#define PRIdFAST8 "d"
#define S_IXGRP (S_IXUSR >> 3)
#define pkt_sets_n(ni) (ni)->packets->sets_n
#define __glibc_fortify(f,__l,__s,__osz,...) (__glibc_safe_or_unknown_len (__l, __s, __osz) ? __ ## f ## _alias (__VA_ARGS__) : (__glibc_unsafe_len (__l, __s, __osz) ? __ ## f ## _chk_warn (__VA_ARGS__, __osz) : __ ## f ## _chk (__VA_ARGS__, __osz)))
#define CI_IPID_BLOCK_COUNT (((CI_IPID_MAX+1)/CI_IPID_BLOCK_LENGTH) - (CI_IPID_MIN/CI_IPID_BLOCK_LENGTH))
#define SO_TIMESTAMPING_NEW 65
#define NETLINK_SOCK_DIAG 4
#define NI_OPTS(ni) ((ni)->state->opts)
#define _CS_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS
#define SIOCGIFSLAVE 0x8929
#define sigev_notify_function _sigev_un._sigev_thread._function
#define CP_VERLOCK_START(var_,mib_,cp_) _verlock_again: (var_) = OO_ACCESS_ONCE(*(cp_)->mib[0].version); (mib_) = &(cp_)->mib[(var_) & 1];
#define OO_PP_IS_NULL(pp) ((pp) < 0)
#define OO_IOC_R(XXX,t) _IOR(OO_LINUX_IOC_BASE, OO_OP_ ##XXX, t)
#define _SC_LEVEL1_ICACHE_LINESIZE _SC_LEVEL1_ICACHE_LINESIZE
#define PF_KEY 15
#define __DEC32_MANT_DIG__ 7
#define __PIE__ 2
#define NETLINK_KOBJECT_UEVENT 15
#define ONLOAD_BUILD_PROFILE ""
#define NTS_FMT "%d:%d %s "
#define CITP_RX_TIMESTAMPING_TRAILER_FORMAT_CPACKET 0
#define INTMAX_C(c) c ## L
#define ILL_PRVOPC ILL_PRVOPC
#define CI_IP_SOCK_STATS_INC_SEQERR(ts) __CI_SOCK_STATS_INC( (ts), rx_seqerr )
#define ETH_P_XDSA 0x00F8
#define NLM_F_MATCH 0x200
#define EADDRINUSE 98
#define SIOCSIFADDR 0x8916
#define TIOCSWINSZ 0x5414
#define ETH_P_WAN_PPP 0x0007
#define ci_fifo_ctor_wcast(f,cap,prc,cast) do{ (f)->fifo = cast ci_alloc(((cap)+1)*sizeof((f)->fifo[0])); ci_fifo_init((f), (cap)); ci_assert(!(f)->fifo || ci_fifo_valid(f)); *(prc) = (f)->fifo ? 0 : -ENOMEM; }while(0)
#define ci_in_interrupt() 0
#define IN_CLASSC_NSHIFT 8
#define SIGEV_NONE SIGEV_NONE
#define OO_MMAP_ID_SHIFT (OO_MMAP_TYPE_WIDTH + OO_MMAP_TYPE_SHIFT)
#define MULTICAST_LIMITATIONS_NOTE "\nSee the OpenOnload manual for further details on multicast operation."
#define CP_SVC_BACKENDS_PER_ARRAY 128
#define CITP_RX_TIMESTAMPING_SOURCE_TRAILER 1
#define CICPOS_RETRRC(rc,reqs) ((rc) | (reqs))
#define S_ISUID __S_ISUID
#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
#define TCFLSH 0x540B
#define ci_fifo2_peek_i(f,i) ((f)->fifo[CI_FIFO2_M((f), (f)->fifo_rd_i+(i))])
#define CI_TCPT_FLAG_FIN_PENDING 0x800000
#define OO_SCP_FLAGS_ARG(cp_flags) ((cp_flags) & OO_SCP_NO_MULTICAST ? "NO_MULTICAST ":""), ((cp_flags) & OO_SCP_UDP_WILD ? "UDP_WILD ":""), ((cp_flags) & OO_SCP_BOUND_ADDR ? "BOUND_ADDR ":""), ((cp_flags) & OO_SCP_TPROXY ? "TPROXY ":"")
#define LINUX_VERSION_PATCHLEVEL 8
#define TIOCM_RTS 0x004
#define CI_IP6_IS_MULTICAST(a) (((const ci_uint8 *) (a))[0] == 0xff)
#define CI_SB_FLAG_RX_DELIVERED 0x8
#define ci_iarray_assert_sorted(s,e) 
#define POLL_IN POLL_IN
#define IS_VALID_SOCK_ID(ni,id) ((unsigned) (id) < (ni)->state->n_ep_bufs)
#define CI_MAC_PRINTF_ARGS(p) ((unsigned) ((ci_uint8*)(p))[0]), ((unsigned) ((ci_uint8*)(p))[1]), ((unsigned) ((ci_uint8*)(p))[2]), ((unsigned) ((ci_uint8*)(p))[3]), ((unsigned) ((ci_uint8*)(p))[4]), ((unsigned) ((ci_uint8*)(p))[5])
#define EFAB_NIC_DP_DEFAULT_tx_fifo_bytes 32768
#define __SIZEOF_PTHREAD_RWLOCK_T 56
#define ci_irqlock_lock_dbg(l,s,fl,ln) ci_irqlock_lock_i((l),(s))
#define ci_snprintf snprintf
#define timeradd(a,b,result) do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)
#define CI_PKT_FLAG_MSG_CONFIRM 0x0020
#define _POSIX_THREAD_ROBUST_PRIO_INHERIT 200809L
#define SI_TIMER SI_TIMER
#define CI_CFG_TCP_DEFAULT_MSS 536
#define _POSIX_THREAD_SAFE_FUNCTIONS 200809L
#define CITP_SCALABLE_MODE_ACTIVE_RSS (CITP_SCALABLE_MODE_ACTIVE | CITP_SCALABLE_MODE_RSS)
#define ELIBMAX 82
#define TIOCGEXCL _IOR('T', 0x40, int)
#define __sigstack_defined 1
#define PTR_ERR(ptr) ((long)((uintptr_t)(ptr)))
#define CI_IP_SOCK_STATS_INC_DUPACKCONGFREC(ts) __CI_SOCK_STATS_INC( (ts), rx_dupack_congfrec )
#define CI_FIFO_DEFINE_GET(name,fifo_t,elem_t) ci_inline elem_t name(fifo_t* f) { elem_t v = ci_fifo_peek(f); ci_fifo_rd_next(f); return v; }
#define TIOCMBIC 0x5417
#define TRUSTED_PKT_ID(ni,id) __TRUSTED_PKT_ID((ni), (id), __FILE__, __LINE__)
#define CITP_SCALABLE_FILTERS_ALL -1
#define FASYNC O_ASYNC
#define AF_ISDN PF_ISDN
#define SIOCDEVPRIVATE 0x89F0
#define IPX_SOCKADDR_SIZE(af) (sizeof(struct sockaddr_in))
#define CI_PKT_FLAGS_FMT "%s%s%s%s%s%s%s%s%s%s"
#define CI_TCP_EXT_STATS_INC_TCP_DSACK_RECV(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_dsack_recv )
#define IPV6_MULTICAST_LOOP 19
#define F_DUPFD_CLOEXEC 1030
#define CI_TCP_OPT_WINSCALE 0x3
#define CI_TCP_FLAG_FIN_BIT 0
#define CI_FIFO2_FMT "[rd=%x wr=%x num=%d(%d) spc=%d(%d)]"
#define CI_TCPT_FLAG_WAS_ESTAB 0x40
#define _ci_assert_impl(exp1,exp2,file,line) do{}while(0)
#define ENOENT 2
#define NETLINK_IP6_FW 13
#define F_SETFD 2
#define __CI_APP_TESTPATTERN_H__ 
#define IPV6_LEAVE_ANYCAST 28
#define NLM_F_CAPPED 0x100
#define __UINT32_TYPE__ unsigned int
#define CI_IP_STATS_MIN_VAL 0
#define SEQ_BTW(s,sl,sh) ((sh) - (sl) >= (s) - (sl))
#define PRId16 "d"
#define PF_IB 27
#define PRIuFAST64 __PRI64_PREFIX "u"
#define CI_CFG_IRANGE 7
#define OO_IOC_TCP_SOCK_SLEEP OO_IOC_RW(TCP_SOCK_SLEEP, oo_tcp_sock_sleep_t)
#define N_IRDA 11
#define ci_fifo_poke_i(f,i) ((f)->fifo[CI_FIFO_M((f), (f)->fifo_wr_i+(i))])
#define __SIGEV_PAD_SIZE ((__SIGEV_MAX_SIZE / sizeof (int)) - 4)
#define ci_assert(exp) _ci_assert(exp, __FILE__, __LINE__)
#define __glibc_has_builtin(name) __has_builtin (name)
#define SIOGIFINDEX SIOCGIFINDEX
#define CI_NETIF_NIC_ERRORS_FMT "%s"
#define MADV_HUGEPAGE 14
#define SIGTERM 15
#define CP_FWD_KEY_REQ_REFRESH 0x80
#define _PC_2_SYMLINKS _PC_2_SYMLINKS
#define __FSFILCNT64_T_TYPE __UQUAD_TYPE
#define EBADSLT 57
#define _PATH_SERVICES "/etc/services"
#define IPV6_PMTUDISC_DONT 0
#define CI_UDPF_MCAST_JOIN 0x00008000
#define AI_CANONNAME 0x0002
#define EMEDIUMTYPE 124
#define EKEYREVOKED 128
#define CI_IP_PRINTF_ARGS(p_be32) ((int) ((ci_uint8*)(p_be32))[0]), ((int) ((ci_uint8*)(p_be32))[1]), ((int) ((ci_uint8*)(p_be32))[2]), ((int) ((ci_uint8*)(p_be32))[3])
#define __FD_ELT(d) __extension__ ({ long int __d = (d); (__builtin_constant_p (__d) ? (0 <= __d && __d < __FD_SETSIZE ? (__d / __NFDBITS) : __fdelt_warn (__d)) : __fdelt_chk (__d)); })
#define OO_IOC_CP_FWD_RESOLVE OO_IOC_W(CP_FWD_RESOLVE, struct cp_fwd_key)
#define ci_frc32(pval) __asm__ __volatile__("rdtsc" : "=a" (*pval) : : "edx")
#define __attribute_deprecated__ __attribute__ ((__deprecated__))
#define PRId32 "d"
#define _ci_check(exp,file,line) do{}while(0)
#define IPV6_RTHDR_STRICT 1
#define __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
#define CP_REHASH_LIMIT(mask) ((mask) >> 2)
#define _SC_CHAR_MAX _SC_CHAR_MAX
#define CI_TRY(exp) do{ int _trc; _trc=(exp); if( CI_UNLIKELY(_trc < 0) ) ci_sys_fail(#exp, _trc); }while(0)
#define __SI_HAVE_SIGSYS 1
#define MAP_ANONYMOUS 0x20
#define CI_CFG_TCP_INITIAL_CWND_RFC 2581
#define __ONCE_FLAG_INIT { 0 }
#define CI_ALLOC_TABLE_BULK_2 7
#define __CI_APP_PLATFORM_UNIX_H__ 
#define ci_fifo_contig_space(f) (((f)->fifo_rd_i > (f)->fifo_wr_i) ? (f)->fifo_rd_i - (f)->fifo_wr_i - 1 : (f)->fifo_size - (f)->fifo_wr_i - !(f)->fifo_rd_i)
#define __SIZEOF_LONG_LONG__ 8
#define MAP_NONBLOCK 0x10000
#define EHOSTUNREACH 113
#define ef_vi_transmit_push(vi) (vi)->ops.transmit_push((vi))
#define ci_assert_equal_msg(exp1,exp2,msg) _ci_assert_equal_msg(exp1, exp2, msg, __FILE__, __LINE__)
#define OO_IOC_OS_SOCK_ACCEPT OO_IOC_RW(OS_SOCK_ACCEPT, oo_os_sock_accept_t)
#define __TOOLS_CPLANE_PUBLIC_H__ 
#define HANDOVER_DESCRIPTION_UDP(_x) "All of the handover statistics represent sockets that have been handed " "to the kernel; and the call that was made that caused this." "  (In this case " #_x " with a UDP socket)  " "Most often, this is caused by routing over a non-accelerated interface " "(including loopback); but unsupported socket options and resource " "limitations can also cause this." "Also check per-socket os= counts, as UDP sockets can receive and send " "via multiple interfaces, and so might not be handed over, but might not " "actually be accelerating traffic)"
#define POSIX_FADV_SEQUENTIAL 2
#define SIOCSARP 0x8955
#define CI_SB_FLAG_WAKE_RX_B 1
#define _GCC_PTRDIFF_T 
#define CITP_STATS_TCP_LISTEN(x) x
#define ep_tbl_n(ni) (ni)->state->n_ep_bufs
#define __siginfo_t_defined 1
#define __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
#define NETLINK_TX_RING 7
#define CI_TCP_STATE_NO_TIMERS 0x040
#define CI_HF __attribute__((visibility("hidden")))
#define __LDBL_DIG__ 18
#define TIOCNOTTY 0x5422
#define LOG_NC(x) LOG_FL(CI_TP_LOG_NC, x)
#define CI_HV __attribute__((visibility("hidden")))
#define CI_DEBUG_ZERO(p) do{}while(0)
#define _SC_NZERO _SC_NZERO
#define OO_PP_INVALID -2
#define __UINT_FAST16_MAX__ 0xffffffffffffffffUL
#define EAI_SOCKTYPE -7
#define CI_MAX(x,y) (((x) > (y)) ? (x) : (y))
#define CI_PMTU_TCONST_DISCOVER_RECOVER (30*1000)
#define S_IROTH (S_IRGRP >> 3)
#define CI_SO_L5_GET_SOCK_STATS (__SO_L5_BASE+0x01)
#define POSIX_MADV_RANDOM 1
#define OO_IOC_CP_NOTIFY_LLAP_MONITORS OO_IOC_NONE(CP_NOTIFY_LLAP_MONITORS)
#define __CI_DEBUG_OP_DUMP_STACK__ (5)
#define uint64_t ci_uint64
#define SO_TIMESTAMPNS_OLD 35
#define EF_INVALID_ADDR ((ef_addr) -1)
#define ci_copy_iovec_to_pkt(ni,pkt,piov) __ci_copy_iovec_to_pkt((ni), (pkt), (piov))
#define OO_IOC_CP_ARP_RESOLVE OO_IOC_W(CP_ARP_RESOLVE, struct oo_op_cplane_arp_resolve)
#define _SC_BC_DIM_MAX _SC_BC_DIM_MAX
#define CI_IP_CMSG_TIMESTAMPNS 0x40
#define CI_SOCK_TRY_RET(exp) do{ ci_sock_err_t _trc; _trc=(exp); if( CI_UNLIKELY(!ci_sock_errok(_trc)) ) { ci_log("%s returned %d at %s:%d", #exp, _trc.val, __FILE__, __LINE__); return ci_sock_errcode(_trc); } }while(0)
#define CDISCARD CTRL('o')
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __SUSECONDS64_T_TYPE __SQUAD_TYPE
#define SIOCSIFTXQLEN 0x8943
#define IP_PMTUDISC_INTERFACE 4
#define SOL_MCTP 285
#define PF_VSOCK 40
#define ONLOAD_DELEGATED_SEND_FLAG_RESOLVE_ARP 0x2
#define __CI_TOOLS_UTILS_H__ 
#define OO_SIGHANGLER_TYPE_MASK 0x7
#define PRIoFAST8 "o"
#define CI_CFG_TCP_TCONST_MSL 25
#define __struct_group(TAG,NAME,ATTRS,MEMBERS...) union { struct { MEMBERS } ATTRS; struct __struct_group_tag(TAG) { MEMBERS } ATTRS NAME; } ATTRS
#define NETLINK_ROUTE 0
#define __FD_ISSET(d,s) ((__FDS_BITS (s)[__FD_ELT (d)] & __FD_MASK (d)) != 0)
#define CI_SB_AFLAG_O_APPEND 0x80
#define CI_FLAG_TSR_RETRIES_ACKED 0x80
#define CI_TCP_EXT_STATS_INC_TCP_DSACK_OFO_SENT(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_dsack_ofo_sent )
#define ci_assert_flags(val,flags) _ci_assert_flags(val, flags, __FILE__, __LINE__)
#define SO_PRIORITY 12
#define ETH_FCS_LEN 4
#define ci_assume(exp) do{ if( CI_UNLIKELY(!(exp)) ) ci_unreachable(); }while(0)
#define ETHERMIN (ETHER_MIN_LEN - ETHER_HDR_LEN - ETHER_CRC_LEN)
#define CI_TCP_EXT_STATS_INC_TCP_RCV_COLLAPSED(netif) __CI_TCP_EXT_STATS_INC( (netif), tcp_rcv_collapsed )
#define CI_TRACE_IP(ip_be32) 
#define CI_SOCK_FLAG_STACK_FILTER 0x00080000
#define PF_LOCAL 1
#define __S_ISGID 02000
#define CI_SOCK_FLAG_CONNECT_MUST_BIND 0x00004000
#define S_IFIFO __S_IFIFO
#define SCNuFAST8 "hhu"
#define __WCHAR_T 
#define ci_irqlock_t ci_irqlock_i
#define __fsblkcnt_t_defined 
#define FPE_FLTUND FPE_FLTUND
#define __LP64_OFF64_CFLAGS "-m64"
#define FPE_FLTUNK FPE_FLTUNK
#define __CI_NET_IPV4_H__ 
#define _XOPEN_XPG2 1
#define X_OK 1
#define IPPROTO_UDPLITE IPPROTO_UDPLITE
#define ETH_P_CONTROL 0x0016
#define ci_bufrange_assert_valid(br) 
#define CI_BUILD_ASSERT_CONSTANT_NON_NEGATIVE(c) do { char __CI_BUILD_ASSERT_NAME(__LINE__) [ __builtin_choose_expr(__builtin_constant_p(c), (c), 0)] __attribute__((unused)); } while(0)
#define CI_CPU_WARNING (-3)
